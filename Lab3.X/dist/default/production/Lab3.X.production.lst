

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 09 16:49:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001F                     _ADCON0bits	set	31
   208  0009                     _PORTE	set	9
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  003E                     _RC6	set	62
   214  003D                     _RC5	set	61
   215  003C                     _RC4	set	60
   216  009E                     _ADRESL	set	158
   217  008F                     _OSCCONbits	set	143
   218  009F                     _ADCON1bits	set	159
   219  0089                     _TRISE	set	137
   220  0088                     _TRISD	set	136
   221  0087                     _TRISC	set	135
   222  0086                     _TRISB	set	134
   223  0085                     _TRISA	set	133
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           	psect	strings
   228  0003                     __pstrings:	
   229  0003                     stringtab:	
   230  0003                     __stringtab:	
   231                           
   232                           ;	String table - string pointers are 1 byte each
   233  0003  1BFF               	btfsc	btemp+1,7
   234  0004  280D               	ljmp	stringcode
   235  0005  1383               	bcf	3,7
   236  0006  187F               	btfsc	btemp+1,0
   237  0007  1783               	bsf	3,7
   238  0008  0800               	movf	0,w
   239  0009  0A84               	incf	4,f
   240  000A  1903               	skipnz
   241  000B  0AFF               	incf	btemp+1,f
   242  000C  0008               	return
   243  000D                     stringcode:	
   244  000D                     stringdir:	
   245  000D  3000               	movlw	high stringdir
   246  000E  008A               	movwf	10
   247  000F  0804               	movf	4,w
   248  0010  0A84               	incf	4,f
   249  0011  0782               	addwf	2,f
   250  0012                     __stringbase:	
   251  0012  3400               	retlw	0
   252  0013                     __end_of__stringtab:	
   253  0013                     STR_1:	
   254  0013  3448               	retlw	72	;'H'
   255  0014  3445               	retlw	69	;'E'
   256  0015  344C               	retlw	76	;'L'
   257  0016  344C               	retlw	76	;'L'
   258  0017  344F               	retlw	79	;'O'
   259  0018  3400               	retlw	0
   260                           
   261                           ; #config settings
   262  0000                     
   263                           	psect	cinit
   264  07FB                     start_initialization:	
   265  07FB                     __initialization:	
   266                           
   267                           ; Clear objects allocated to COMMON
   268  07FB  01F8               	clrf	__pbssCOMMON& (0+127)
   269  07FC                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  07FC                     __end_of__initialization:	
   273  07FC  0183               	clrf	3
   274  07FD  120A  118A  2F9C   	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMMON
   277  0078                     __pbssCOMMON:	
   278  0078                     _voltaje:	
   279  0078                     	ds	1
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:	
   283  0070                     ?_lcd_init:	
   284  0070                     ?_lcd_cmd:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_lcd_ready:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_lcd_ready:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_lcd_lat:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_lcd_lat:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_lcd_dwr:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0070                     	ds	2
   308  0072                     ??_lcd_cmd:	
   309  0072                     ??_lcd_dwr:	
   310                           ; 1 bytes @ 0x2
   311                           
   312  0072                     lcd_cmd@x:	
   313                           ; 1 bytes @ 0x2
   314                           
   315  0072                     lcd_dwr@x:	
   316                           ; 1 bytes @ 0x2
   317                           
   318                           
   319                           ; 1 bytes @ 0x2
   320  0072                     	ds	1
   321  0073                     ??_lcd_init:	
   322  0073                     ?_lcd_msg:	
   323                           ; 1 bytes @ 0x3
   324                           
   325  0073                     lcd_msg@c:	
   326                           ; 1 bytes @ 0x3
   327                           
   328                           
   329                           ; 2 bytes @ 0x3
   330  0073                     	ds	2
   331  0075                     ??_lcd_msg:	
   332  0075                     ??_main:	
   333                           ; 1 bytes @ 0x5
   334                           
   335                           
   336                           ; 1 bytes @ 0x5
   337  0075                     	ds	3
   338                           
   339                           	psect	maintext
   340  079C                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 52 in file "Lab3.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          3       0       0       0       0
   363 ;;      Totals:         3       0       0       0       0
   364 ;;Total ram usage:        3 bytes
   365 ;; Hardware stack levels required when called:    3
   366 ;; This function calls:
   367 ;;		_lcd_cmd
   368 ;;		_lcd_init
   369 ;;		_lcd_msg
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  079C                     _main:	
   378  079C                     l799:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   381                           
   382                           
   383                           ;Lab3.c: 54:     ANSEL = 0b00001001;
   384  079C  3009               	movlw	9
   385  079D  1683               	bsf	3,5	;RP0=1, select bank3
   386  079E  1703               	bsf	3,6	;RP1=1, select bank3
   387  079F  0088               	movwf	8	;volatile
   388  07A0                     l801:	
   389                           
   390                           ;Lab3.c: 55:     ANSELH= 0b00000000;
   391  07A0  0189               	clrf	9	;volatile
   392  07A1                     l803:	
   393                           
   394                           ;Lab3.c: 56:     TRISA = 0b00001001;
   395  07A1  3009               	movlw	9
   396  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   397  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   398  07A4  0085               	movwf	5	;volatile
   399                           
   400                           ;Lab3.c: 57:     TRISB = 0b00000000;
   401  07A5  0186               	clrf	6	;volatile
   402                           
   403                           ;Lab3.c: 58:     TRISC = 0b00000000;
   404  07A6  0187               	clrf	7	;volatile
   405                           
   406                           ;Lab3.c: 59:     TRISD = 0b00000000;
   407  07A7  0188               	clrf	8	;volatile
   408                           
   409                           ;Lab3.c: 60:     TRISE = 0;
   410  07A8  0189               	clrf	9	;volatile
   411                           
   412                           ;Lab3.c: 62:     PORTA = 0;
   413  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   414  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   415  07AB  0185               	clrf	5	;volatile
   416                           
   417                           ;Lab3.c: 63:     PORTB = 0;
   418  07AC  0186               	clrf	6	;volatile
   419                           
   420                           ;Lab3.c: 64:     PORTC = 0;
   421  07AD  0187               	clrf	7	;volatile
   422                           
   423                           ;Lab3.c: 65:     PORTD = 0;
   424  07AE  0188               	clrf	8	;volatile
   425                           
   426                           ;Lab3.c: 66:     PORTE = 0;
   427  07AF  0189               	clrf	9	;volatile
   428  07B0                     l805:	
   429                           
   430                           ;Lab3.c: 68:     ADCON0bits.ADCS0 = 1;
   431  07B0  171F               	bsf	31,6	;volatile
   432  07B1                     l807:	
   433                           
   434                           ;Lab3.c: 69:     ADCON0bits.ADCS1 = 0;
   435  07B1  139F               	bcf	31,7	;volatile
   436  07B2                     l809:	
   437                           
   438                           ;Lab3.c: 70:     ADCON0bits.CHS0 = 1;
   439  07B2  151F               	bsf	31,2	;volatile
   440  07B3                     l811:	
   441                           
   442                           ;Lab3.c: 71:     ADCON0bits.CHS1 = 0;
   443  07B3  119F               	bcf	31,3	;volatile
   444  07B4                     l813:	
   445                           
   446                           ;Lab3.c: 72:     ADCON0bits.CHS2 = 1;
   447  07B4  161F               	bsf	31,4	;volatile
   448  07B5                     l815:	
   449                           
   450                           ;Lab3.c: 73:     ADCON0bits.CHS3 = 1;
   451  07B5  169F               	bsf	31,5	;volatile
   452  07B6                     l817:	
   453                           
   454                           ;Lab3.c: 74:     ADCON0bits.ADON = 1;
   455  07B6  141F               	bsf	31,0	;volatile
   456  07B7                     l819:	
   457                           
   458                           ;Lab3.c: 75:     ADCON1bits.ADFM = 1;
   459  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   460  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   461  07B9  179F               	bsf	31,7	;volatile
   462  07BA                     l821:	
   463                           
   464                           ;Lab3.c: 76:     ADCON1bits.VCFG0 = 0;
   465  07BA  121F               	bcf	31,4	;volatile
   466  07BB                     l823:	
   467                           
   468                           ;Lab3.c: 77:     ADCON1bits.VCFG1 = 0;
   469  07BB  129F               	bcf	31,5	;volatile
   470  07BC                     l825:	
   471                           
   472                           ;Lab3.c: 79:     OSCCONbits.IRCF = 0b110;
   473  07BC  080F               	movf	15,w	;volatile
   474  07BD  398F               	andlw	-113
   475  07BE  3860               	iorlw	96
   476  07BF  008F               	movwf	15	;volatile
   477  07C0                     l827:	
   478                           
   479                           ;Lab3.c: 80:     OSCCONbits.OSTS= 0;
   480  07C0  118F               	bcf	15,3	;volatile
   481  07C1                     l829:	
   482                           
   483                           ;Lab3.c: 81:     OSCCONbits.HTS = 0;
   484  07C1  110F               	bcf	15,2	;volatile
   485  07C2                     l831:	
   486                           
   487                           ;Lab3.c: 82:     OSCCONbits.LTS = 0;
   488  07C2  108F               	bcf	15,1	;volatile
   489  07C3                     l833:	
   490                           
   491                           ;Lab3.c: 83:     OSCCONbits.SCS = 1;
   492  07C3  140F               	bsf	15,0	;volatile
   493  07C4                     l835:	
   494                           
   495                           ;Lab3.c: 87:     {;Lab3.c: 88:        lcd_init();
   496  07C4  120A  118A  272E  120A  118A  	fcall	_lcd_init
   497  07C9                     l837:	
   498                           
   499                           ;Lab3.c: 89:        lcd_msg("HELLO");
   500  07C9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   501  07CA  00F3               	movwf	lcd_msg@c
   502  07CB  3080               	movlw	128
   503  07CC  00F4               	movwf	lcd_msg@c+1
   504  07CD  120A  118A  274D  120A  118A  	fcall	_lcd_msg
   505  07D2                     l839:	
   506                           
   507                           ;Lab3.c: 90:        lcd_cmd(0xC0);
   508  07D2  30C0               	movlw	192
   509  07D3  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   510  07D8                     l841:	
   511                           
   512                           ;Lab3.c: 91:        lcd_msg(voltaje);
   513  07D8  0878               	movf	_voltaje,w
   514  07D9  00F5               	movwf	??_main
   515  07DA  01F6               	clrf	??_main+1
   516  07DB  0875               	movf	??_main,w
   517  07DC  00F3               	movwf	lcd_msg@c
   518  07DD  0876               	movf	??_main+1,w
   519  07DE  00F4               	movwf	lcd_msg@c+1
   520  07DF  120A  118A  274D  120A  118A  	fcall	_lcd_msg
   521  07E4                     l843:	
   522                           
   523                           ;Lab3.c: 93:            lcd_cmd(0x1C);
   524  07E4  301C               	movlw	28
   525  07E5  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   526  07EA                     l845:	
   527                           
   528                           ;Lab3.c: 94:            _delay((unsigned long)((250)*(4000000/4000.0)));
   529  07EA  3002               	movlw	2
   530  07EB  00F7               	movwf	??_main+2
   531  07EC  3045               	movlw	69
   532  07ED  00F6               	movwf	??_main+1
   533  07EE  30A9               	movlw	169
   534  07EF  00F5               	movwf	??_main
   535  07F0                     u47:	
   536  07F0  0BF5               	decfsz	??_main,f
   537  07F1  2FF0               	goto	u47
   538  07F2  0BF6               	decfsz	??_main+1,f
   539  07F3  2FF0               	goto	u47
   540  07F4  0BF7               	decfsz	??_main+2,f
   541  07F5  2FF0               	goto	u47
   542  07F6  2FF7               	nop2
   543  07F7  2FE4               	goto	l843
   544  07F8  120A  118A  2800   	ljmp	start
   545  07FB                     __end_of_main:	
   546                           
   547                           	psect	text1
   548  074D                     __ptext1:	
   549 ;; *************** function _lcd_msg *****************
   550 ;; Defined at:
   551 ;;		line 142 in file "Lab3.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  c               2    3[COMMON] PTR unsigned char 
   554 ;;		 -> RAM(512), STR_1(6), 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         2       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         2       0       0       0       0
   570 ;;Total ram usage:        2 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		_lcd_dwr
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _lcd_msg
   582  074D                     _lcd_msg:	
   583  074D                     l791:	
   584                           ;incstack = 0
   585                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   586                           
   587                           
   588                           ;Lab3.c: 143:     while(*c != 0)
   589  074D  2F62               	goto	l797
   590  074E                     l793:	
   591                           
   592                           ;Lab3.c: 144:         lcd_dwr(*c++);
   593  074E  0874               	movf	lcd_msg@c+1,w
   594  074F  00FF               	movwf	btemp+1
   595  0750  0873               	movf	lcd_msg@c,w
   596  0751  0084               	movwf	4
   597  0752  120A  118A  2003  120A  118A  	fcall	stringtab
   598  0757  120A  118A  271C  120A  118A  	fcall	_lcd_dwr
   599  075C                     l795:	
   600  075C  3001               	movlw	1
   601  075D  07F3               	addwf	lcd_msg@c,f
   602  075E  1803               	skipnc
   603  075F  0AF4               	incf	lcd_msg@c+1,f
   604  0760  3000               	movlw	0
   605  0761  07F4               	addwf	lcd_msg@c+1,f
   606  0762                     l797:	
   607                           
   608                           ;Lab3.c: 143:     while(*c != 0)
   609  0762  0874               	movf	lcd_msg@c+1,w
   610  0763  1283               	bcf	3,5	;RP0=0, select bank0
   611  0764  1303               	bcf	3,6	;RP1=0, select bank0
   612  0765  00FF               	movwf	btemp+1
   613  0766  0873               	movf	lcd_msg@c,w
   614  0767  0084               	movwf	4
   615  0768  120A  118A  2003  120A  118A  	fcall	stringtab
   616  076D  3A00               	xorlw	0
   617  076E  1D03               	skipz
   618  076F  2F71               	goto	u31
   619  0770  2F72               	goto	u30
   620  0771                     u31:	
   621  0771  2F4E               	goto	l793
   622  0772                     u30:	
   623  0772                     l84:	
   624  0772  0008               	return
   625  0773                     __end_of_lcd_msg:	
   626                           
   627                           	psect	text2
   628  071C                     __ptext2:	
   629 ;; *************** function _lcd_dwr *****************
   630 ;; Defined at:
   631 ;;		line 134 in file "Lab3.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  x               1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  x               1    2[COMMON] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         1       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0
   648 ;;      Totals:         1       0       0       0       0
   649 ;;Total ram usage:        1 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    1
   652 ;; This function calls:
   653 ;;		_lcd_lat
   654 ;;		_lcd_ready
   655 ;; This function is called by:
   656 ;;		_lcd_msg
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _lcd_dwr
   662  071C                     _lcd_dwr:	
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
   666                           ;lcd_dwr@x stored from wreg
   667  071C  00F2               	movwf	lcd_dwr@x
   668  071D                     l715:	
   669                           
   670                           ;Lab3.c: 135:     lcd_ready();
   671  071D  120A  118A  2773  120A  118A  	fcall	_lcd_ready
   672  0722                     l717:	
   673                           
   674                           ;Lab3.c: 136:     PORTB = x;
   675  0722  0872               	movf	lcd_dwr@x,w
   676  0723  1283               	bcf	3,5	;RP0=0, select bank0
   677  0724  1303               	bcf	3,6	;RP1=0, select bank0
   678  0725  0086               	movwf	6	;volatile
   679  0726                     l719:	
   680                           
   681                           ;Lab3.c: 137:     RC4 = 1;
   682  0726  1607               	bsf	7,4	;volatile
   683  0727                     l721:	
   684                           
   685                           ;Lab3.c: 138:     RC5 = 0;
   686  0727  1287               	bcf	7,5	;volatile
   687  0728                     l723:	
   688                           
   689                           ;Lab3.c: 139:     lcd_lat();
   690  0728  120A  118A  26FB  120A  118A  	fcall	_lcd_lat
   691  072D                     l78:	
   692  072D  0008               	return
   693  072E                     __end_of_lcd_dwr:	
   694                           
   695                           	psect	text3
   696  072E                     __ptext3:	
   697 ;; *************** function _lcd_init *****************
   698 ;; Defined at:
   699 ;;		line 147 in file "Lab3.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		_lcd_cmd
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _lcd_init
   729  072E                     _lcd_init:	
   730  072E                     l725:	
   731                           ;incstack = 0
   732                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   733                           
   734                           
   735                           ;Lab3.c: 148:     lcd_cmd(0x38);
   736  072E  3038               	movlw	56
   737  072F  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   738                           
   739                           ;Lab3.c: 149:     lcd_cmd(0x0C);
   740  0734  300C               	movlw	12
   741  0735  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   742                           
   743                           ;Lab3.c: 150:     lcd_cmd(0x01);
   744  073A  3001               	movlw	1
   745  073B  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   746                           
   747                           ;Lab3.c: 151:     lcd_cmd(0x06);
   748  0740  3006               	movlw	6
   749  0741  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   750                           
   751                           ;Lab3.c: 152:     lcd_cmd(0x80);
   752  0746  3080               	movlw	128
   753  0747  120A  118A  270A  120A  118A  	fcall	_lcd_cmd
   754  074C                     l87:	
   755  074C  0008               	return
   756  074D                     __end_of_lcd_init:	
   757                           
   758                           	psect	text4
   759  070A                     __ptext4:	
   760 ;; *************** function _lcd_cmd *****************
   761 ;; Defined at:
   762 ;;		line 104 in file "Lab3.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  x               1    wreg     unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  x               1    2[COMMON] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2, status,0, pclath, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         1       0       0       0       0
   780 ;;Total ram usage:        1 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    1
   783 ;; This function calls:
   784 ;;		_lcd_lat
   785 ;;		_lcd_ready
   786 ;; This function is called by:
   787 ;;		_main
   788 ;;		_lcd_init
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _lcd_cmd
   794  070A                     _lcd_cmd:	
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
   798                           ;lcd_cmd@x stored from wreg
   799  070A  00F2               	movwf	lcd_cmd@x
   800  070B                     l705:	
   801                           
   802                           ;Lab3.c: 105:     lcd_ready();
   803  070B  120A  118A  2773  120A  118A  	fcall	_lcd_ready
   804  0710                     l707:	
   805                           
   806                           ;Lab3.c: 106:     PORTB = x;
   807  0710  0872               	movf	lcd_cmd@x,w
   808  0711  1283               	bcf	3,5	;RP0=0, select bank0
   809  0712  1303               	bcf	3,6	;RP1=0, select bank0
   810  0713  0086               	movwf	6	;volatile
   811  0714                     l709:	
   812                           
   813                           ;Lab3.c: 107:     RC4 = 0;
   814  0714  1207               	bcf	7,4	;volatile
   815  0715                     l711:	
   816                           
   817                           ;Lab3.c: 108:     RC5 = 0;
   818  0715  1287               	bcf	7,5	;volatile
   819  0716                     l713:	
   820                           
   821                           ;Lab3.c: 109:     lcd_lat();
   822  0716  120A  118A  26FB  120A  118A  	fcall	_lcd_lat
   823  071B                     l67:	
   824  071B  0008               	return
   825  071C                     __end_of_lcd_cmd:	
   826                           
   827                           	psect	text5
   828  0773                     __ptext5:	
   829 ;; *************** function _lcd_ready *****************
   830 ;; Defined at:
   831 ;;		line 117 in file "Lab3.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          2       0       0       0       0
   848 ;;      Totals:         2       0       0       0       0
   849 ;;Total ram usage:        2 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_lcd_cmd
   855 ;;		_lcd_dwr
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _lcd_ready
   861  0773                     _lcd_ready:	
   862  0773                     l679:	
   863                           ;incstack = 0
   864                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
   865                           
   866                           
   867                           ;Lab3.c: 118:     PORTB = 0xFF;
   868  0773  30FF               	movlw	255
   869  0774  1283               	bcf	3,5	;RP0=0, select bank0
   870  0775  1303               	bcf	3,6	;RP1=0, select bank0
   871  0776  0086               	movwf	6	;volatile
   872  0777                     l681:	
   873                           
   874                           ;Lab3.c: 119:     PORTB &= 0x80;
   875  0777  3080               	movlw	128
   876  0778  00F0               	movwf	??_lcd_ready
   877  0779  0870               	movf	??_lcd_ready,w
   878  077A  0586               	andwf	6,f	;volatile
   879  077B                     l683:	
   880                           
   881                           ;Lab3.c: 120:     RC4 = 0;
   882  077B  1207               	bcf	7,4	;volatile
   883  077C                     l685:	
   884                           
   885                           ;Lab3.c: 121:     RC5 = 1;
   886  077C  1687               	bsf	7,5	;volatile
   887  077D                     l687:	
   888                           
   889                           ;Lab3.c: 122:     RC6 = 0;
   890  077D  1307               	bcf	7,6	;volatile
   891  077E                     l689:	
   892                           
   893                           ;Lab3.c: 123:     _delay((unsigned long)((30)*(4000000/4000.0)));
   894  077E  3027               	movlw	39
   895  077F  00F1               	movwf	??_lcd_ready+1
   896  0780  30F5               	movlw	245
   897  0781  00F0               	movwf	??_lcd_ready
   898  0782                     u57:	
   899  0782  0BF0               	decfsz	??_lcd_ready,f
   900  0783  2F82               	goto	u57
   901  0784  0BF1               	decfsz	??_lcd_ready+1,f
   902  0785  2F82               	goto	u57
   903  0786                     l691:	
   904                           
   905                           ;Lab3.c: 124:     RC6 = 1;
   906  0786  1283               	bcf	3,5	;RP0=0, select bank0
   907  0787  1303               	bcf	3,6	;RP1=0, select bank0
   908  0788  1707               	bsf	7,6	;volatile
   909                           
   910                           ;Lab3.c: 125:     if (PORTB == 0x80){
   911  0789  3080               	movlw	128
   912  078A  0606               	xorwf	6,w	;volatile
   913  078B  1D03               	btfss	3,2
   914  078C  2F8E               	goto	u11
   915  078D  2F8F               	goto	u10
   916  078E                     u11:	
   917  078E  2F9B               	goto	l75
   918  078F                     u10:	
   919  078F                     l693:	
   920                           
   921                           ;Lab3.c: 126:     RC6 = 0;
   922  078F  1307               	bcf	7,6	;volatile
   923  0790                     l695:	
   924                           
   925                           ;Lab3.c: 127:     _delay((unsigned long)((30)*(4000000/4000.0)));
   926  0790  3027               	movlw	39
   927  0791  00F1               	movwf	??_lcd_ready+1
   928  0792  30F5               	movlw	245
   929  0793  00F0               	movwf	??_lcd_ready
   930  0794                     u67:	
   931  0794  0BF0               	decfsz	??_lcd_ready,f
   932  0795  2F94               	goto	u67
   933  0796  0BF1               	decfsz	??_lcd_ready+1,f
   934  0797  2F94               	goto	u67
   935  0798                     l697:	
   936                           
   937                           ;Lab3.c: 128:     RC6 = 1;
   938  0798  1283               	bcf	3,5	;RP0=0, select bank0
   939  0799  1303               	bcf	3,6	;RP1=0, select bank0
   940  079A  1707               	bsf	7,6	;volatile
   941  079B                     l75:	
   942                           ;Lab3.c: 129:     }
   943                           
   944  079B  0008               	return
   945  079C                     __end_of_lcd_ready:	
   946                           
   947                           	psect	text6
   948  06FB                     __ptext6:	
   949 ;; *************** function _lcd_lat *****************
   950 ;; Defined at:
   951 ;;		line 112 in file "Lab3.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0
   967 ;;      Temps:          2       0       0       0       0
   968 ;;      Totals:         2       0       0       0       0
   969 ;;Total ram usage:        2 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_lcd_cmd
   975 ;;		_lcd_dwr
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _lcd_lat
   981  06FB                     _lcd_lat:	
   982  06FB                     l699:	
   983                           ;incstack = 0
   984                           ; Regs used in _lcd_lat: [wreg]
   985                           
   986                           
   987                           ;Lab3.c: 113:     RC6 = 1;
   988  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   989  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   990  06FD  1707               	bsf	7,6	;volatile
   991  06FE                     l701:	
   992                           
   993                           ;Lab3.c: 114:    _delay((unsigned long)((30)*(4000000/4000.0)));
   994  06FE  3027               	movlw	39
   995  06FF  00F1               	movwf	??_lcd_lat+1
   996  0700  30F5               	movlw	245
   997  0701  00F0               	movwf	??_lcd_lat
   998  0702                     u77:	
   999  0702  0BF0               	decfsz	??_lcd_lat,f
  1000  0703  2F02               	goto	u77
  1001  0704  0BF1               	decfsz	??_lcd_lat+1,f
  1002  0705  2F02               	goto	u77
  1003  0706                     l703:	
  1004                           
  1005                           ;Lab3.c: 115:    RC6 = 0;
  1006  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0708  1307               	bcf	7,6	;volatile
  1009  0709                     l70:	
  1010  0709  0008               	return
  1011  070A                     __end_of_lcd_lat:	
  1012  007E                     btemp	set	126	;btemp
  1013  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_lcd_msg
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     242
                                              5 COMMON     3     3      0
                            _lcd_cmd
                           _lcd_init
                            _lcd_msg
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     212
                                              3 COMMON     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              1     1      0      15
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      15
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _lcd_lat
     _lcd_ready
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _lcd_ready
   _lcd_msg
     _lcd_dwr
       _lcd_lat
       _lcd_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 09 16:49:51 2020

                       pc 0002               __CFG_CP$OFF 0000                        l70 0709  
                      l75 079B                        l67 071B                        l84 0772  
                      l78 072D                        l87 074C                        u10 078F  
                      u11 078E                        u30 0772                        u31 0771  
                      u47 07F0                        u57 0782                        u67 0794  
                      u77 0702                        fsr 0004                       l701 06FE  
                     l703 0706                       l711 0715                       l713 0716  
                     l705 070B                       l721 0727                       l801 07A0  
                     l707 0710                       l723 0728                       l715 071D  
                     l811 07B3                       l803 07A1                       l709 0714  
                     l725 072E                       l717 0722                       l821 07BA  
                     l813 07B4                       l805 07B0                       l719 0726  
                     l831 07C2                       l823 07BB                       l815 07B5  
                     l807 07B1                       l681 0777                       l841 07D8  
                     l833 07C3                       l825 07BC                       l817 07B6  
                     l809 07B2                       l691 0786                       l683 077B  
                     l843 07E4                       l835 07C4                       l827 07C0  
                     l819 07B7                       l693 078F                       l685 077C  
                     l845 07EA                       l837 07C9                       l829 07C1  
                     l695 0790                       l687 077D                       l679 0773  
                     l791 074D                       l839 07D2                       l697 0798  
                     l689 077E                       l793 074E                       l699 06FB  
                     l795 075C                       l797 0762                       l799 079C  
                     _RC4 003C                       _RC5 003D                       _RC6 003E  
            __CFG_CPD$OFF 0000                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      STR_1 0013              __CFG_WRT$OFF 0000  
                    _main 079C                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
         __end_of_lcd_cmd 071C           __end_of_lcd_lat 070A           __end_of_lcd_dwr 072E  
         __end_of_lcd_msg 0773            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FB              __end_of_main 07FB                    ??_main 0075  
                  _ADRESL 009E                    _ANSELH 0189            __CFG_PWRTE$OFF 0000  
        __end_of_lcd_init 074D                 ??_lcd_cmd 0072                 ??_lcd_lat 0070  
               ??_lcd_dwr 0072                 ??_lcd_msg 0075   __end_of__initialization 07FC  
          __pcstackCOMMON 0070        __size_of_lcd_ready 0029                __pmaintext 079C  
               ?_lcd_init 0070                __stringtab 0003         __end_of_lcd_ready 079C  
                 __ptext1 074D                   __ptext2 071C                   __ptext3 072E  
                 __ptext4 070A                   __ptext5 0773                   __ptext6 06FB  
                 _lcd_cmd 070A                   _lcd_lat 06FB                   _lcd_dwr 071C  
                 _lcd_msg 074D                ??_lcd_init 0073                   _voltaje 0078  
    end_of_initialization 07FC       start_initialization 07FB  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0078                 ___latbits 0002         __size_of_lcd_init 001F  
               _lcd_ready 0773                 __pstrings 0003                  ?_lcd_cmd 0070  
                ?_lcd_lat 0070                  ?_lcd_dwr 0070                  ?_lcd_msg 0073  
              ?_lcd_ready 0070                _ADCON0bits 001F               __stringbase 0012  
              _ADCON1bits 009F        __end_of__stringtab 0013          __size_of_lcd_cmd 0012  
        __size_of_lcd_lat 000F          __size_of_lcd_dwr 0012          __size_of_lcd_msg 0026  
       __CFG_BOR4V$BOR40V 0000                  _lcd_init 072E             __size_of_main 005F  
                lcd_cmd@x 0072                  lcd_dwr@x 0072                  lcd_msg@c 0073  
             ??_lcd_ready 0070                 stringcode 000D                _OSCCONbits 008F  
                stringdir 000D                  stringtab 0003  
