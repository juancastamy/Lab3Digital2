

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 09 20:51:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	strings
   237  1800                     __pstrings:	
   238  1800                     stringtab:	
   239  1800                     __stringtab:	
   240                           
   241                           ;	String table - string pointers are 1 byte each
   242  1800  1BFF               	btfsc	btemp+1,7
   243  1801  280A               	ljmp	stringcode
   244  1802  1383               	bcf	3,7
   245  1803  187F               	btfsc	btemp+1,0
   246  1804  1783               	bsf	3,7
   247  1805  0800               	movf	0,w
   248  1806  0A84               	incf	4,f
   249  1807  1903               	skipnz
   250  1808  0AFF               	incf	btemp+1,f
   251  1809  0008               	return
   252  180A                     stringcode:	
   253  180A                     stringdir:	
   254  180A  3018               	movlw	high stringdir
   255  180B  008A               	movwf	10
   256  180C  0804               	movf	4,w
   257  180D  0A84               	incf	4,f
   258  180E  0782               	addwf	2,f
   259  180F                     __stringbase:	
   260  180F  3400               	retlw	0
   261  1810                     __end_of__stringtab:	
   262  1810                     __powers_:	
   263  1810  3400               	retlw	0
   264  1811  3400               	retlw	0
   265  1812  3480               	retlw	128
   266  1813  343F               	retlw	63
   267  1814  3400               	retlw	0
   268  1815  3400               	retlw	0
   269  1816  3420               	retlw	32
   270  1817  3441               	retlw	65
   271  1818  3400               	retlw	0
   272  1819  3400               	retlw	0
   273  181A  34C8               	retlw	200
   274  181B  3442               	retlw	66
   275  181C  3400               	retlw	0
   276  181D  3400               	retlw	0
   277  181E  347A               	retlw	122
   278  181F  3444               	retlw	68
   279  1820  3400               	retlw	0
   280  1821  3440               	retlw	64
   281  1822  341C               	retlw	28
   282  1823  3446               	retlw	70
   283  1824  3400               	retlw	0
   284  1825  3450               	retlw	80
   285  1826  34C3               	retlw	195
   286  1827  3447               	retlw	71
   287  1828  3400               	retlw	0
   288  1829  3424               	retlw	36
   289  182A  3474               	retlw	116
   290  182B  3449               	retlw	73
   291  182C  3480               	retlw	128
   292  182D  3496               	retlw	150
   293  182E  3418               	retlw	24
   294  182F  344B               	retlw	75
   295  1830  3420               	retlw	32
   296  1831  34BC               	retlw	188
   297  1832  34BE               	retlw	190
   298  1833  344C               	retlw	76
   299  1834  3428               	retlw	40
   300  1835  346B               	retlw	107
   301  1836  346E               	retlw	110
   302  1837  344E               	retlw	78
   303  1838  34F9               	retlw	249
   304  1839  3402               	retlw	2
   305  183A  3415               	retlw	21
   306  183B  3450               	retlw	80
   307  183C  34EC               	retlw	236
   308  183D  3478               	retlw	120
   309  183E  34AD               	retlw	173
   310  183F  3460               	retlw	96
   311  1840  34CA               	retlw	202
   312  1841  34F2               	retlw	242
   313  1842  3449               	retlw	73
   314  1843  3471               	retlw	113
   315  1844                     __end_of__powers_:	
   316  1844                     __npowers_:	
   317  1844  3400               	retlw	0
   318  1845  3400               	retlw	0
   319  1846  3480               	retlw	128
   320  1847  343F               	retlw	63
   321  1848  34CD               	retlw	205
   322  1849  34CC               	retlw	204
   323  184A  34CC               	retlw	204
   324  184B  343D               	retlw	61
   325  184C  340A               	retlw	10
   326  184D  34D7               	retlw	215
   327  184E  3423               	retlw	35
   328  184F  343C               	retlw	60
   329  1850  346F               	retlw	111
   330  1851  3412               	retlw	18
   331  1852  3483               	retlw	131
   332  1853  343A               	retlw	58
   333  1854  3417               	retlw	23
   334  1855  34B7               	retlw	183
   335  1856  34D1               	retlw	209
   336  1857  3438               	retlw	56
   337  1858  34AC               	retlw	172
   338  1859  34C5               	retlw	197
   339  185A  3427               	retlw	39
   340  185B  3437               	retlw	55
   341  185C  34BD               	retlw	189
   342  185D  3437               	retlw	55
   343  185E  3486               	retlw	134
   344  185F  3435               	retlw	53
   345  1860  3495               	retlw	149
   346  1861  34BF               	retlw	191
   347  1862  34D6               	retlw	214
   348  1863  3433               	retlw	51
   349  1864  3477               	retlw	119
   350  1865  34CC               	retlw	204
   351  1866  342B               	retlw	43
   352  1867  3432               	retlw	50
   353  1868  345F               	retlw	95
   354  1869  3470               	retlw	112
   355  186A  3489               	retlw	137
   356  186B  3430               	retlw	48
   357  186C  34FF               	retlw	255
   358  186D  34E6               	retlw	230
   359  186E  34DB               	retlw	219
   360  186F  342E               	retlw	46
   361  1870  3408               	retlw	8
   362  1871  34E5               	retlw	229
   363  1872  343C               	retlw	60
   364  1873  341E               	retlw	30
   365  1874  3460               	retlw	96
   366  1875  3442               	retlw	66
   367  1876  34A2               	retlw	162
   368  1877  340D               	retlw	13
   369  1878                     __end_of__npowers_:	
   370  1878                     _dpowers:	
   371  1878  3401               	retlw	1
   372  1879  3400               	retlw	0
   373  187A  3400               	retlw	0
   374  187B  3400               	retlw	0
   375  187C  340A               	retlw	10
   376  187D  3400               	retlw	0
   377  187E  3400               	retlw	0
   378  187F  3400               	retlw	0
   379  1880  3464               	retlw	100
   380  1881  3400               	retlw	0
   381  1882  3400               	retlw	0
   382  1883  3400               	retlw	0
   383  1884  34E8               	retlw	232
   384  1885  3403               	retlw	3
   385  1886  3400               	retlw	0
   386  1887  3400               	retlw	0
   387  1888  3410               	retlw	16
   388  1889  3427               	retlw	39
   389  188A  3400               	retlw	0
   390  188B  3400               	retlw	0
   391  188C  34A0               	retlw	160
   392  188D  3486               	retlw	134
   393  188E  3401               	retlw	1
   394  188F  3400               	retlw	0
   395  1890  3440               	retlw	64
   396  1891  3442               	retlw	66
   397  1892  340F               	retlw	15
   398  1893  3400               	retlw	0
   399  1894  3480               	retlw	128
   400  1895  3496               	retlw	150
   401  1896  3498               	retlw	152
   402  1897  3400               	retlw	0
   403  1898  3400               	retlw	0
   404  1899  34E1               	retlw	225
   405  189A  34F5               	retlw	245
   406  189B  3405               	retlw	5
   407  189C  3400               	retlw	0
   408  189D  34CA               	retlw	202
   409  189E  349A               	retlw	154
   410  189F  343B               	retlw	59
   411  18A0                     __end_of_dpowers:	
   412  001E                     _ADRESH	set	30
   413  001F                     _ADCON0bits	set	31
   414  0009                     _PORTE	set	9
   415  0008                     _PORTD	set	8
   416  0007                     _PORTC	set	7
   417  0006                     _PORTB	set	6
   418  0005                     _PORTA	set	5
   419  003E                     _RC6	set	62
   420  003D                     _RC5	set	61
   421  003C                     _RC4	set	60
   422  009E                     _ADRESL	set	158
   423  009F                     _ADCON1bits	set	159
   424  008F                     _OSCCONbits	set	143
   425  0089                     _TRISE	set	137
   426  0088                     _TRISD	set	136
   427  0087                     _TRISC	set	135
   428  0086                     _TRISB	set	134
   429  0085                     _TRISA	set	133
   430  0189                     _ANSELH	set	393
   431  0188                     _ANSEL	set	392
   432  18A0                     STR_2:	
   433  18A0  3441               	retlw	65	;'A'
   434  18A1  3444               	retlw	68	;'D'
   435  18A2  3443               	retlw	67	;'C'
   436  18A3  3420               	retlw	32	;' '
   437  18A4  3425               	retlw	37	;'%'
   438  18A5  3430               	retlw	48	;'0'
   439  18A6  3434               	retlw	52	;'4'
   440  18A7  342E               	retlw	46	;'.'
   441  18A8  3432               	retlw	50	;'2'
   442  18A9  3466               	retlw	102	;'f'
   443  18AA  3400               	retlw	0
   444  18AB                     STR_1:	
   445  18AB  3448               	retlw	72	;'H'
   446  18AC  3445               	retlw	69	;'E'
   447  18AD  344C               	retlw	76	;'L'
   448  18AE  344C               	retlw	76	;'L'
   449  18AF  344F               	retlw	79	;'O'
   450  18B0  3400               	retlw	0
   451                           
   452                           ; #config settings
   453  0000                     
   454                           	psect	cinit
   455  07F3                     start_initialization:	
   456  07F3                     __initialization:	
   457                           
   458                           ; Clear objects allocated to BANK1
   459  07F3  1383               	bcf	3,7	;select IRP bank0
   460  07F4  30C7               	movlw	low __pbssBANK1
   461  07F5  0084               	movwf	4
   462  07F6  30DD               	movlw	low (__pbssBANK1+22)
   463  07F7  160A  118A  2001  120A  118A  	fcall	clear_ram0
   464  07FC                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  07FC                     __end_of__initialization:	
   468  07FC  0183               	clrf	3
   469  07FD  160A  158A  2BF6   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	bssBANK1
   472  00C7                     __pbssBANK1:	
   473  00C7                     _voltaje:	
   474  00C7                     	ds	4
   475  00CB                     _adc:	
   476  00CB                     	ds	2
   477  00CD                     _buffer:	
   478  00CD                     	ds	16
   479                           
   480                           	psect	clrtext
   481  1001                     clear_ram0:	
   482                           ;	Called with FSR containing the base address, and
   483                           ;	W with the last address+1
   484                           
   485  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
   486  1002                     clrloop0:	
   487  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
   488  1003  0A84               	incf	4,f	;increment pointer
   489  1004  0604               	xorwf	4,w	;XOR with final address
   490  1005  1903               	btfsc	3,2	;have we reached the end yet?
   491  1006  3400               	retlw	0	;all done for this memory range, return
   492  1007  0604               	xorwf	4,w	;XOR again to restore value
   493  1008  2802               	goto	clrloop0	;do the next byte
   494                           
   495                           	psect	cstackBANK1
   496  00A0                     __pcstackBANK1:	
   497  00A0                     ?_sprintf:	
   498  00A0                     sprintf@f:	
   499                           ; 2 bytes @ 0x0
   500                           
   501                           
   502                           ; 1 bytes @ 0x0
   503  00A0                     	ds	5
   504  00A5                     ??_sprintf:	
   505                           
   506                           ; 1 bytes @ 0x5
   507  00A5                     	ds	5
   508  00AA                     _sprintf$888:	
   509                           
   510                           ; 4 bytes @ 0xA
   511  00AA                     	ds	4
   512  00AE                     sprintf@ap:	
   513                           
   514                           ; 1 bytes @ 0xE
   515  00AE                     	ds	1
   516  00AF                     sprintf@val:	
   517                           
   518                           ; 4 bytes @ 0xF
   519  00AF                     	ds	4
   520  00B3                     sprintf@tmpval:	
   521                           
   522                           ; 4 bytes @ 0x13
   523  00B3                     	ds	4
   524  00B7                     sprintf@eexp:	
   525                           
   526                           ; 2 bytes @ 0x17
   527  00B7                     	ds	2
   528  00B9                     sprintf@flag:	
   529                           
   530                           ; 2 bytes @ 0x19
   531  00B9                     	ds	2
   532  00BB                     sprintf@width:	
   533                           
   534                           ; 2 bytes @ 0x1B
   535  00BB                     	ds	2
   536  00BD                     sprintf@fval:	
   537                           
   538                           ; 4 bytes @ 0x1D
   539  00BD                     	ds	4
   540  00C1                     sprintf@prec:	
   541                           
   542                           ; 2 bytes @ 0x21
   543  00C1                     	ds	2
   544  00C3                     sprintf@sp:	
   545                           
   546                           ; 1 bytes @ 0x23
   547  00C3                     	ds	1
   548  00C4                     sprintf@c:	
   549                           
   550                           ; 1 bytes @ 0x24
   551  00C4                     	ds	1
   552  00C5                     ??_main:	
   553                           
   554                           ; 1 bytes @ 0x25
   555  00C5                     	ds	2
   556                           
   557                           	psect	cstackCOMMON
   558  0070                     __pcstackCOMMON:	
   559  0070                     ?_isdigit:	
   560  0070                     ?___fleq:	
   561                           ; 1 bit 
   562                           
   563  0070                     ?___flge:	
   564                           ; 1 bit 
   565                           
   566  0070                     ?_lcd_init:	
   567                           ; 1 bit 
   568                           
   569  0070                     ?_voltaje1:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_lcd_cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_lcd_ready:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_lcd_ready:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_lat:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_lcd_lat:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ??_isdigit:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_main:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_lcd_dwr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?__Umul8_16:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?___wmul:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?___awmod:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     ?___lwmod:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ?__tdiv_to_l_:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     ?__div_to_l_:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     ?___lldiv:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0070                     ?___flneg:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     ?___llmod:	
   621                           ; 4 bytes @ 0x0
   622                           
   623  0070                     ?___xxtofl:	
   624                           ; 4 bytes @ 0x0
   625                           
   626  0070                     _isdigit$710:	
   627                           ; 4 bytes @ 0x0
   628                           
   629  0070                     __Umul8_16@multiplicand:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ___wmul@multiplier:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ___awmod@divisor:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     ___lwmod@divisor:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0070                     ___lldiv@divisor:	
   642                           ; 2 bytes @ 0x0
   643                           
   644  0070                     __div_to_l_@f1:	
   645                           ; 4 bytes @ 0x0
   646                           
   647  0070                     ___fleq@ff1:	
   648                           ; 4 bytes @ 0x0
   649                           
   650  0070                     ___flge@ff1:	
   651                           ; 4 bytes @ 0x0
   652                           
   653  0070                     ___flneg@f1:	
   654                           ; 4 bytes @ 0x0
   655                           
   656  0070                     __tdiv_to_l_@f1:	
   657                           ; 4 bytes @ 0x0
   658                           
   659  0070                     ___llmod@divisor:	
   660                           ; 4 bytes @ 0x0
   661                           
   662  0070                     ___xxtofl@val:	
   663                           ; 4 bytes @ 0x0
   664                           
   665                           
   666                           ; 4 bytes @ 0x0
   667  0070                     	ds	1
   668  0071                     isdigit@c:	
   669                           
   670                           ; 1 bytes @ 0x1
   671  0071                     	ds	1
   672  0072                     ??_lcd_cmd:	
   673  0072                     ??__Umul8_16:	
   674                           ; 1 bytes @ 0x2
   675                           
   676  0072                     ??_lcd_dwr:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     lcd_cmd@x:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     lcd_dwr@x:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0072                     ___wmul@multiplicand:	
   686                           ; 1 bytes @ 0x2
   687                           
   688  0072                     ___awmod@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691  0072                     ___lwmod@dividend:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696  0072                     	ds	1
   697  0073                     ??_lcd_init:	
   698  0073                     ?_lcd_msg:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     lcd_msg@c:	
   702                           ; 1 bytes @ 0x3
   703                           
   704                           
   705                           ; 2 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ??___wmul:	
   708  0074                     ??___awmod:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??___flneg:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ??___lwmod:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ??___xxtofl:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ___wmul@product:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     __Umul8_16@product:	
   724                           ; 2 bytes @ 0x4
   725                           
   726  0074                     ___lldiv@dividend:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  0074                     __div_to_l_@f2:	
   730                           ; 4 bytes @ 0x4
   731                           
   732  0074                     ___fleq@ff2:	
   733                           ; 4 bytes @ 0x4
   734                           
   735  0074                     ___flge@ff2:	
   736                           ; 4 bytes @ 0x4
   737                           
   738  0074                     __tdiv_to_l_@f2:	
   739                           ; 4 bytes @ 0x4
   740                           
   741  0074                     ___llmod@dividend:	
   742                           ; 4 bytes @ 0x4
   743                           
   744                           
   745                           ; 4 bytes @ 0x4
   746  0074                     	ds	1
   747  0075                     ??_lcd_msg:	
   748  0075                     ___awmod@counter:	
   749                           ; 1 bytes @ 0x5
   750                           
   751  0075                     ___lwmod@counter:	
   752                           ; 1 bytes @ 0x5
   753                           
   754                           
   755                           ; 1 bytes @ 0x5
   756  0075                     	ds	1
   757  0076                     ?___lwdiv:	
   758  0076                     ___awmod@sign:	
   759                           ; 2 bytes @ 0x6
   760                           
   761  0076                     ___lwdiv@divisor:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0076                     __Umul8_16@word_mpld:	
   765                           ; 2 bytes @ 0x6
   766                           
   767                           
   768                           ; 2 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     ?___awdiv:	
   771  0077                     ___awdiv@divisor:	
   772                           ; 2 bytes @ 0x7
   773                           
   774                           
   775                           ; 2 bytes @ 0x7
   776  0077                     	ds	1
   777  0078                     ??__tdiv_to_l_:	
   778  0078                     ??__div_to_l_:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     ??___lldiv:	
   782                           ; 1 bytes @ 0x8
   783                           
   784  0078                     ??___fleq:	
   785                           ; 1 bytes @ 0x8
   786                           
   787  0078                     ??___flge:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0078                     ??___llmod:	
   791                           ; 1 bytes @ 0x8
   792                           
   793  0078                     ___xxtofl@sign:	
   794                           ; 1 bytes @ 0x8
   795                           
   796  0078                     __Umul8_16@multiplier:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0078                     ___lwdiv@dividend:	
   800                           ; 1 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804  0078                     	ds	1
   805  0079                     ___llmod@counter:	
   806  0079                     ___xxtofl@exp:	
   807                           ; 1 bytes @ 0x9
   808                           
   809  0079                     ___awdiv@dividend:	
   810                           ; 1 bytes @ 0x9
   811                           
   812  0079                     ___lldiv@quotient:	
   813                           ; 2 bytes @ 0x9
   814                           
   815                           
   816                           ; 4 bytes @ 0x9
   817  0079                     	ds	1
   818  007A                     ??___lwdiv:	
   819  007A                     ___xxtofl@arg:	
   820                           ; 1 bytes @ 0xA
   821                           
   822                           
   823                           ; 4 bytes @ 0xA
   824  007A                     	ds	1
   825  007B                     ??___awdiv:	
   826  007B                     ___lwdiv@quotient:	
   827                           ; 1 bytes @ 0xB
   828                           
   829                           
   830                           ; 2 bytes @ 0xB
   831  007B                     	ds	2
   832  007D                     ___lldiv@counter:	
   833  007D                     ___lwdiv@counter:	
   834                           ; 1 bytes @ 0xD
   835                           
   836                           
   837                           ; 1 bytes @ 0xD
   838  007D                     	ds	1
   839  007E                     ??___flsub:	
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:	
   843                           ; 1 bytes @ 0xE
   844                           
   845  0020                     ___awdiv@counter:	
   846  0020                     __div_to_l_@quot:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     __tdiv_to_l_@quot:	
   850                           ; 4 bytes @ 0x0
   851                           
   852                           
   853                           ; 4 bytes @ 0x0
   854  0020                     	ds	1
   855  0021                     ___awdiv@sign:	
   856                           
   857                           ; 1 bytes @ 0x1
   858  0021                     	ds	1
   859  0022                     ___awdiv@quotient:	
   860                           
   861                           ; 2 bytes @ 0x2
   862  0022                     	ds	2
   863  0024                     ?___flmul:	
   864  0024                     __div_to_l_@cntr:	
   865                           ; 4 bytes @ 0x4
   866                           
   867  0024                     __tdiv_to_l_@cntr:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  0024                     ___flmul@b:	
   871                           ; 1 bytes @ 0x4
   872                           
   873                           
   874                           ; 4 bytes @ 0x4
   875  0024                     	ds	1
   876  0025                     __div_to_l_@exp1:	
   877  0025                     __tdiv_to_l_@exp1:	
   878                           ; 1 bytes @ 0x5
   879                           
   880                           
   881                           ; 1 bytes @ 0x5
   882  0025                     	ds	3
   883  0028                     ___flmul@a:	
   884                           
   885                           ; 4 bytes @ 0x8
   886  0028                     	ds	4
   887  002C                     ??___flmul:	
   888                           
   889                           ; 1 bytes @ 0xC
   890  002C                     	ds	5
   891  0031                     ___flmul@sign:	
   892                           
   893                           ; 1 bytes @ 0x11
   894  0031                     	ds	1
   895  0032                     ___flmul@grs:	
   896                           
   897                           ; 4 bytes @ 0x12
   898  0032                     	ds	4
   899  0036                     ___flmul@aexp:	
   900                           
   901                           ; 1 bytes @ 0x16
   902  0036                     	ds	1
   903  0037                     ___flmul@bexp:	
   904                           
   905                           ; 1 bytes @ 0x17
   906  0037                     	ds	1
   907  0038                     ___flmul@prod:	
   908                           
   909                           ; 4 bytes @ 0x18
   910  0038                     	ds	4
   911  003C                     ___flmul@temp:	
   912                           
   913                           ; 2 bytes @ 0x1C
   914  003C                     	ds	2
   915  003E                     ?_fround:	
   916  003E                     ?_scale:	
   917                           ; 4 bytes @ 0x1E
   918                           
   919  003E                     ?___fldiv:	
   920                           ; 4 bytes @ 0x1E
   921                           
   922  003E                     ___fldiv@a:	
   923                           ; 4 bytes @ 0x1E
   924                           
   925                           
   926                           ; 4 bytes @ 0x1E
   927  003E                     	ds	4
   928  0042                     ??_fround:	
   929  0042                     ??_scale:	
   930                           ; 1 bytes @ 0x22
   931                           
   932  0042                     ___fldiv@b:	
   933                           ; 1 bytes @ 0x22
   934                           
   935                           
   936                           ; 4 bytes @ 0x22
   937  0042                     	ds	4
   938  0046                     ??___fldiv:	
   939                           
   940                           ; 1 bytes @ 0x26
   941  0046                     	ds	3
   942  0049                     _fround$886:	
   943                           
   944                           ; 4 bytes @ 0x29
   945  0049                     	ds	2
   946  004B                     ___fldiv@rem:	
   947                           
   948                           ; 4 bytes @ 0x2B
   949  004B                     	ds	1
   950  004C                     _scale$887:	
   951                           
   952                           ; 4 bytes @ 0x2C
   953  004C                     	ds	1
   954  004D                     _fround$885:	
   955                           
   956                           ; 4 bytes @ 0x2D
   957  004D                     	ds	2
   958  004F                     ___fldiv@sign:	
   959                           
   960                           ; 1 bytes @ 0x2F
   961  004F                     	ds	1
   962  0050                     scale@scl:	
   963  0050                     ___fldiv@new_exp:	
   964                           ; 1 bytes @ 0x30
   965                           
   966                           
   967                           ; 2 bytes @ 0x30
   968  0050                     	ds	1
   969  0051                     ?___fltol:	
   970  0051                     fround@prec:	
   971                           ; 4 bytes @ 0x31
   972                           
   973  0051                     ___fltol@f1:	
   974                           ; 1 bytes @ 0x31
   975                           
   976                           
   977                           ; 4 bytes @ 0x31
   978  0051                     	ds	1
   979  0052                     ?___fladd:	
   980  0052                     ___fladd@b:	
   981                           ; 4 bytes @ 0x32
   982                           
   983  0052                     ___fldiv@grs:	
   984                           ; 4 bytes @ 0x32
   985                           
   986                           
   987                           ; 4 bytes @ 0x32
   988  0052                     	ds	3
   989  0055                     ??___fltol:	
   990                           
   991                           ; 1 bytes @ 0x35
   992  0055                     	ds	1
   993  0056                     ___fldiv@bexp:	
   994  0056                     ___fladd@a:	
   995                           ; 1 bytes @ 0x36
   996                           
   997                           
   998                           ; 4 bytes @ 0x36
   999  0056                     	ds	1
  1000  0057                     ___fldiv@aexp:	
  1001                           
  1002                           ; 1 bytes @ 0x37
  1003  0057                     	ds	3
  1004  005A                     ??___fladd:	
  1005  005A                     ___fltol@sign1:	
  1006                           ; 1 bytes @ 0x3A
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x3A
  1010  005A                     	ds	1
  1011  005B                     ___fltol@exp1:	
  1012                           
  1013                           ; 1 bytes @ 0x3B
  1014  005B                     	ds	7
  1015  0062                     ___fladd@signs:	
  1016                           
  1017                           ; 1 bytes @ 0x42
  1018  0062                     	ds	1
  1019  0063                     ___fladd@aexp:	
  1020                           
  1021                           ; 1 bytes @ 0x43
  1022  0063                     	ds	1
  1023  0064                     ___fladd@bexp:	
  1024                           
  1025                           ; 1 bytes @ 0x44
  1026  0064                     	ds	1
  1027  0065                     ___fladd@grs:	
  1028                           
  1029                           ; 1 bytes @ 0x45
  1030  0065                     	ds	1
  1031  0066                     ?___flsub:	
  1032  0066                     ___flsub@a:	
  1033                           ; 4 bytes @ 0x46
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x46
  1037  0066                     	ds	4
  1038  006A                     ___flsub@b:	
  1039                           
  1040                           ; 4 bytes @ 0x4A
  1041  006A                     	ds	4
  1042  006E                     ??_voltaje1:	
  1043                           
  1044                           ; 1 bytes @ 0x4E
  1045  006E                     	ds	2
  1046                           
  1047                           	psect	maintext
  1048  1BF6                     __pmaintext:	
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 55 in file "Lab3.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : B00/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0
  1070 ;;      Temps:          0       0       2       0       0
  1071 ;;      Totals:         0       0       2       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		_lcd_cmd
  1076 ;;		_lcd_init
  1077 ;;		_voltaje1
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _main
  1085  1BF6                     _main:	
  1086  1BF6                     l3708:	
  1087                           ;incstack = 0
  1088                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089                           
  1090                           
  1091                           ;Lab3.c: 57:     ANSEL = 0b00001001;
  1092  1BF6  3009               	movlw	9
  1093  1BF7  1683               	bsf	3,5	;RP0=1, select bank3
  1094  1BF8  1703               	bsf	3,6	;RP1=1, select bank3
  1095  1BF9  0088               	movwf	8	;volatile
  1096  1BFA                     l3710:	
  1097                           
  1098                           ;Lab3.c: 58:     ANSELH= 0b00000000;
  1099  1BFA  0189               	clrf	9	;volatile
  1100  1BFB                     l3712:	
  1101                           
  1102                           ;Lab3.c: 59:     TRISA = 0b00001001;
  1103  1BFB  3009               	movlw	9
  1104  1BFC  1683               	bsf	3,5	;RP0=1, select bank1
  1105  1BFD  1303               	bcf	3,6	;RP1=0, select bank1
  1106  1BFE  0085               	movwf	5	;volatile
  1107                           
  1108                           ;Lab3.c: 60:     TRISB = 0b00000000;
  1109  1BFF  0186               	clrf	6	;volatile
  1110                           
  1111                           ;Lab3.c: 61:     TRISC = 0b00000000;
  1112  1C00  0187               	clrf	7	;volatile
  1113                           
  1114                           ;Lab3.c: 62:     TRISD = 0b00000000;
  1115  1C01  0188               	clrf	8	;volatile
  1116                           
  1117                           ;Lab3.c: 63:     TRISE = 0;
  1118  1C02  0189               	clrf	9	;volatile
  1119                           
  1120                           ;Lab3.c: 65:     PORTA = 0;
  1121  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  1122  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  1123  1C05  0185               	clrf	5	;volatile
  1124                           
  1125                           ;Lab3.c: 66:     PORTB = 0;
  1126  1C06  0186               	clrf	6	;volatile
  1127                           
  1128                           ;Lab3.c: 67:     PORTC = 0;
  1129  1C07  0187               	clrf	7	;volatile
  1130                           
  1131                           ;Lab3.c: 68:     PORTD = 0;
  1132  1C08  0188               	clrf	8	;volatile
  1133                           
  1134                           ;Lab3.c: 69:     PORTE = 0;
  1135  1C09  0189               	clrf	9	;volatile
  1136  1C0A                     l3714:	
  1137                           
  1138                           ;Lab3.c: 71:     OSCCONbits.IRCF = 0b110;
  1139  1C0A  1683               	bsf	3,5	;RP0=1, select bank1
  1140  1C0B  1303               	bcf	3,6	;RP1=0, select bank1
  1141  1C0C  080F               	movf	15,w	;volatile
  1142  1C0D  398F               	andlw	-113
  1143  1C0E  3860               	iorlw	96
  1144  1C0F  008F               	movwf	15	;volatile
  1145  1C10                     l3716:	
  1146                           
  1147                           ;Lab3.c: 72:     OSCCONbits.OSTS= 0;
  1148  1C10  118F               	bcf	15,3	;volatile
  1149  1C11                     l3718:	
  1150                           
  1151                           ;Lab3.c: 73:     OSCCONbits.HTS = 0;
  1152  1C11  110F               	bcf	15,2	;volatile
  1153  1C12                     l3720:	
  1154                           
  1155                           ;Lab3.c: 74:     OSCCONbits.LTS = 0;
  1156  1C12  108F               	bcf	15,1	;volatile
  1157  1C13                     l3722:	
  1158                           
  1159                           ;Lab3.c: 75:     OSCCONbits.SCS = 1;
  1160  1C13  140F               	bsf	15,0	;volatile
  1161  1C14                     l3724:	
  1162                           
  1163                           ;Lab3.c: 78:        lcd_init();
  1164  1C14  160A  158A  22DE  160A  158A  	fcall	_lcd_init
  1165  1C19                     l3726:	
  1166                           
  1167                           ;Lab3.c: 79:        voltaje1();
  1168  1C19  120A  158A  205F  160A  158A  	fcall	_voltaje1
  1169  1C1E                     l3728:	
  1170                           
  1171                           ;Lab3.c: 81:            lcd_cmd(0x00);
  1172  1C1E  3000               	movlw	0
  1173  1C1F  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  1174  1C24                     l3730:	
  1175                           
  1176                           ;Lab3.c: 82:            _delay((unsigned long)((100)*(4000000/4000.0)));
  1177  1C24  3082               	movlw	130
  1178  1C25  1683               	bsf	3,5	;RP0=1, select bank1
  1179  1C26  1303               	bcf	3,6	;RP1=0, select bank1
  1180  1C27  00C6               	movwf	(??_main^(0+128)+1)
  1181  1C28  30DD               	movlw	221
  1182  1C29  00C5               	movwf	??_main^(0+128)
  1183  1C2A                     u6197:	
  1184  1C2A  0BC5               	decfsz	??_main^(0+128),f
  1185  1C2B  2C2A               	goto	u6197
  1186  1C2C  0BC6               	decfsz	(??_main^(0+128)+1),f
  1187  1C2D  2C2A               	goto	u6197
  1188  1C2E  2C1E               	goto	l3728
  1189  1C2F  120A  118A  2800   	ljmp	start
  1190  1C32                     __end_of_main:	
  1191                           
  1192                           	psect	text1
  1193  085F                     __ptext1:	
  1194 ;; *************** function _voltaje1 *****************
  1195 ;; Defined at:
  1196 ;;		line 138 in file "Lab3.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          0       2       0       0       0
  1213 ;;      Totals:         0       2       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    4
  1217 ;; This function calls:
  1218 ;;		___fldiv
  1219 ;;		___flmul
  1220 ;;		___xxtofl
  1221 ;;		_lcd_cmd
  1222 ;;		_lcd_msg
  1223 ;;		_sprintf
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _voltaje1
  1231  085F                     _voltaje1:	
  1232  085F                     l3684:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _voltaje1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1235                           
  1236                           
  1237                           ;Lab3.c: 139:     ADCON0bits.ADCS0 = 1;
  1238  085F  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0860  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0861  171F               	bsf	31,6	;volatile
  1241                           
  1242                           ;Lab3.c: 140:     ADCON0bits.ADCS1 = 0;
  1243  0862  139F               	bcf	31,7	;volatile
  1244                           
  1245                           ;Lab3.c: 141:     ADCON0bits.CHS0 = 0;
  1246  0863  111F               	bcf	31,2	;volatile
  1247                           
  1248                           ;Lab3.c: 142:     ADCON0bits.CHS1 = 0;
  1249  0864  119F               	bcf	31,3	;volatile
  1250                           
  1251                           ;Lab3.c: 143:     ADCON0bits.CHS2 = 0;
  1252  0865  121F               	bcf	31,4	;volatile
  1253                           
  1254                           ;Lab3.c: 144:     ADCON0bits.CHS3 = 0;
  1255  0866  129F               	bcf	31,5	;volatile
  1256                           
  1257                           ;Lab3.c: 145:     ADCON0bits.ADON = 1;
  1258  0867  141F               	bsf	31,0	;volatile
  1259                           
  1260                           ;Lab3.c: 146:     ADCON1bits.ADFM = 1;
  1261  0868  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0869  1303               	bcf	3,6	;RP1=0, select bank1
  1263  086A  179F               	bsf	31,7	;volatile
  1264                           
  1265                           ;Lab3.c: 147:     ADCON1bits.VCFG0 = 0;
  1266  086B  121F               	bcf	31,4	;volatile
  1267                           
  1268                           ;Lab3.c: 148:     ADCON1bits.VCFG1 = 0;
  1269  086C  129F               	bcf	31,5	;volatile
  1270  086D                     l3686:	
  1271                           
  1272                           ;Lab3.c: 150:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1273  086D  30C7               	movlw	199
  1274  086E  1283               	bcf	3,5	;RP0=0, select bank0
  1275  086F  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0870  00EE               	movwf	??_voltaje1
  1277  0871                     u6207:	
  1278  0871  2872               	nop2
  1279  0872  0BEE               	decfsz	??_voltaje1,f
  1280  0873  2871               	goto	u6207
  1281  0874  2875               	nop2
  1282  0875                     l3688:	
  1283                           
  1284                           ;Lab3.c: 151:         if (ADCON0bits.GO_DONE == 0){
  1285  0875  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0876  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0877  189F               	btfsc	31,1	;volatile
  1288  0878  287A               	goto	u6181
  1289  0879  287B               	goto	u6180
  1290  087A                     u6181:	
  1291  087A  286D               	goto	l3686
  1292  087B                     u6180:	
  1293  087B                     l3690:	
  1294                           
  1295                           ;Lab3.c: 152:         ADCON0bits.GO_DONE = 1;
  1296  087B  149F               	bsf	31,1	;volatile
  1297  087C                     l3692:	
  1298                           
  1299                           ;Lab3.c: 153:         adc = ADRESH;
  1300  087C  081E               	movf	30,w	;volatile
  1301  087D  00EE               	movwf	??_voltaje1
  1302  087E  01EF               	clrf	??_voltaje1+1
  1303  087F  086E               	movf	??_voltaje1,w
  1304  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0881  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0882  00CB               	movwf	_adc^(0+128)
  1307  0883  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0884  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0885  086F               	movf	??_voltaje1+1,w
  1310  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0888  00CC               	movwf	(_adc+1)^(0+128)
  1313  0889                     l3694:	
  1314                           
  1315                           ;Lab3.c: 154:         adc = adc<<8;
  1316  0889  084C               	movf	(_adc+1)^(0+128),w
  1317  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1318  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1319  088C  00EF               	movwf	??_voltaje1+1
  1320  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1321  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1322  088F  084B               	movf	_adc^(0+128),w
  1323  0890  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0891  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0892  00EE               	movwf	??_voltaje1
  1326  0893  086E               	movf	??_voltaje1,w
  1327  0894  00EF               	movwf	??_voltaje1+1
  1328  0895  01EE               	clrf	??_voltaje1
  1329  0896  086E               	movf	??_voltaje1,w
  1330  0897  1683               	bsf	3,5	;RP0=1, select bank1
  1331  0898  1303               	bcf	3,6	;RP1=0, select bank1
  1332  0899  00CB               	movwf	_adc^(0+128)
  1333  089A  1283               	bcf	3,5	;RP0=0, select bank0
  1334  089B  1303               	bcf	3,6	;RP1=0, select bank0
  1335  089C  086F               	movf	??_voltaje1+1,w
  1336  089D  1683               	bsf	3,5	;RP0=1, select bank1
  1337  089E  1303               	bcf	3,6	;RP1=0, select bank1
  1338  089F  00CC               	movwf	(_adc+1)^(0+128)
  1339  08A0                     l3696:	
  1340                           
  1341                           ;Lab3.c: 155:         adc = adc + ADRESL;
  1342  08A0  081E               	movf	30,w	;volatile
  1343  08A1  074B               	addwf	_adc^(0+128),w
  1344  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  1345  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  1346  08A4  00EE               	movwf	??_voltaje1
  1347  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  1348  08A6  1303               	bcf	3,6	;RP1=0, select bank1
  1349  08A7  084C               	movf	(_adc+1)^(0+128),w
  1350  08A8  1803               	skipnc
  1351  08A9  0A4C               	incf	(_adc+1)^(0+128),w
  1352  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  1353  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  1354  08AC  00EF               	movwf	??_voltaje1+1
  1355  08AD  086E               	movf	??_voltaje1,w
  1356  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1357  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1358  08B0  00CB               	movwf	_adc^(0+128)
  1359  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1360  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1361  08B3  086F               	movf	??_voltaje1+1,w
  1362  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  1363  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  1364  08B6  00CC               	movwf	(_adc+1)^(0+128)
  1365  08B7                     l3698:	
  1366                           
  1367                           ;Lab3.c: 156:         voltaje = adc*5.0/1024.0;
  1368  08B7  3044               	movlw	68
  1369  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  1370  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  1371  08BA  00C1               	movwf	___fldiv@a+3
  1372  08BB  3080               	movlw	128
  1373  08BC  00C0               	movwf	___fldiv@a+2
  1374  08BD  3000               	movlw	0
  1375  08BE  00BF               	movwf	___fldiv@a+1
  1376  08BF  3000               	movlw	0
  1377  08C0  00BE               	movwf	___fldiv@a
  1378  08C1  3040               	movlw	64
  1379  08C2  00A7               	movwf	___flmul@b+3
  1380  08C3  30A0               	movlw	160
  1381  08C4  00A6               	movwf	___flmul@b+2
  1382  08C5  3000               	movlw	0
  1383  08C6  00A5               	movwf	___flmul@b+1
  1384  08C7  3000               	movlw	0
  1385  08C8  00A4               	movwf	___flmul@b
  1386  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1387  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1388  08CB  084B               	movf	_adc^(0+128),w
  1389  08CC  00F0               	movwf	___xxtofl@val
  1390  08CD  084C               	movf	(_adc+1)^(0+128),w
  1391  08CE  00F1               	movwf	___xxtofl@val+1
  1392  08CF  3000               	movlw	0
  1393  08D0  1BF1               	btfsc	___xxtofl@val+1,7
  1394  08D1  30FF               	movlw	255
  1395  08D2  00F2               	movwf	___xxtofl@val+2
  1396  08D3  00F3               	movwf	___xxtofl@val+3
  1397  08D4  3001               	movlw	1
  1398  08D5  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1399  08DA  0873               	movf	?___xxtofl+3,w
  1400  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  1401  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  1402  08DD  00AB               	movwf	___flmul@a+3
  1403  08DE  0872               	movf	?___xxtofl+2,w
  1404  08DF  00AA               	movwf	___flmul@a+2
  1405  08E0  0871               	movf	?___xxtofl+1,w
  1406  08E1  00A9               	movwf	___flmul@a+1
  1407  08E2  0870               	movf	?___xxtofl,w
  1408  08E3  00A8               	movwf	___flmul@a
  1409  08E4  120A  158A  249F  120A  158A  	fcall	___flmul
  1410  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  1411  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  1412  08EB  0827               	movf	?___flmul+3,w
  1413  08EC  00C5               	movwf	___fldiv@b+3
  1414  08ED  0826               	movf	?___flmul+2,w
  1415  08EE  00C4               	movwf	___fldiv@b+2
  1416  08EF  0825               	movf	?___flmul+1,w
  1417  08F0  00C3               	movwf	___fldiv@b+1
  1418  08F1  0824               	movf	?___flmul,w
  1419  08F2  00C2               	movwf	___fldiv@b
  1420  08F3  160A  118A  2143  120A  158A  	fcall	___fldiv
  1421  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1422  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1423  08FA  0841               	movf	?___fldiv+3,w
  1424  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  1425  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  1426  08FD  00CA               	movwf	(_voltaje+3)^(0+128)
  1427  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  1428  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0900  0840               	movf	?___fldiv+2,w
  1430  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0902  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0903  00C9               	movwf	(_voltaje+2)^(0+128)
  1433  0904  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0905  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0906  083F               	movf	?___fldiv+1,w
  1436  0907  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0908  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0909  00C8               	movwf	(_voltaje+1)^(0+128)
  1439  090A  1283               	bcf	3,5	;RP0=0, select bank0
  1440  090B  1303               	bcf	3,6	;RP1=0, select bank0
  1441  090C  083E               	movf	?___fldiv,w
  1442  090D  1683               	bsf	3,5	;RP0=1, select bank1
  1443  090E  1303               	bcf	3,6	;RP1=0, select bank1
  1444  090F  00C7               	movwf	_voltaje^(0+128)
  1445  0910                     l3700:	
  1446                           
  1447                           ;Lab3.c: 157:         lcd_msg("HELLO");
  1448  0910  309C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1449  0911  00F3               	movwf	lcd_msg@c
  1450  0912  3080               	movlw	128
  1451  0913  00F4               	movwf	lcd_msg@c+1
  1452  0914  160A  158A  2346  120A  158A  	fcall	_lcd_msg
  1453  0919                     l3702:	
  1454                           
  1455                           ;Lab3.c: 158:         lcd_cmd(0xC0);
  1456  0919  30C0               	movlw	192
  1457  091A  160A  158A  22BA  120A  158A  	fcall	_lcd_cmd
  1458  091F                     l3704:	
  1459                           
  1460                           ;Lab3.c: 159:         sprintf(buffer, "ADC %04.2f", voltaje);
  1461  091F  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1462  0920  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0921  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0922  00EE               	movwf	??_voltaje1
  1465  0923  086E               	movf	??_voltaje1,w
  1466  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0926  00A0               	movwf	sprintf@f^(0+128)
  1469  0927  084A               	movf	(_voltaje+3)^(0+128),w
  1470  0928  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1471  0929  0849               	movf	(_voltaje+2)^(0+128),w
  1472  092A  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1473  092B  0848               	movf	(_voltaje+1)^(0+128),w
  1474  092C  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1475  092D  0847               	movf	_voltaje^(0+128),w
  1476  092E  00A1               	movwf	(?_sprintf^(0+128)+1)
  1477  092F  30CD               	movlw	(low (_buffer| 0))& (0+255)
  1478  0930  160A  118A  252B  120A  158A  	fcall	_sprintf
  1479  0935                     l3706:	
  1480                           
  1481                           ;Lab3.c: 160:         lcd_msg(buffer);
  1482  0935  30CD               	movlw	(low (_buffer| 0))& (0+255)
  1483  0936  00F3               	movwf	lcd_msg@c
  1484  0937  3000               	movlw	0
  1485  0938  00F4               	movwf	lcd_msg@c+1
  1486  0939  160A  158A  2346  120A  158A  	fcall	_lcd_msg
  1487  093E  286D               	goto	l3686
  1488  093F  0008               	return
  1489  0940                     __end_of_voltaje1:	
  1490                           
  1491                           	psect	text2
  1492  152B                     __ptext2:	
  1493 ;; *************** function _sprintf *****************
  1494 ;; Defined at:
  1495 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  sp              1    wreg     PTR unsigned char 
  1498 ;;		 -> buffer(16), 
  1499 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1500 ;;		 -> STR_2(11), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1503 ;;		 -> buffer(16), 
  1504 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1505 ;;  tmpval          4   19[BANK1 ] struct .
  1506 ;;  val             4   15[BANK1 ] unsigned long 
  1507 ;;  prec            2   33[BANK1 ] int 
  1508 ;;  width           2   27[BANK1 ] int 
  1509 ;;  flag            2   25[BANK1 ] unsigned short 
  1510 ;;  eexp            2   23[BANK1 ] int 
  1511 ;;  cp              2    0        PTR const unsigned char 
  1512 ;;  len             2    0        unsigned int 
  1513 ;;  c               1   36[BANK1 ] unsigned char 
  1514 ;;  ap              1   14[BANK1 ] PTR void [1]
  1515 ;;		 -> ?_sprintf(2), 
  1516 ;;  d               1    0        unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    0[BANK1 ] int 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       5       0       0
  1527 ;;      Locals:         0       0      27       0       0
  1528 ;;      Temps:          0       0       5       0       0
  1529 ;;      Totals:         0       0      37       0       0
  1530 ;;Total ram usage:       37 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		___awdiv
  1535 ;;		___fladd
  1536 ;;		___fleq
  1537 ;;		___flge
  1538 ;;		___flmul
  1539 ;;		___flneg
  1540 ;;		___flsub
  1541 ;;		___fltol
  1542 ;;		___lldiv
  1543 ;;		___llmod
  1544 ;;		___wmul
  1545 ;;		___xxtofl
  1546 ;;		__div_to_l_
  1547 ;;		__tdiv_to_l_
  1548 ;;		_fround
  1549 ;;		_isdigit
  1550 ;;		_scale
  1551 ;; This function is called by:
  1552 ;;		_voltaje1
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _sprintf
  1558  152B                     _sprintf:	
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1562                           ;sprintf@sp stored from wreg
  1563  152B  1683               	bsf	3,5	;RP0=1, select bank1
  1564  152C  1303               	bcf	3,6	;RP1=0, select bank1
  1565  152D  00C3               	movwf	sprintf@sp^(0+128)
  1566  152E                     l3234:	
  1567                           
  1568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1569  152E  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1570  152F  00A5               	movwf	??_sprintf^(0+128)
  1571  1530  0825               	movf	??_sprintf^(0+128),w
  1572  1531  00AE               	movwf	sprintf@ap^(0+128)
  1573  1532                     L1:	
  1574                           
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1576  1532  120A  118A  2FDA   	goto	l3522
  1577  1535                     l3236:	
  1578                           
  1579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1580  1535  3025               	movlw	37
  1581  1536  0644               	xorwf	sprintf@c^(0+128),w
  1582  1537  1903               	btfsc	3,2
  1583  1538  2D3A               	goto	u5351
  1584  1539  2D3B               	goto	u5350
  1585  153A                     u5351:	
  1586  153A  2D47               	goto	l3242
  1587  153B                     u5350:	
  1588  153B                     l3238:	
  1589                           
  1590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1591  153B  0844               	movf	sprintf@c^(0+128),w
  1592  153C  00A5               	movwf	??_sprintf^(0+128)
  1593  153D  0843               	movf	sprintf@sp^(0+128),w
  1594  153E  0084               	movwf	4
  1595  153F  0825               	movf	??_sprintf^(0+128),w
  1596  1540  1383               	bcf	3,7	;select IRP bank0
  1597  1541  0080               	movwf	0
  1598  1542                     l3240:	
  1599  1542  3001               	movlw	1
  1600  1543  00A5               	movwf	??_sprintf^(0+128)
  1601  1544  0825               	movf	??_sprintf^(0+128),w
  1602  1545  07C3               	addwf	sprintf@sp^(0+128),f
  1603                           
  1604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1605  1546  2D32               	goto	L1
  1606  1547                     l3242:	
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1609  1547  01BB               	clrf	sprintf@width^(0+128)
  1610  1548  01BC               	clrf	(sprintf@width+1)^(0+128)
  1611                           
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1613  1549  01B9               	clrf	sprintf@flag^(0+128)
  1614  154A  01BA               	clrf	(sprintf@flag+1)^(0+128)
  1615  154B  2D51               	goto	l3248
  1616  154C                     l223:	
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 596:    cas
      +                          e '0':
  1618                           
  1619                           
  1620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 597:     fl
      +                          ag |= 0x04;
  1621  154C  1539               	bsf	sprintf@flag^(0+128),2
  1622  154D                     l3244:	
  1623                           
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 598:     f+
      +                          +;
  1625  154D  3001               	movlw	1
  1626  154E  00A5               	movwf	??_sprintf^(0+128)
  1627  154F  0825               	movf	??_sprintf^(0+128),w
  1628  1550  07A0               	addwf	sprintf@f^(0+128),f
  1629  1551                     l3248:	
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 599:     co
      +                          ntinue;
  1631                           
  1632  1551  0820               	movf	sprintf@f^(0+128),w
  1633  1552  0084               	movwf	4
  1634  1553  160A  158A  200A  160A  118A  	fcall	stringdir
  1635  1558  00A5               	movwf	??_sprintf^(0+128)
  1636  1559  01A6               	clrf	(??_sprintf^(0+128)+1)
  1637                           
  1638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1639                           ; Switch size 1, requested type "simple"
  1640                           ; Number of cases is 1, Range of values is 0 to 0
  1641                           ; switch strategies available:
  1642                           ; Name         Instructions Cycles
  1643                           ; simple_byte            4     3 (average)
  1644                           ; direct_byte           11     8 (fixed)
  1645                           ; jumptable            260     6 (fixed)
  1646                           ;	Chosen strategy is simple_byte
  1647  155A  0826               	movf	(??_sprintf+1)^(0+128),w
  1648  155B  3A00               	xorlw	0	; case 0
  1649  155C  1903               	skipnz
  1650  155D  2D5F               	goto	l3792
  1651  155E  2D64               	goto	l3250
  1652  155F                     l3792:	
  1653                           
  1654                           ; Switch size 1, requested type "simple"
  1655                           ; Number of cases is 1, Range of values is 48 to 48
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte            4     3 (average)
  1659                           ; direct_byte           14    11 (fixed)
  1660                           ; jumptable            263     9 (fixed)
  1661                           ;	Chosen strategy is simple_byte
  1662  155F  0825               	movf	??_sprintf^(0+128),w
  1663  1560  3A30               	xorlw	48	; case 48
  1664  1561  1903               	skipnz
  1665  1562  2D4C               	goto	l223
  1666  1563  2D64               	goto	l3250
  1667  1564                     l3250:	
  1668                           
  1669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1670  1564  0820               	movf	sprintf@f^(0+128),w
  1671  1565  0084               	movwf	4
  1672  1566  160A  158A  200A  160A  118A  	fcall	stringdir
  1673  156B  120A  118A  200F  160A  118A  	fcall	_isdigit
  1674  1570  1C03               	btfss	3,0
  1675  1571  2D73               	goto	u5361
  1676  1572  2D74               	goto	u5360
  1677  1573                     u5361:	
  1678  1573  2DB4               	goto	l3262
  1679  1574                     u5360:	
  1680  1574                     l3252:	
  1681                           
  1682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1683  1574  1683               	bsf	3,5	;RP0=1, select bank1
  1684  1575  1303               	bcf	3,6	;RP1=0, select bank1
  1685  1576  01BB               	clrf	sprintf@width^(0+128)
  1686  1577  01BC               	clrf	(sprintf@width+1)^(0+128)
  1687  1578                     l3254:	
  1688                           
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1690  1578  300A               	movlw	10
  1691  1579  00F0               	movwf	___wmul@multiplier
  1692  157A  3000               	movlw	0
  1693  157B  00F1               	movwf	___wmul@multiplier+1
  1694  157C  1683               	bsf	3,5	;RP0=1, select bank1
  1695  157D  1303               	bcf	3,6	;RP1=0, select bank1
  1696  157E  083C               	movf	(sprintf@width+1)^(0+128),w
  1697  157F  00F3               	movwf	___wmul@multiplicand+1
  1698  1580  083B               	movf	sprintf@width^(0+128),w
  1699  1581  00F2               	movwf	___wmul@multiplicand
  1700  1582  160A  158A  2321  160A  118A  	fcall	___wmul
  1701  1587  0871               	movf	?___wmul+1,w
  1702  1588  1683               	bsf	3,5	;RP0=1, select bank1
  1703  1589  1303               	bcf	3,6	;RP1=0, select bank1
  1704  158A  00BC               	movwf	(sprintf@width+1)^(0+128)
  1705  158B  0870               	movf	?___wmul,w
  1706  158C  00BB               	movwf	sprintf@width^(0+128)
  1707  158D                     l3256:	
  1708                           
  1709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1710  158D  0820               	movf	sprintf@f^(0+128),w
  1711  158E  0084               	movwf	4
  1712  158F  160A  158A  200A  160A  118A  	fcall	stringdir
  1713  1594  3ED0               	addlw	208
  1714  1595  00A5               	movwf	??_sprintf^(0+128)
  1715  1596  30FF               	movlw	255
  1716  1597  1803               	skipnc
  1717  1598  3000               	movlw	0
  1718  1599  00A6               	movwf	(??_sprintf^(0+128)+1)
  1719  159A  0825               	movf	??_sprintf^(0+128),w
  1720  159B  07BB               	addwf	sprintf@width^(0+128),f
  1721  159C  1803               	skipnc
  1722  159D  0ABC               	incf	(sprintf@width+1)^(0+128),f
  1723  159E  0826               	movf	(??_sprintf+1)^(0+128),w
  1724  159F  07BC               	addwf	(sprintf@width+1)^(0+128),f
  1725  15A0                     l3258:	
  1726  15A0  3001               	movlw	1
  1727  15A1  00A5               	movwf	??_sprintf^(0+128)
  1728  15A2  0825               	movf	??_sprintf^(0+128),w
  1729  15A3  07A0               	addwf	sprintf@f^(0+128),f
  1730  15A4                     l3260:	
  1731                           
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1733  15A4  0820               	movf	sprintf@f^(0+128),w
  1734  15A5  0084               	movwf	4
  1735  15A6  160A  158A  200A  160A  118A  	fcall	stringdir
  1736  15AB  120A  118A  200F  160A  118A  	fcall	_isdigit
  1737  15B0  1803               	btfsc	3,0
  1738  15B1  2DB3               	goto	u5371
  1739  15B2  2DB4               	goto	u5370
  1740  15B3                     u5371:	
  1741  15B3  2D78               	goto	l3254
  1742  15B4                     u5370:	
  1743  15B4                     l3262:	
  1744                           
  1745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1746  15B4  1683               	bsf	3,5	;RP0=1, select bank1
  1747  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  1748  15B6  0820               	movf	sprintf@f^(0+128),w
  1749  15B7  0084               	movwf	4
  1750  15B8  160A  158A  200A  160A  118A  	fcall	stringdir
  1751  15BD  3A2E               	xorlw	46
  1752  15BE  1D03               	skipz
  1753  15BF  2DC1               	goto	u5381
  1754  15C0  2DC2               	goto	u5380
  1755  15C1                     u5381:	
  1756  15C1  2E07               	goto	l3278
  1757  15C2                     u5380:	
  1758  15C2                     l3264:	
  1759                           
  1760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1761  15C2  173A               	bsf	(sprintf@flag^(0+128)+1),6
  1762  15C3                     l3266:	
  1763                           
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1765  15C3  3001               	movlw	1
  1766  15C4  00A5               	movwf	??_sprintf^(0+128)
  1767  15C5  0825               	movf	??_sprintf^(0+128),w
  1768  15C6  07A0               	addwf	sprintf@f^(0+128),f
  1769  15C7                     l3268:	
  1770                           
  1771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1772  15C7  01C1               	clrf	sprintf@prec^(0+128)
  1773  15C8  01C2               	clrf	(sprintf@prec+1)^(0+128)
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1776  15C9  2DF6               	goto	l3276
  1777  15CA                     l3270:	
  1778                           
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1780  15CA  300A               	movlw	10
  1781  15CB  00F0               	movwf	___wmul@multiplier
  1782  15CC  3000               	movlw	0
  1783  15CD  00F1               	movwf	___wmul@multiplier+1
  1784  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1785  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1786  15D0  0842               	movf	(sprintf@prec+1)^(0+128),w
  1787  15D1  00F3               	movwf	___wmul@multiplicand+1
  1788  15D2  0841               	movf	sprintf@prec^(0+128),w
  1789  15D3  00F2               	movwf	___wmul@multiplicand
  1790  15D4  160A  158A  2321  160A  118A  	fcall	___wmul
  1791  15D9  0871               	movf	?___wmul+1,w
  1792  15DA  1683               	bsf	3,5	;RP0=1, select bank1
  1793  15DB  1303               	bcf	3,6	;RP1=0, select bank1
  1794  15DC  00C2               	movwf	(sprintf@prec+1)^(0+128)
  1795  15DD  0870               	movf	?___wmul,w
  1796  15DE  00C1               	movwf	sprintf@prec^(0+128)
  1797  15DF                     l3272:	
  1798                           
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1800  15DF  0820               	movf	sprintf@f^(0+128),w
  1801  15E0  0084               	movwf	4
  1802  15E1  160A  158A  200A  160A  118A  	fcall	stringdir
  1803  15E6  3ED0               	addlw	208
  1804  15E7  00A5               	movwf	??_sprintf^(0+128)
  1805  15E8  30FF               	movlw	255
  1806  15E9  1803               	skipnc
  1807  15EA  3000               	movlw	0
  1808  15EB  00A6               	movwf	(??_sprintf^(0+128)+1)
  1809  15EC  0825               	movf	??_sprintf^(0+128),w
  1810  15ED  07C1               	addwf	sprintf@prec^(0+128),f
  1811  15EE  1803               	skipnc
  1812  15EF  0AC2               	incf	(sprintf@prec+1)^(0+128),f
  1813  15F0  0826               	movf	(??_sprintf+1)^(0+128),w
  1814  15F1  07C2               	addwf	(sprintf@prec+1)^(0+128),f
  1815  15F2                     l3274:	
  1816  15F2  3001               	movlw	1
  1817  15F3  00A5               	movwf	??_sprintf^(0+128)
  1818  15F4  0825               	movf	??_sprintf^(0+128),w
  1819  15F5  07A0               	addwf	sprintf@f^(0+128),f
  1820  15F6                     l3276:	
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1823  15F6  0820               	movf	sprintf@f^(0+128),w
  1824  15F7  0084               	movwf	4
  1825  15F8  160A  158A  200A  160A  118A  	fcall	stringdir
  1826  15FD  120A  118A  200F  160A  118A  	fcall	_isdigit
  1827  1602  1803               	btfsc	3,0
  1828  1603  2E05               	goto	u5391
  1829  1604  2E06               	goto	u5390
  1830  1605                     u5391:	
  1831  1605  2DCA               	goto	l3270
  1832  1606                     u5390:	
  1833  1606  2E0D               	goto	l3284
  1834  1607                     l3278:	
  1835                           
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1837  1607  01C1               	clrf	sprintf@prec^(0+128)
  1838  1608  01C2               	clrf	(sprintf@prec+1)^(0+128)
  1839  1609                     l3280:	
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1842  1609  163A               	bsf	(sprintf@flag^(0+128)+1),4
  1843  160A  2E0D               	goto	l3284
  1844  160B                     l238:	
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1846                           
  1847                           
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1849  160B  153A               	bsf	(sprintf@flag^(0+128)+1),2
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1852  160C  2E29               	goto	l3286
  1853  160D                     l3284:	
  1854  160D  3001               	movlw	1
  1855  160E  1683               	bsf	3,5	;RP0=1, select bank1
  1856  160F  1303               	bcf	3,6	;RP1=0, select bank1
  1857  1610  07A0               	addwf	sprintf@f^(0+128),f
  1858  1611  30FF               	movlw	-1
  1859  1612  0720               	addwf	sprintf@f^(0+128),w
  1860  1613  0084               	movwf	4
  1861  1614  160A  158A  200A  160A  118A  	fcall	stringdir
  1862  1619  00C4               	movwf	sprintf@c^(0+128)
  1863  161A  00A5               	movwf	??_sprintf^(0+128)
  1864  161B  01A6               	clrf	(??_sprintf^(0+128)+1)
  1865                           
  1866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 1, Range of values is 0 to 0
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            4     3 (average)
  1872                           ; direct_byte           11     8 (fixed)
  1873                           ; jumptable            260     6 (fixed)
  1874                           ;	Chosen strategy is simple_byte
  1875  161C  0826               	movf	(??_sprintf+1)^(0+128),w
  1876  161D  3A00               	xorlw	0	; case 0
  1877  161E  1903               	skipnz
  1878  161F  2E21               	goto	l3794
  1879  1620  2D32               	goto	L1
  1880  1621                     l3794:	
  1881                           
  1882                           ; Switch size 1, requested type "simple"
  1883                           ; Number of cases is 2, Range of values is 0 to 102
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte            7     4 (average)
  1887                           ; jumptable            260     6 (fixed)
  1888                           ;	Chosen strategy is simple_byte
  1889  1621  0825               	movf	??_sprintf^(0+128),w
  1890  1622  3A00               	xorlw	0	; case 0
  1891  1623  1903               	skipnz
  1892  1624  2FFD               	goto	L3
  1893  1625  3A66               	xorlw	102	; case 102
  1894  1626  1903               	skipnz
  1895  1627  2E0B               	goto	l238
  1896  1628  2D32               	goto	L1
  1897  1629                     l3286:	
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1900  1629  3000               	movlw	0
  1901  162A  0539               	andwf	sprintf@flag^(0+128),w
  1902  162B  00A5               	movwf	??_sprintf^(0+128)
  1903  162C  3007               	movlw	7
  1904  162D  053A               	andwf	(sprintf@flag+1)^(0+128),w
  1905  162E  00A6               	movwf	(??_sprintf+1)^(0+128)
  1906  162F  0825               	movf	??_sprintf^(0+128),w
  1907  1630  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1908  1631  1903               	btfsc	3,2
  1909  1632  2E34               	goto	u5401
  1910  1633  2E37               	goto	u5400
  1911  1634                     u5401:	
  1912  1634  120A  118A  2EDC   	goto	l3460
  1913  1637                     u5400:	
  1914  1637                     l3288:	
  1915                           
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  1917  1637  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  1918  1638  2E3A               	goto	u5411
  1919  1639  2E3B               	goto	u5410
  1920  163A                     u5411:	
  1921  163A  2E3F               	goto	l3292
  1922  163B                     u5410:	
  1923  163B                     l3290:	
  1924                           
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1926  163B  3006               	movlw	6
  1927  163C  00C1               	movwf	sprintf@prec^(0+128)
  1928  163D  3000               	movlw	0
  1929  163E  00C2               	movwf	(sprintf@prec^(0+128)+1)
  1930  163F                     l3292:	
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1933  163F  082E               	movf	sprintf@ap^(0+128),w
  1934  1640  0084               	movwf	4
  1935  1641  1383               	bcf	3,7	;select IRP bank0
  1936  1642  0800               	movf	0,w
  1937  1643  00BD               	movwf	sprintf@fval^(0+128)
  1938  1644  0A84               	incf	4,f
  1939  1645  0800               	movf	0,w
  1940  1646  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1941  1647  0A84               	incf	4,f
  1942  1648  0800               	movf	0,w
  1943  1649  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1944  164A  0A84               	incf	4,f
  1945  164B  0800               	movf	0,w
  1946  164C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1947  164D                     l3294:	
  1948  164D  3004               	movlw	4
  1949  164E  00A5               	movwf	??_sprintf^(0+128)
  1950  164F  0825               	movf	??_sprintf^(0+128),w
  1951  1650  07AE               	addwf	sprintf@ap^(0+128),f
  1952  1651                     l3296:	
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  1955  1651  0840               	movf	(sprintf@fval+3)^(0+128),w
  1956  1652  00F3               	movwf	___flge@ff1+3
  1957  1653  083F               	movf	(sprintf@fval+2)^(0+128),w
  1958  1654  00F2               	movwf	___flge@ff1+2
  1959  1655  083E               	movf	(sprintf@fval+1)^(0+128),w
  1960  1656  00F1               	movwf	___flge@ff1+1
  1961  1657  083D               	movf	sprintf@fval^(0+128),w
  1962  1658  00F0               	movwf	___flge@ff1
  1963  1659  3000               	movlw	0
  1964  165A  00F7               	movwf	___flge@ff2+3
  1965  165B  3000               	movlw	0
  1966  165C  00F6               	movwf	___flge@ff2+2
  1967  165D  3000               	movlw	0
  1968  165E  00F5               	movwf	___flge@ff2+1
  1969  165F  3000               	movlw	0
  1970  1660  00F4               	movwf	___flge@ff2
  1971  1661  160A  158A  25E7  160A  118A  	fcall	___flge
  1972  1666  1803               	btfsc	3,0
  1973  1667  2E69               	goto	u5421
  1974  1668  2E6A               	goto	u5420
  1975  1669                     u5421:	
  1976  1669  2E87               	goto	l3302
  1977  166A                     u5420:	
  1978  166A                     l3298:	
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  1981  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1982  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1983  166C  0840               	movf	(sprintf@fval+3)^(0+128),w
  1984  166D  00F3               	movwf	___flneg@f1+3
  1985  166E  083F               	movf	(sprintf@fval+2)^(0+128),w
  1986  166F  00F2               	movwf	___flneg@f1+2
  1987  1670  083E               	movf	(sprintf@fval+1)^(0+128),w
  1988  1671  00F1               	movwf	___flneg@f1+1
  1989  1672  083D               	movf	sprintf@fval^(0+128),w
  1990  1673  00F0               	movwf	___flneg@f1
  1991  1674  120A  118A  2004  160A  118A  	fcall	___flneg
  1992  1679  0873               	movf	?___flneg+3,w
  1993  167A  1683               	bsf	3,5	;RP0=1, select bank1
  1994  167B  1303               	bcf	3,6	;RP1=0, select bank1
  1995  167C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1996  167D  0872               	movf	?___flneg+2,w
  1997  167E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1998  167F  0871               	movf	?___flneg+1,w
  1999  1680  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2000  1681  0870               	movf	?___flneg,w
  2001  1682  00BD               	movwf	sprintf@fval^(0+128)
  2002  1683                     l3300:	
  2003                           
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2005  1683  3003               	movlw	3
  2006  1684  04B9               	iorwf	sprintf@flag^(0+128),f
  2007  1685  3000               	movlw	0
  2008  1686  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  2009  1687                     l3302:	
  2010                           
  2011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2012  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2013  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2014  1689  01B7               	clrf	sprintf@eexp^(0+128)
  2015  168A  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2016  168B                     l3304:	
  2017                           
  2018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2019  168B  0840               	movf	(sprintf@fval+3)^(0+128),w
  2020  168C  00F3               	movwf	___fleq@ff1+3
  2021  168D  083F               	movf	(sprintf@fval+2)^(0+128),w
  2022  168E  00F2               	movwf	___fleq@ff1+2
  2023  168F  083E               	movf	(sprintf@fval+1)^(0+128),w
  2024  1690  00F1               	movwf	___fleq@ff1+1
  2025  1691  083D               	movf	sprintf@fval^(0+128),w
  2026  1692  00F0               	movwf	___fleq@ff1
  2027  1693  3000               	movlw	0
  2028  1694  00F7               	movwf	___fleq@ff2+3
  2029  1695  3000               	movlw	0
  2030  1696  00F6               	movwf	___fleq@ff2+2
  2031  1697  3000               	movlw	0
  2032  1698  00F5               	movwf	___fleq@ff2+1
  2033  1699  3000               	movlw	0
  2034  169A  00F4               	movwf	___fleq@ff2
  2035  169B  160A  158A  2476  160A  118A  	fcall	___fleq
  2036  16A0  1803               	btfsc	3,0
  2037  16A1  2EA3               	goto	u5431
  2038  16A2  2EA4               	goto	u5430
  2039  16A3                     u5431:	
  2040  16A3  2F94               	goto	l3330
  2041  16A4                     u5430:	
  2042  16A4                     l3306:	
  2043                           
  2044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2045  16A4  1003               	clrc
  2046  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2047  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2048  16A7  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2049  16A8  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2050  16A9  3E82               	addlw	130
  2051  16AA  00B7               	movwf	sprintf@eexp^(0+128)
  2052  16AB  30FF               	movlw	255
  2053  16AC  1803               	skipnc
  2054  16AD  3000               	movlw	0
  2055  16AE  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2056  16AF                     l3308:	
  2057                           
  2058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2059  16AF  30FF               	movlw	255
  2060  16B0  07B7               	addwf	sprintf@eexp^(0+128),f
  2061  16B1  1803               	skipnc
  2062  16B2  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2063  16B3  30FF               	movlw	255
  2064  16B4  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2065  16B5                     l3310:	
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2068  16B5  3003               	movlw	3
  2069  16B6  00F0               	movwf	___wmul@multiplier
  2070  16B7  3000               	movlw	0
  2071  16B8  00F1               	movwf	___wmul@multiplier+1
  2072  16B9  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2073  16BA  00F3               	movwf	___wmul@multiplicand+1
  2074  16BB  0837               	movf	sprintf@eexp^(0+128),w
  2075  16BC  00F2               	movwf	___wmul@multiplicand
  2076  16BD  160A  158A  2321  160A  118A  	fcall	___wmul
  2077  16C2  0871               	movf	?___wmul+1,w
  2078  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2079  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2080  16C5  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2081  16C6  0870               	movf	?___wmul,w
  2082  16C7  00B7               	movwf	sprintf@eexp^(0+128)
  2083  16C8                     l3312:	
  2084                           
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2086  16C8  300A               	movlw	10
  2087  16C9  00F7               	movwf	___awdiv@divisor
  2088  16CA  3000               	movlw	0
  2089  16CB  00F8               	movwf	___awdiv@divisor+1
  2090  16CC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2091  16CD  00FA               	movwf	___awdiv@dividend+1
  2092  16CE  0837               	movf	sprintf@eexp^(0+128),w
  2093  16CF  00F9               	movwf	___awdiv@dividend
  2094  16D0  160A  158A  257E  160A  118A  	fcall	___awdiv
  2095  16D5  0878               	movf	?___awdiv+1,w
  2096  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2097  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2098  16D8  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2099  16D9  0877               	movf	?___awdiv,w
  2100  16DA  00B7               	movwf	sprintf@eexp^(0+128)
  2101  16DB                     l3314:	
  2102                           
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2104  16DB  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2105  16DC  2EDE               	goto	u5441
  2106  16DD  2EDF               	goto	u5440
  2107  16DE                     u5441:	
  2108  16DE  2EE5               	goto	l3318
  2109  16DF                     u5440:	
  2110  16DF                     l3316:	
  2111                           
  2112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2113  16DF  30FF               	movlw	255
  2114  16E0  07B7               	addwf	sprintf@eexp^(0+128),f
  2115  16E1  1803               	skipnc
  2116  16E2  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2117  16E3  30FF               	movlw	255
  2118  16E4  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2119  16E5                     l3318:	
  2120                           
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2122  16E5  0337               	decf	sprintf@eexp^(0+128),w
  2123  16E6  3AFF               	xorlw	255
  2124  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2125  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2126  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2127  16EE  0841               	movf	?_scale+3,w
  2128  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2129  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2130  16F1  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2131  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2132  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2133  16F4  0840               	movf	?_scale+2,w
  2134  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2135  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2136  16F7  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2137  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2138  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2139  16FA  083F               	movf	?_scale+1,w
  2140  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2141  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2142  16FD  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2143  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2144  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2145  1700  083E               	movf	?_scale,w
  2146  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2147  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2148  1703  00B3               	movwf	sprintf@tmpval^(0+128)
  2149  1704                     l3320:	
  2150                           
  2151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2152  1704  0840               	movf	(sprintf@fval+3)^(0+128),w
  2153  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2154  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2155  1707  00A7               	movwf	___flmul@b+3
  2156  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2157  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2158  170A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2159  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2160  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2161  170D  00A6               	movwf	___flmul@b+2
  2162  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2163  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2164  1710  083E               	movf	(sprintf@fval+1)^(0+128),w
  2165  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2166  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2167  1713  00A5               	movwf	___flmul@b+1
  2168  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2169  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2170  1716  083D               	movf	sprintf@fval^(0+128),w
  2171  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2172  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2173  1719  00A4               	movwf	___flmul@b
  2174  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2175  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2176  171C  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2177  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2178  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2179  171F  00AB               	movwf	___flmul@a+3
  2180  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2181  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2182  1722  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2183  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2184  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2185  1725  00AA               	movwf	___flmul@a+2
  2186  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2187  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2188  1728  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2189  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2190  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2191  172B  00A9               	movwf	___flmul@a+1
  2192  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2193  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2194  172E  0833               	movf	sprintf@tmpval^(0+128),w
  2195  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2196  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2197  1731  00A8               	movwf	___flmul@a
  2198  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2199  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2200  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2201  1739  0827               	movf	?___flmul+3,w
  2202  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2203  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2204  173C  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2205  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2206  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2207  173F  0826               	movf	?___flmul+2,w
  2208  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2209  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2210  1742  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2211  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2212  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2213  1745  0825               	movf	?___flmul+1,w
  2214  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2215  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2216  1748  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2217  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2218  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2219  174B  0824               	movf	?___flmul,w
  2220  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2221  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2222  174E  00B3               	movwf	sprintf@tmpval^(0+128)
  2223  174F                     l3322:	
  2224                           
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2226  174F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2227  1750  00F3               	movwf	___flge@ff1+3
  2228  1751  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2229  1752  00F2               	movwf	___flge@ff1+2
  2230  1753  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2231  1754  00F1               	movwf	___flge@ff1+1
  2232  1755  0833               	movf	sprintf@tmpval^(0+128),w
  2233  1756  00F0               	movwf	___flge@ff1
  2234  1757  303F               	movlw	63
  2235  1758  00F7               	movwf	___flge@ff2+3
  2236  1759  3080               	movlw	128
  2237  175A  00F6               	movwf	___flge@ff2+2
  2238  175B  3000               	movlw	0
  2239  175C  00F5               	movwf	___flge@ff2+1
  2240  175D  3000               	movlw	0
  2241  175E  00F4               	movwf	___flge@ff2
  2242  175F  160A  158A  25E7  160A  118A  	fcall	___flge
  2243  1764  1803               	btfsc	3,0
  2244  1765  2F67               	goto	u5451
  2245  1766  2F68               	goto	u5450
  2246  1767                     u5451:	
  2247  1767  2F71               	goto	l3326
  2248  1768                     u5450:	
  2249  1768                     l3324:	
  2250                           
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2252  1768  30FF               	movlw	255
  2253  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2254  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2255  176B  07B7               	addwf	sprintf@eexp^(0+128),f
  2256  176C  1803               	skipnc
  2257  176D  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2258  176E  30FF               	movlw	255
  2259  176F  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2260  1770  2F94               	goto	l3330
  2261  1771                     l3326:	
  2262  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2263  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2264  1773  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2265  1774  00F3               	movwf	___flge@ff1+3
  2266  1775  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2267  1776  00F2               	movwf	___flge@ff1+2
  2268  1777  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2269  1778  00F1               	movwf	___flge@ff1+1
  2270  1779  0833               	movf	sprintf@tmpval^(0+128),w
  2271  177A  00F0               	movwf	___flge@ff1
  2272  177B  3041               	movlw	65
  2273  177C  00F7               	movwf	___flge@ff2+3
  2274  177D  3020               	movlw	32
  2275  177E  00F6               	movwf	___flge@ff2+2
  2276  177F  3000               	movlw	0
  2277  1780  00F5               	movwf	___flge@ff2+1
  2278  1781  3000               	movlw	0
  2279  1782  00F4               	movwf	___flge@ff2
  2280  1783  160A  158A  25E7  160A  118A  	fcall	___flge
  2281  1788  1C03               	btfss	3,0
  2282  1789  2F8B               	goto	u5461
  2283  178A  2F8C               	goto	u5460
  2284  178B                     u5461:	
  2285  178B  2F94               	goto	l3330
  2286  178C                     u5460:	
  2287  178C                     l3328:	
  2288                           
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2290  178C  3001               	movlw	1
  2291  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2292  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2293  178F  07B7               	addwf	sprintf@eexp^(0+128),f
  2294  1790  1803               	skipnc
  2295  1791  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2296  1792  3000               	movlw	0
  2297  1793  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2298  1794                     l3330:	
  2299                           
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2301  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2302  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2303  1796  0842               	movf	(sprintf@prec+1)^(0+128),w
  2304  1797  3A80               	xorlw	128
  2305  1798  00FF               	movwf	btemp+1
  2306  1799  3080               	movlw	128
  2307  179A  027F               	subwf	btemp+1,w
  2308  179B  1D03               	skipz
  2309  179C  2F9F               	goto	u5475
  2310  179D  300D               	movlw	13
  2311  179E  0241               	subwf	sprintf@prec^(0+128),w
  2312  179F                     u5475:	
  2313  179F  1803               	skipnc
  2314  17A0  2FA2               	goto	u5471
  2315  17A1  2FA3               	goto	u5470
  2316  17A2                     u5471:	
  2317  17A2  2FEA               	goto	l3334
  2318  17A3                     u5470:	
  2319  17A3                     l3332:	
  2320                           
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2322  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2323  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2324  17A5  0841               	movf	sprintf@prec^(0+128),w
  2325  17A6  160A  118A  2320  160A  118A  	fcall	_fround
  2326  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2327  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2328  17AD  0841               	movf	?_fround+3,w
  2329  17AE  00D5               	movwf	___fladd@b+3
  2330  17AF  0840               	movf	?_fround+2,w
  2331  17B0  00D4               	movwf	___fladd@b+2
  2332  17B1  083F               	movf	?_fround+1,w
  2333  17B2  00D3               	movwf	___fladd@b+1
  2334  17B3  083E               	movf	?_fround,w
  2335  17B4  00D2               	movwf	___fladd@b
  2336  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2337  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2338  17B7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2339  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2340  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2341  17BA  00D9               	movwf	___fladd@a+3
  2342  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2343  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2344  17BD  083F               	movf	(sprintf@fval+2)^(0+128),w
  2345  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2346  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2347  17C0  00D8               	movwf	___fladd@a+2
  2348  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2349  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2350  17C3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2351  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2352  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2353  17C6  00D7               	movwf	___fladd@a+1
  2354  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2355  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2356  17C9  083D               	movf	sprintf@fval^(0+128),w
  2357  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2358  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2359  17CC  00D6               	movwf	___fladd@a
  2360  17CD  120A  118A  2021  160A  118A  	fcall	___fladd
  2361  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2362  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2363  17D4  0855               	movf	?___fladd+3,w
  2364  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2365  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2366  17D7  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2367  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2368  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2369  17DA  0854               	movf	?___fladd+2,w
  2370  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2371  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2372  17DD  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2373  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2374  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2375  17E0  0853               	movf	?___fladd+1,w
  2376  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2377  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2378  17E3  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2379  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2380  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2381  17E6  0852               	movf	?___fladd,w
  2382  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2383  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2384  17E9  00BD               	movwf	sprintf@fval^(0+128)
  2385  17EA                     l3334:	
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2388  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2389  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2390  17EC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2391  17ED  3A80               	xorlw	128
  2392  17EE  00FF               	movwf	btemp+1
  2393  17EF  3080               	movlw	128
  2394  17F0  027F               	subwf	btemp+1,w
  2395  17F1  1D03               	skipz
  2396  17F2  2FF5               	goto	u5485
  2397  17F3  300A               	movlw	10
  2398  17F4  0237               	subwf	sprintf@eexp^(0+128),w
  2399  17F5                     u5485:	
  2400  17F5  1803               	skipnc
  2401  17F6  2FFA               	goto	u5481
  2402  17F7  120A  118A  2AA9   	goto	u5480
  2403  17FA                     u5481:	
  2404  17FA  120A  118A  2AFA   	goto	l3342
  2405  17FD                     L3:	
  2406  17FD                     L2:	
  2407  17FD  120A  118A  2FEE   	ljmp	l3524
  2408                           
  2409                           	psect	text3
  2410  0940                     __ptext3:	
  2411 ;; *************** function _scale *****************
  2412 ;; Defined at:
  2413 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  scl             1    wreg     char 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  scl             1   48[BANK0 ] char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  4   30[BANK0 ] char 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2427 ;;      Params:         0       4       0       0       0
  2428 ;;      Locals:         0       5       0       0       0
  2429 ;;      Temps:          0      10       0       0       0
  2430 ;;      Totals:         0      19       0       0       0
  2431 ;;Total ram usage:       19 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    2
  2434 ;; This function calls:
  2435 ;;		___awdiv
  2436 ;;		___awmod
  2437 ;;		___flmul
  2438 ;; This function is called by:
  2439 ;;		_sprintf
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _scale
  2445  0940                     _scale:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2449                           ;scale@scl stored from wreg
  2450  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0942  00D0               	movwf	scale@scl
  2453  0943                     l2876:	
  2454                           
  2455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2456  0943  1FD0               	btfss	scale@scl,7
  2457  0944  2946               	goto	u4371
  2458  0945  2947               	goto	u4370
  2459  0946                     u4371:	
  2460  0946  2AF4               	goto	l2898
  2461  0947                     u4370:	
  2462  0947                     l2878:	
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2465  0947  09D0               	comf	scale@scl,f
  2466  0948  0AD0               	incf	scale@scl,f
  2467  0949                     l2880:	
  2468                           
  2469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2470  0949  0850               	movf	scale@scl,w
  2471  094A  3A80               	xorlw	128
  2472  094B  3E12               	addlw	-238
  2473  094C  1C03               	skipc
  2474  094D  294F               	goto	u4381
  2475  094E  2950               	goto	u4380
  2476  094F                     u4381:	
  2477  094F  2A38               	goto	l2888
  2478  0950                     u4380:	
  2479  0950                     l2882:	
  2480                           
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2482  0950  300A               	movlw	10
  2483  0951  00F7               	movwf	___awdiv@divisor
  2484  0952  3000               	movlw	0
  2485  0953  00F8               	movwf	___awdiv@divisor+1
  2486  0954  0850               	movf	scale@scl,w
  2487  0955  00F2               	movwf	___awmod@dividend
  2488  0956  01F3               	clrf	___awmod@dividend+1
  2489  0957  1BF2               	btfsc	___awmod@dividend,7
  2490  0958  03F3               	decf	___awmod@dividend+1,f
  2491  0959  3064               	movlw	100
  2492  095A  00F0               	movwf	___awmod@divisor
  2493  095B  3000               	movlw	0
  2494  095C  00F1               	movwf	___awmod@divisor+1
  2495  095D  120A  158A  2006  120A  158A  	fcall	___awmod
  2496  0962  0871               	movf	?___awmod+1,w
  2497  0963  00FA               	movwf	___awdiv@dividend+1
  2498  0964  0870               	movf	?___awmod,w
  2499  0965  00F9               	movwf	___awdiv@dividend
  2500  0966  160A  158A  257E  120A  158A  	fcall	___awdiv
  2501  096B  0877               	movf	?___awdiv,w
  2502  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2503  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2504  096E  00C2               	movwf	??_scale
  2505  096F  3001               	movlw	1
  2506  0970                     u4395:	
  2507  0970  1003               	clrc
  2508  0971  0DC2               	rlf	??_scale,f
  2509  0972  3EFF               	addlw	-1
  2510  0973  1D03               	skipz
  2511  0974  2970               	goto	u4395
  2512  0975  1003               	clrc
  2513  0976  0D42               	rlf	??_scale,w
  2514  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2515  0978  0084               	movwf	4
  2516  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  2517  097E  00C3               	movwf	??_scale+1
  2518  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  2519  0984  00C4               	movwf	??_scale+2
  2520  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  2521  098A  00C5               	movwf	??_scale+3
  2522  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  2523  0990  00C6               	movwf	??_scale+4
  2524  0991  0846               	movf	??_scale+4,w
  2525  0992  00A7               	movwf	___flmul@b+3
  2526  0993  0845               	movf	??_scale+3,w
  2527  0994  00A6               	movwf	___flmul@b+2
  2528  0995  0844               	movf	??_scale+2,w
  2529  0996  00A5               	movwf	___flmul@b+1
  2530  0997  0843               	movf	??_scale+1,w
  2531  0998  00A4               	movwf	___flmul@b
  2532  0999  3064               	movlw	100
  2533  099A  00F7               	movwf	___awdiv@divisor
  2534  099B  3000               	movlw	0
  2535  099C  00F8               	movwf	___awdiv@divisor+1
  2536  099D  0850               	movf	scale@scl,w
  2537  099E  00F9               	movwf	___awdiv@dividend
  2538  099F  01FA               	clrf	___awdiv@dividend+1
  2539  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2540  09A1  03FA               	decf	___awdiv@dividend+1,f
  2541  09A2  160A  158A  257E  120A  158A  	fcall	___awdiv
  2542  09A7  0877               	movf	?___awdiv,w
  2543  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2544  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2545  09AA  00C7               	movwf	??_scale+5
  2546  09AB  3001               	movlw	1
  2547  09AC                     u4405:	
  2548  09AC  1003               	clrc
  2549  09AD  0DC7               	rlf	??_scale+5,f
  2550  09AE  3EFF               	addlw	-1
  2551  09AF  1D03               	skipz
  2552  09B0  29AC               	goto	u4405
  2553  09B1  1003               	clrc
  2554  09B2  0D47               	rlf	??_scale+5,w
  2555  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2556  09B4  0084               	movwf	4
  2557  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  2558  09BA  00C8               	movwf	??_scale+6
  2559  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  2560  09C0  00C9               	movwf	??_scale+7
  2561  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  2562  09C6  00CA               	movwf	??_scale+8
  2563  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  2564  09CC  00CB               	movwf	??_scale+9
  2565  09CD  084B               	movf	??_scale+9,w
  2566  09CE  00AB               	movwf	___flmul@a+3
  2567  09CF  084A               	movf	??_scale+8,w
  2568  09D0  00AA               	movwf	___flmul@a+2
  2569  09D1  0849               	movf	??_scale+7,w
  2570  09D2  00A9               	movwf	___flmul@a+1
  2571  09D3  0848               	movf	??_scale+6,w
  2572  09D4  00A8               	movwf	___flmul@a
  2573  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2574  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2575  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2576  09DC  0827               	movf	?___flmul+3,w
  2577  09DD  00CF               	movwf	_scale$887+3
  2578  09DE  0826               	movf	?___flmul+2,w
  2579  09DF  00CE               	movwf	_scale$887+2
  2580  09E0  0825               	movf	?___flmul+1,w
  2581  09E1  00CD               	movwf	_scale$887+1
  2582  09E2  0824               	movf	?___flmul,w
  2583  09E3  00CC               	movwf	_scale$887
  2584                           
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2586  09E4  300A               	movlw	10
  2587  09E5  00F0               	movwf	___awmod@divisor
  2588  09E6  3000               	movlw	0
  2589  09E7  00F1               	movwf	___awmod@divisor+1
  2590  09E8  0850               	movf	scale@scl,w
  2591  09E9  00F2               	movwf	___awmod@dividend
  2592  09EA  01F3               	clrf	___awmod@dividend+1
  2593  09EB  1BF2               	btfsc	___awmod@dividend,7
  2594  09EC  03F3               	decf	___awmod@dividend+1,f
  2595  09ED  120A  158A  2006  120A  158A  	fcall	___awmod
  2596  09F2  0870               	movf	?___awmod,w
  2597  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2598  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2599  09F5  00C2               	movwf	??_scale
  2600  09F6  3001               	movlw	1
  2601  09F7                     u4415:	
  2602  09F7  1003               	clrc
  2603  09F8  0DC2               	rlf	??_scale,f
  2604  09F9  3EFF               	addlw	-1
  2605  09FA  1D03               	skipz
  2606  09FB  29F7               	goto	u4415
  2607  09FC  1003               	clrc
  2608  09FD  0D42               	rlf	??_scale,w
  2609  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2610  09FF  0084               	movwf	4
  2611  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  2612  0A05  00C3               	movwf	??_scale+1
  2613  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  2614  0A0B  00C4               	movwf	??_scale+2
  2615  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  2616  0A11  00C5               	movwf	??_scale+3
  2617  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  2618  0A17  00C6               	movwf	??_scale+4
  2619  0A18  0846               	movf	??_scale+4,w
  2620  0A19  00A7               	movwf	___flmul@b+3
  2621  0A1A  0845               	movf	??_scale+3,w
  2622  0A1B  00A6               	movwf	___flmul@b+2
  2623  0A1C  0844               	movf	??_scale+2,w
  2624  0A1D  00A5               	movwf	___flmul@b+1
  2625  0A1E  0843               	movf	??_scale+1,w
  2626  0A1F  00A4               	movwf	___flmul@b
  2627  0A20  084F               	movf	_scale$887+3,w
  2628  0A21  00AB               	movwf	___flmul@a+3
  2629  0A22  084E               	movf	_scale$887+2,w
  2630  0A23  00AA               	movwf	___flmul@a+2
  2631  0A24  084D               	movf	_scale$887+1,w
  2632  0A25  00A9               	movwf	___flmul@a+1
  2633  0A26  084C               	movf	_scale$887,w
  2634  0A27  00A8               	movwf	___flmul@a
  2635  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2636  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0A2F  0827               	movf	?___flmul+3,w
  2639  0A30  00C1               	movwf	?_scale+3
  2640  0A31  0826               	movf	?___flmul+2,w
  2641  0A32  00C0               	movwf	?_scale+2
  2642  0A33  0825               	movf	?___flmul+1,w
  2643  0A34  00BF               	movwf	?_scale+1
  2644  0A35  0824               	movf	?___flmul,w
  2645  0A36  00BE               	movwf	?_scale
  2646  0A37  2C9E               	goto	l210
  2647  0A38                     l2888:	
  2648  0A38  0850               	movf	scale@scl,w
  2649  0A39  3A80               	xorlw	128
  2650  0A3A  3E75               	addlw	-139
  2651  0A3B  1C03               	skipc
  2652  0A3C  2A3E               	goto	u4421
  2653  0A3D  2A3F               	goto	u4420
  2654  0A3E                     u4421:	
  2655  0A3E  2AC7               	goto	l2894
  2656  0A3F                     u4420:	
  2657  0A3F                     l2890:	
  2658                           
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2660  0A3F  300A               	movlw	10
  2661  0A40  00F0               	movwf	___awmod@divisor
  2662  0A41  3000               	movlw	0
  2663  0A42  00F1               	movwf	___awmod@divisor+1
  2664  0A43  0850               	movf	scale@scl,w
  2665  0A44  00F2               	movwf	___awmod@dividend
  2666  0A45  01F3               	clrf	___awmod@dividend+1
  2667  0A46  1BF2               	btfsc	___awmod@dividend,7
  2668  0A47  03F3               	decf	___awmod@dividend+1,f
  2669  0A48  120A  158A  2006  120A  158A  	fcall	___awmod
  2670  0A4D  0870               	movf	?___awmod,w
  2671  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0A50  00C2               	movwf	??_scale
  2674  0A51  3001               	movlw	1
  2675  0A52                     u4435:	
  2676  0A52  1003               	clrc
  2677  0A53  0DC2               	rlf	??_scale,f
  2678  0A54  3EFF               	addlw	-1
  2679  0A55  1D03               	skipz
  2680  0A56  2A52               	goto	u4435
  2681  0A57  1003               	clrc
  2682  0A58  0D42               	rlf	??_scale,w
  2683  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2684  0A5A  0084               	movwf	4
  2685  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  2686  0A60  00C3               	movwf	??_scale+1
  2687  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  2688  0A66  00C4               	movwf	??_scale+2
  2689  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  2690  0A6C  00C5               	movwf	??_scale+3
  2691  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  2692  0A72  00C6               	movwf	??_scale+4
  2693  0A73  0846               	movf	??_scale+4,w
  2694  0A74  00A7               	movwf	___flmul@b+3
  2695  0A75  0845               	movf	??_scale+3,w
  2696  0A76  00A6               	movwf	___flmul@b+2
  2697  0A77  0844               	movf	??_scale+2,w
  2698  0A78  00A5               	movwf	___flmul@b+1
  2699  0A79  0843               	movf	??_scale+1,w
  2700  0A7A  00A4               	movwf	___flmul@b
  2701  0A7B  300A               	movlw	10
  2702  0A7C  00F7               	movwf	___awdiv@divisor
  2703  0A7D  3000               	movlw	0
  2704  0A7E  00F8               	movwf	___awdiv@divisor+1
  2705  0A7F  0850               	movf	scale@scl,w
  2706  0A80  00F9               	movwf	___awdiv@dividend
  2707  0A81  01FA               	clrf	___awdiv@dividend+1
  2708  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2709  0A83  03FA               	decf	___awdiv@dividend+1,f
  2710  0A84  160A  158A  257E  120A  158A  	fcall	___awdiv
  2711  0A89  0877               	movf	?___awdiv,w
  2712  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0A8C  00C7               	movwf	??_scale+5
  2715  0A8D  3001               	movlw	1
  2716  0A8E                     u4445:	
  2717  0A8E  1003               	clrc
  2718  0A8F  0DC7               	rlf	??_scale+5,f
  2719  0A90  3EFF               	addlw	-1
  2720  0A91  1D03               	skipz
  2721  0A92  2A8E               	goto	u4445
  2722  0A93  1003               	clrc
  2723  0A94  0D47               	rlf	??_scale+5,w
  2724  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2725  0A96  0084               	movwf	4
  2726  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  2727  0A9C  00C8               	movwf	??_scale+6
  2728  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  2729  0AA2  00C9               	movwf	??_scale+7
  2730  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  2731  0AA8  00CA               	movwf	??_scale+8
  2732  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  2733  0AAE  00CB               	movwf	??_scale+9
  2734  0AAF  084B               	movf	??_scale+9,w
  2735  0AB0  00AB               	movwf	___flmul@a+3
  2736  0AB1  084A               	movf	??_scale+8,w
  2737  0AB2  00AA               	movwf	___flmul@a+2
  2738  0AB3  0849               	movf	??_scale+7,w
  2739  0AB4  00A9               	movwf	___flmul@a+1
  2740  0AB5  0848               	movf	??_scale+6,w
  2741  0AB6  00A8               	movwf	___flmul@a
  2742  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2743  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0ABE  0827               	movf	?___flmul+3,w
  2746  0ABF  00C1               	movwf	?_scale+3
  2747  0AC0  0826               	movf	?___flmul+2,w
  2748  0AC1  00C0               	movwf	?_scale+2
  2749  0AC2  0825               	movf	?___flmul+1,w
  2750  0AC3  00BF               	movwf	?_scale+1
  2751  0AC4  0824               	movf	?___flmul,w
  2752  0AC5  00BE               	movwf	?_scale
  2753  0AC6  2C9E               	goto	l210
  2754  0AC7                     l2894:	
  2755                           
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  2757  0AC7  0850               	movf	scale@scl,w
  2758  0AC8  00C2               	movwf	??_scale
  2759  0AC9  3001               	movlw	1
  2760  0ACA                     u4455:	
  2761  0ACA  1003               	clrc
  2762  0ACB  0DC2               	rlf	??_scale,f
  2763  0ACC  3EFF               	addlw	-1
  2764  0ACD  1D03               	skipz
  2765  0ACE  2ACA               	goto	u4455
  2766  0ACF  1003               	clrc
  2767  0AD0  0D42               	rlf	??_scale,w
  2768  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2769  0AD2  0084               	movwf	4
  2770  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  2771  0AD8  00C3               	movwf	??_scale+1
  2772  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  2773  0ADE  00C4               	movwf	??_scale+2
  2774  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  2775  0AE4  00C5               	movwf	??_scale+3
  2776  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  2777  0AEA  00C6               	movwf	??_scale+4
  2778  0AEB  0846               	movf	??_scale+4,w
  2779  0AEC  00C1               	movwf	?_scale+3
  2780  0AED  0845               	movf	??_scale+3,w
  2781  0AEE  00C0               	movwf	?_scale+2
  2782  0AEF  0844               	movf	??_scale+2,w
  2783  0AF0  00BF               	movwf	?_scale+1
  2784  0AF1  0843               	movf	??_scale+1,w
  2785  0AF2  00BE               	movwf	?_scale
  2786  0AF3  2C9E               	goto	l210
  2787  0AF4                     l2898:	
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  2790  0AF4  0850               	movf	scale@scl,w
  2791  0AF5  3A80               	xorlw	128
  2792  0AF6  3E12               	addlw	-238
  2793  0AF7  1C03               	skipc
  2794  0AF8  2AFA               	goto	u4461
  2795  0AF9  2AFB               	goto	u4460
  2796  0AFA                     u4461:	
  2797  0AFA  2BE3               	goto	l2906
  2798  0AFB                     u4460:	
  2799  0AFB                     l2900:	
  2800                           
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  2802  0AFB  300A               	movlw	10
  2803  0AFC  00F7               	movwf	___awdiv@divisor
  2804  0AFD  3000               	movlw	0
  2805  0AFE  00F8               	movwf	___awdiv@divisor+1
  2806  0AFF  0850               	movf	scale@scl,w
  2807  0B00  00F2               	movwf	___awmod@dividend
  2808  0B01  01F3               	clrf	___awmod@dividend+1
  2809  0B02  1BF2               	btfsc	___awmod@dividend,7
  2810  0B03  03F3               	decf	___awmod@dividend+1,f
  2811  0B04  3064               	movlw	100
  2812  0B05  00F0               	movwf	___awmod@divisor
  2813  0B06  3000               	movlw	0
  2814  0B07  00F1               	movwf	___awmod@divisor+1
  2815  0B08  120A  158A  2006  120A  158A  	fcall	___awmod
  2816  0B0D  0871               	movf	?___awmod+1,w
  2817  0B0E  00FA               	movwf	___awdiv@dividend+1
  2818  0B0F  0870               	movf	?___awmod,w
  2819  0B10  00F9               	movwf	___awdiv@dividend
  2820  0B11  160A  158A  257E  120A  158A  	fcall	___awdiv
  2821  0B16  0877               	movf	?___awdiv,w
  2822  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0B19  00C2               	movwf	??_scale
  2825  0B1A  3001               	movlw	1
  2826  0B1B                     u4475:	
  2827  0B1B  1003               	clrc
  2828  0B1C  0DC2               	rlf	??_scale,f
  2829  0B1D  3EFF               	addlw	-1
  2830  0B1E  1D03               	skipz
  2831  0B1F  2B1B               	goto	u4475
  2832  0B20  1003               	clrc
  2833  0B21  0D42               	rlf	??_scale,w
  2834  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2835  0B23  0084               	movwf	4
  2836  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  2837  0B29  00C3               	movwf	??_scale+1
  2838  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  2839  0B2F  00C4               	movwf	??_scale+2
  2840  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  2841  0B35  00C5               	movwf	??_scale+3
  2842  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  2843  0B3B  00C6               	movwf	??_scale+4
  2844  0B3C  0846               	movf	??_scale+4,w
  2845  0B3D  00A7               	movwf	___flmul@b+3
  2846  0B3E  0845               	movf	??_scale+3,w
  2847  0B3F  00A6               	movwf	___flmul@b+2
  2848  0B40  0844               	movf	??_scale+2,w
  2849  0B41  00A5               	movwf	___flmul@b+1
  2850  0B42  0843               	movf	??_scale+1,w
  2851  0B43  00A4               	movwf	___flmul@b
  2852  0B44  3064               	movlw	100
  2853  0B45  00F7               	movwf	___awdiv@divisor
  2854  0B46  3000               	movlw	0
  2855  0B47  00F8               	movwf	___awdiv@divisor+1
  2856  0B48  0850               	movf	scale@scl,w
  2857  0B49  00F9               	movwf	___awdiv@dividend
  2858  0B4A  01FA               	clrf	___awdiv@dividend+1
  2859  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2860  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2861  0B4D  160A  158A  257E  120A  158A  	fcall	___awdiv
  2862  0B52  0877               	movf	?___awdiv,w
  2863  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0B55  00C7               	movwf	??_scale+5
  2866  0B56  3001               	movlw	1
  2867  0B57                     u4485:	
  2868  0B57  1003               	clrc
  2869  0B58  0DC7               	rlf	??_scale+5,f
  2870  0B59  3EFF               	addlw	-1
  2871  0B5A  1D03               	skipz
  2872  0B5B  2B57               	goto	u4485
  2873  0B5C  1003               	clrc
  2874  0B5D  0D47               	rlf	??_scale+5,w
  2875  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2876  0B5F  0084               	movwf	4
  2877  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  2878  0B65  00C8               	movwf	??_scale+6
  2879  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  2880  0B6B  00C9               	movwf	??_scale+7
  2881  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  2882  0B71  00CA               	movwf	??_scale+8
  2883  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  2884  0B77  00CB               	movwf	??_scale+9
  2885  0B78  084B               	movf	??_scale+9,w
  2886  0B79  00AB               	movwf	___flmul@a+3
  2887  0B7A  084A               	movf	??_scale+8,w
  2888  0B7B  00AA               	movwf	___flmul@a+2
  2889  0B7C  0849               	movf	??_scale+7,w
  2890  0B7D  00A9               	movwf	___flmul@a+1
  2891  0B7E  0848               	movf	??_scale+6,w
  2892  0B7F  00A8               	movwf	___flmul@a
  2893  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  2894  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0B87  0827               	movf	?___flmul+3,w
  2897  0B88  00CF               	movwf	_scale$887+3
  2898  0B89  0826               	movf	?___flmul+2,w
  2899  0B8A  00CE               	movwf	_scale$887+2
  2900  0B8B  0825               	movf	?___flmul+1,w
  2901  0B8C  00CD               	movwf	_scale$887+1
  2902  0B8D  0824               	movf	?___flmul,w
  2903  0B8E  00CC               	movwf	_scale$887
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  2906  0B8F  300A               	movlw	10
  2907  0B90  00F0               	movwf	___awmod@divisor
  2908  0B91  3000               	movlw	0
  2909  0B92  00F1               	movwf	___awmod@divisor+1
  2910  0B93  0850               	movf	scale@scl,w
  2911  0B94  00F2               	movwf	___awmod@dividend
  2912  0B95  01F3               	clrf	___awmod@dividend+1
  2913  0B96  1BF2               	btfsc	___awmod@dividend,7
  2914  0B97  03F3               	decf	___awmod@dividend+1,f
  2915  0B98  120A  158A  2006  120A  158A  	fcall	___awmod
  2916  0B9D  0870               	movf	?___awmod,w
  2917  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0BA0  00C2               	movwf	??_scale
  2920  0BA1  3001               	movlw	1
  2921  0BA2                     u4495:	
  2922  0BA2  1003               	clrc
  2923  0BA3  0DC2               	rlf	??_scale,f
  2924  0BA4  3EFF               	addlw	-1
  2925  0BA5  1D03               	skipz
  2926  0BA6  2BA2               	goto	u4495
  2927  0BA7  1003               	clrc
  2928  0BA8  0D42               	rlf	??_scale,w
  2929  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2930  0BAA  0084               	movwf	4
  2931  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  2932  0BB0  00C3               	movwf	??_scale+1
  2933  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  2934  0BB6  00C4               	movwf	??_scale+2
  2935  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  2936  0BBC  00C5               	movwf	??_scale+3
  2937  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  2938  0BC2  00C6               	movwf	??_scale+4
  2939  0BC3  0846               	movf	??_scale+4,w
  2940  0BC4  00A7               	movwf	___flmul@b+3
  2941  0BC5  0845               	movf	??_scale+3,w
  2942  0BC6  00A6               	movwf	___flmul@b+2
  2943  0BC7  0844               	movf	??_scale+2,w
  2944  0BC8  00A5               	movwf	___flmul@b+1
  2945  0BC9  0843               	movf	??_scale+1,w
  2946  0BCA  00A4               	movwf	___flmul@b
  2947  0BCB  084F               	movf	_scale$887+3,w
  2948  0BCC  00AB               	movwf	___flmul@a+3
  2949  0BCD  084E               	movf	_scale$887+2,w
  2950  0BCE  00AA               	movwf	___flmul@a+2
  2951  0BCF  084D               	movf	_scale$887+1,w
  2952  0BD0  00A9               	movwf	___flmul@a+1
  2953  0BD1  084C               	movf	_scale$887,w
  2954  0BD2  00A8               	movwf	___flmul@a
  2955  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  2956  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0BDA  0827               	movf	?___flmul+3,w
  2959  0BDB  00C1               	movwf	?_scale+3
  2960  0BDC  0826               	movf	?___flmul+2,w
  2961  0BDD  00C0               	movwf	?_scale+2
  2962  0BDE  0825               	movf	?___flmul+1,w
  2963  0BDF  00BF               	movwf	?_scale+1
  2964  0BE0  0824               	movf	?___flmul,w
  2965  0BE1  00BE               	movwf	?_scale
  2966  0BE2  2C9E               	goto	l210
  2967  0BE3                     l2906:	
  2968  0BE3  0850               	movf	scale@scl,w
  2969  0BE4  3A80               	xorlw	128
  2970  0BE5  3E75               	addlw	-139
  2971  0BE6  1C03               	skipc
  2972  0BE7  2BE9               	goto	u4501
  2973  0BE8  2BEA               	goto	u4500
  2974  0BE9                     u4501:	
  2975  0BE9  2C72               	goto	l2912
  2976  0BEA                     u4500:	
  2977  0BEA                     l2908:	
  2978                           
  2979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2980  0BEA  300A               	movlw	10
  2981  0BEB  00F0               	movwf	___awmod@divisor
  2982  0BEC  3000               	movlw	0
  2983  0BED  00F1               	movwf	___awmod@divisor+1
  2984  0BEE  0850               	movf	scale@scl,w
  2985  0BEF  00F2               	movwf	___awmod@dividend
  2986  0BF0  01F3               	clrf	___awmod@dividend+1
  2987  0BF1  1BF2               	btfsc	___awmod@dividend,7
  2988  0BF2  03F3               	decf	___awmod@dividend+1,f
  2989  0BF3  120A  158A  2006  120A  158A  	fcall	___awmod
  2990  0BF8  0870               	movf	?___awmod,w
  2991  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0BFB  00C2               	movwf	??_scale
  2994  0BFC  3001               	movlw	1
  2995  0BFD                     u4515:	
  2996  0BFD  1003               	clrc
  2997  0BFE  0DC2               	rlf	??_scale,f
  2998  0BFF  3EFF               	addlw	-1
  2999  0C00  1D03               	skipz
  3000  0C01  2BFD               	goto	u4515
  3001  0C02  1003               	clrc
  3002  0C03  0D42               	rlf	??_scale,w
  3003  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3004  0C05  0084               	movwf	4
  3005  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  3006  0C0B  00C3               	movwf	??_scale+1
  3007  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3008  0C11  00C4               	movwf	??_scale+2
  3009  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  3010  0C17  00C5               	movwf	??_scale+3
  3011  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  3012  0C1D  00C6               	movwf	??_scale+4
  3013  0C1E  0846               	movf	??_scale+4,w
  3014  0C1F  00A7               	movwf	___flmul@b+3
  3015  0C20  0845               	movf	??_scale+3,w
  3016  0C21  00A6               	movwf	___flmul@b+2
  3017  0C22  0844               	movf	??_scale+2,w
  3018  0C23  00A5               	movwf	___flmul@b+1
  3019  0C24  0843               	movf	??_scale+1,w
  3020  0C25  00A4               	movwf	___flmul@b
  3021  0C26  300A               	movlw	10
  3022  0C27  00F7               	movwf	___awdiv@divisor
  3023  0C28  3000               	movlw	0
  3024  0C29  00F8               	movwf	___awdiv@divisor+1
  3025  0C2A  0850               	movf	scale@scl,w
  3026  0C2B  00F9               	movwf	___awdiv@dividend
  3027  0C2C  01FA               	clrf	___awdiv@dividend+1
  3028  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3029  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3030  0C2F  160A  158A  257E  120A  158A  	fcall	___awdiv
  3031  0C34  0877               	movf	?___awdiv,w
  3032  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0C37  00C7               	movwf	??_scale+5
  3035  0C38  3001               	movlw	1
  3036  0C39                     u4525:	
  3037  0C39  1003               	clrc
  3038  0C3A  0DC7               	rlf	??_scale+5,f
  3039  0C3B  3EFF               	addlw	-1
  3040  0C3C  1D03               	skipz
  3041  0C3D  2C39               	goto	u4525
  3042  0C3E  1003               	clrc
  3043  0C3F  0D47               	rlf	??_scale+5,w
  3044  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3045  0C41  0084               	movwf	4
  3046  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  3047  0C47  00C8               	movwf	??_scale+6
  3048  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  3049  0C4D  00C9               	movwf	??_scale+7
  3050  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  3051  0C53  00CA               	movwf	??_scale+8
  3052  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  3053  0C59  00CB               	movwf	??_scale+9
  3054  0C5A  084B               	movf	??_scale+9,w
  3055  0C5B  00AB               	movwf	___flmul@a+3
  3056  0C5C  084A               	movf	??_scale+8,w
  3057  0C5D  00AA               	movwf	___flmul@a+2
  3058  0C5E  0849               	movf	??_scale+7,w
  3059  0C5F  00A9               	movwf	___flmul@a+1
  3060  0C60  0848               	movf	??_scale+6,w
  3061  0C61  00A8               	movwf	___flmul@a
  3062  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3063  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0C69  0827               	movf	?___flmul+3,w
  3066  0C6A  00C1               	movwf	?_scale+3
  3067  0C6B  0826               	movf	?___flmul+2,w
  3068  0C6C  00C0               	movwf	?_scale+2
  3069  0C6D  0825               	movf	?___flmul+1,w
  3070  0C6E  00BF               	movwf	?_scale+1
  3071  0C6F  0824               	movf	?___flmul,w
  3072  0C70  00BE               	movwf	?_scale
  3073  0C71  2C9E               	goto	l210
  3074  0C72                     l2912:	
  3075                           
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3077  0C72  0850               	movf	scale@scl,w
  3078  0C73  00C2               	movwf	??_scale
  3079  0C74  3001               	movlw	1
  3080  0C75                     u4535:	
  3081  0C75  1003               	clrc
  3082  0C76  0DC2               	rlf	??_scale,f
  3083  0C77  3EFF               	addlw	-1
  3084  0C78  1D03               	skipz
  3085  0C79  2C75               	goto	u4535
  3086  0C7A  1003               	clrc
  3087  0C7B  0D42               	rlf	??_scale,w
  3088  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3089  0C7D  0084               	movwf	4
  3090  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  3091  0C83  00C3               	movwf	??_scale+1
  3092  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  3093  0C89  00C4               	movwf	??_scale+2
  3094  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  3095  0C8F  00C5               	movwf	??_scale+3
  3096  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  3097  0C95  00C6               	movwf	??_scale+4
  3098  0C96  0846               	movf	??_scale+4,w
  3099  0C97  00C1               	movwf	?_scale+3
  3100  0C98  0845               	movf	??_scale+3,w
  3101  0C99  00C0               	movwf	?_scale+2
  3102  0C9A  0844               	movf	??_scale+2,w
  3103  0C9B  00BF               	movwf	?_scale+1
  3104  0C9C  0843               	movf	??_scale+1,w
  3105  0C9D  00BE               	movwf	?_scale
  3106  0C9E                     l210:	
  3107  0C9E  0008               	return
  3108  0C9F                     __end_of_scale:	
  3109                           
  3110                           	psect	text4
  3111  0806                     __ptext4:	
  3112 ;; *************** function ___awmod *****************
  3113 ;; Defined at:
  3114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  divisor         2    0[COMMON] int 
  3117 ;;  dividend        2    2[COMMON] int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  sign            1    6[COMMON] unsigned char 
  3120 ;;  counter         1    5[COMMON] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2    0[COMMON] int 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         4       0       0       0       0
  3131 ;;      Locals:         2       0       0       0       0
  3132 ;;      Temps:          1       0       0       0       0
  3133 ;;      Totals:         7       0       0       0       0
  3134 ;;Total ram usage:        7 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_scale
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function ___awmod
  3145  0806                     ___awmod:	
  3146  0806                     l2428:	
  3147                           ;incstack = 0
  3148                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3149                           
  3150  0806  01F6               	clrf	___awmod@sign
  3151  0807                     l2430:	
  3152  0807  1FF3               	btfss	___awmod@dividend+1,7
  3153  0808  280A               	goto	u3241
  3154  0809  280B               	goto	u3240
  3155  080A                     u3241:	
  3156  080A  2812               	goto	l2436
  3157  080B                     u3240:	
  3158  080B                     l2432:	
  3159  080B  09F2               	comf	___awmod@dividend,f
  3160  080C  09F3               	comf	___awmod@dividend+1,f
  3161  080D  0AF2               	incf	___awmod@dividend,f
  3162  080E  1903               	skipnz
  3163  080F  0AF3               	incf	___awmod@dividend+1,f
  3164  0810                     l2434:	
  3165  0810  01F6               	clrf	___awmod@sign
  3166  0811  0AF6               	incf	___awmod@sign,f
  3167  0812                     l2436:	
  3168  0812  1FF1               	btfss	___awmod@divisor+1,7
  3169  0813  2815               	goto	u3251
  3170  0814  2816               	goto	u3250
  3171  0815                     u3251:	
  3172  0815  281B               	goto	l2440
  3173  0816                     u3250:	
  3174  0816                     l2438:	
  3175  0816  09F0               	comf	___awmod@divisor,f
  3176  0817  09F1               	comf	___awmod@divisor+1,f
  3177  0818  0AF0               	incf	___awmod@divisor,f
  3178  0819  1903               	skipnz
  3179  081A  0AF1               	incf	___awmod@divisor+1,f
  3180  081B                     l2440:	
  3181  081B  0870               	movf	___awmod@divisor,w
  3182  081C  0471               	iorwf	___awmod@divisor+1,w
  3183  081D  1903               	btfsc	3,2
  3184  081E  2820               	goto	u3261
  3185  081F  2821               	goto	u3260
  3186  0820                     u3261:	
  3187  0820  2850               	goto	l2458
  3188  0821                     u3260:	
  3189  0821                     l2442:	
  3190  0821  01F5               	clrf	___awmod@counter
  3191  0822  0AF5               	incf	___awmod@counter,f
  3192  0823  282F               	goto	l2448
  3193  0824                     l2444:	
  3194  0824  3001               	movlw	1
  3195  0825                     u3275:	
  3196  0825  1003               	clrc
  3197  0826  0DF0               	rlf	___awmod@divisor,f
  3198  0827  0DF1               	rlf	___awmod@divisor+1,f
  3199  0828  3EFF               	addlw	-1
  3200  0829  1D03               	skipz
  3201  082A  2825               	goto	u3275
  3202  082B                     l2446:	
  3203  082B  3001               	movlw	1
  3204  082C  00F4               	movwf	??___awmod
  3205  082D  0874               	movf	??___awmod,w
  3206  082E  07F5               	addwf	___awmod@counter,f
  3207  082F                     l2448:	
  3208  082F  1FF1               	btfss	___awmod@divisor+1,7
  3209  0830  2832               	goto	u3281
  3210  0831  2833               	goto	u3280
  3211  0832                     u3281:	
  3212  0832  2824               	goto	l2444
  3213  0833                     u3280:	
  3214  0833                     l2450:	
  3215  0833  0871               	movf	___awmod@divisor+1,w
  3216  0834  0273               	subwf	___awmod@dividend+1,w
  3217  0835  1D03               	skipz
  3218  0836  2839               	goto	u3295
  3219  0837  0870               	movf	___awmod@divisor,w
  3220  0838  0272               	subwf	___awmod@dividend,w
  3221  0839                     u3295:	
  3222  0839  1C03               	skipc
  3223  083A  283C               	goto	u3291
  3224  083B  283D               	goto	u3290
  3225  083C                     u3291:	
  3226  083C  2843               	goto	l2454
  3227  083D                     u3290:	
  3228  083D                     l2452:	
  3229  083D  0870               	movf	___awmod@divisor,w
  3230  083E  02F2               	subwf	___awmod@dividend,f
  3231  083F  0871               	movf	___awmod@divisor+1,w
  3232  0840  1C03               	skipc
  3233  0841  03F3               	decf	___awmod@dividend+1,f
  3234  0842  02F3               	subwf	___awmod@dividend+1,f
  3235  0843                     l2454:	
  3236  0843  3001               	movlw	1
  3237  0844                     u3305:	
  3238  0844  1003               	clrc
  3239  0845  0CF1               	rrf	___awmod@divisor+1,f
  3240  0846  0CF0               	rrf	___awmod@divisor,f
  3241  0847  3EFF               	addlw	-1
  3242  0848  1D03               	skipz
  3243  0849  2844               	goto	u3305
  3244  084A                     l2456:	
  3245  084A  3001               	movlw	1
  3246  084B  02F5               	subwf	___awmod@counter,f
  3247  084C  1D03               	btfss	3,2
  3248  084D  284F               	goto	u3311
  3249  084E  2850               	goto	u3310
  3250  084F                     u3311:	
  3251  084F  2833               	goto	l2450
  3252  0850                     u3310:	
  3253  0850                     l2458:	
  3254  0850  0876               	movf	___awmod@sign,w
  3255  0851  1903               	btfsc	3,2
  3256  0852  2854               	goto	u3321
  3257  0853  2855               	goto	u3320
  3258  0854                     u3321:	
  3259  0854  285A               	goto	l2462
  3260  0855                     u3320:	
  3261  0855                     l2460:	
  3262  0855  09F2               	comf	___awmod@dividend,f
  3263  0856  09F3               	comf	___awmod@dividend+1,f
  3264  0857  0AF2               	incf	___awmod@dividend,f
  3265  0858  1903               	skipnz
  3266  0859  0AF3               	incf	___awmod@dividend+1,f
  3267  085A                     l2462:	
  3268  085A  0873               	movf	___awmod@dividend+1,w
  3269  085B  00F1               	movwf	?___awmod+1
  3270  085C  0872               	movf	___awmod@dividend,w
  3271  085D  00F0               	movwf	?___awmod
  3272  085E                     l481:	
  3273  085E  0008               	return
  3274  085F                     __end_of___awmod:	
  3275                           
  3276                           	psect	text5
  3277  1D7E                     __ptext5:	
  3278 ;; *************** function ___awdiv *****************
  3279 ;; Defined at:
  3280 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  divisor         2    7[COMMON] int 
  3283 ;;  dividend        2    9[COMMON] int 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  quotient        2    2[BANK0 ] int 
  3286 ;;  sign            1    1[BANK0 ] unsigned char 
  3287 ;;  counter         1    0[BANK0 ] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2    7[COMMON] int 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         4       0       0       0       0
  3298 ;;      Locals:         0       4       0       0       0
  3299 ;;      Temps:          1       0       0       0       0
  3300 ;;      Totals:         5       4       0       0       0
  3301 ;;Total ram usage:        9 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_scale
  3307 ;;		_sprintf
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function ___awdiv
  3313  1D7E                     ___awdiv:	
  3314  1D7E                     l2384:	
  3315                           ;incstack = 0
  3316                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3317                           
  3318  1D7E  1283               	bcf	3,5	;RP0=0, select bank0
  3319  1D7F  1303               	bcf	3,6	;RP1=0, select bank0
  3320  1D80  01A1               	clrf	___awdiv@sign
  3321  1D81                     l2386:	
  3322  1D81  1FF8               	btfss	___awdiv@divisor+1,7
  3323  1D82  2D84               	goto	u3141
  3324  1D83  2D85               	goto	u3140
  3325  1D84                     u3141:	
  3326  1D84  2D8C               	goto	l2392
  3327  1D85                     u3140:	
  3328  1D85                     l2388:	
  3329  1D85  09F7               	comf	___awdiv@divisor,f
  3330  1D86  09F8               	comf	___awdiv@divisor+1,f
  3331  1D87  0AF7               	incf	___awdiv@divisor,f
  3332  1D88  1903               	skipnz
  3333  1D89  0AF8               	incf	___awdiv@divisor+1,f
  3334  1D8A                     l2390:	
  3335  1D8A  01A1               	clrf	___awdiv@sign
  3336  1D8B  0AA1               	incf	___awdiv@sign,f
  3337  1D8C                     l2392:	
  3338  1D8C  1FFA               	btfss	___awdiv@dividend+1,7
  3339  1D8D  2D8F               	goto	u3151
  3340  1D8E  2D90               	goto	u3150
  3341  1D8F                     u3151:	
  3342  1D8F  2D99               	goto	l2398
  3343  1D90                     u3150:	
  3344  1D90                     l2394:	
  3345  1D90  09F9               	comf	___awdiv@dividend,f
  3346  1D91  09FA               	comf	___awdiv@dividend+1,f
  3347  1D92  0AF9               	incf	___awdiv@dividend,f
  3348  1D93  1903               	skipnz
  3349  1D94  0AFA               	incf	___awdiv@dividend+1,f
  3350  1D95                     l2396:	
  3351  1D95  3001               	movlw	1
  3352  1D96  00FB               	movwf	??___awdiv
  3353  1D97  087B               	movf	??___awdiv,w
  3354  1D98  06A1               	xorwf	___awdiv@sign,f
  3355  1D99                     l2398:	
  3356  1D99  01A2               	clrf	___awdiv@quotient
  3357  1D9A  01A3               	clrf	___awdiv@quotient+1
  3358  1D9B                     l2400:	
  3359  1D9B  0877               	movf	___awdiv@divisor,w
  3360  1D9C  0478               	iorwf	___awdiv@divisor+1,w
  3361  1D9D  1903               	btfsc	3,2
  3362  1D9E  2DA0               	goto	u3161
  3363  1D9F  2DA1               	goto	u3160
  3364  1DA0                     u3161:	
  3365  1DA0  2DD8               	goto	l2420
  3366  1DA1                     u3160:	
  3367  1DA1                     l2402:	
  3368  1DA1  01A0               	clrf	___awdiv@counter
  3369  1DA2  0AA0               	incf	___awdiv@counter,f
  3370  1DA3  2DAF               	goto	l2408
  3371  1DA4                     l2404:	
  3372  1DA4  3001               	movlw	1
  3373  1DA5                     u3175:	
  3374  1DA5  1003               	clrc
  3375  1DA6  0DF7               	rlf	___awdiv@divisor,f
  3376  1DA7  0DF8               	rlf	___awdiv@divisor+1,f
  3377  1DA8  3EFF               	addlw	-1
  3378  1DA9  1D03               	skipz
  3379  1DAA  2DA5               	goto	u3175
  3380  1DAB                     l2406:	
  3381  1DAB  3001               	movlw	1
  3382  1DAC  00FB               	movwf	??___awdiv
  3383  1DAD  087B               	movf	??___awdiv,w
  3384  1DAE  07A0               	addwf	___awdiv@counter,f
  3385  1DAF                     l2408:	
  3386  1DAF  1FF8               	btfss	___awdiv@divisor+1,7
  3387  1DB0  2DB2               	goto	u3181
  3388  1DB1  2DB3               	goto	u3180
  3389  1DB2                     u3181:	
  3390  1DB2  2DA4               	goto	l2404
  3391  1DB3                     u3180:	
  3392  1DB3                     l2410:	
  3393  1DB3  3001               	movlw	1
  3394  1DB4                     u3195:	
  3395  1DB4  1003               	clrc
  3396  1DB5  0DA2               	rlf	___awdiv@quotient,f
  3397  1DB6  0DA3               	rlf	___awdiv@quotient+1,f
  3398  1DB7  3EFF               	addlw	-1
  3399  1DB8  1D03               	skipz
  3400  1DB9  2DB4               	goto	u3195
  3401  1DBA  0878               	movf	___awdiv@divisor+1,w
  3402  1DBB  027A               	subwf	___awdiv@dividend+1,w
  3403  1DBC  1D03               	skipz
  3404  1DBD  2DC0               	goto	u3205
  3405  1DBE  0877               	movf	___awdiv@divisor,w
  3406  1DBF  0279               	subwf	___awdiv@dividend,w
  3407  1DC0                     u3205:	
  3408  1DC0  1C03               	skipc
  3409  1DC1  2DC3               	goto	u3201
  3410  1DC2  2DC4               	goto	u3200
  3411  1DC3                     u3201:	
  3412  1DC3  2DCB               	goto	l2416
  3413  1DC4                     u3200:	
  3414  1DC4                     l2412:	
  3415  1DC4  0877               	movf	___awdiv@divisor,w
  3416  1DC5  02F9               	subwf	___awdiv@dividend,f
  3417  1DC6  0878               	movf	___awdiv@divisor+1,w
  3418  1DC7  1C03               	skipc
  3419  1DC8  03FA               	decf	___awdiv@dividend+1,f
  3420  1DC9  02FA               	subwf	___awdiv@dividend+1,f
  3421  1DCA                     l2414:	
  3422  1DCA  1422               	bsf	___awdiv@quotient,0
  3423  1DCB                     l2416:	
  3424  1DCB  3001               	movlw	1
  3425  1DCC                     u3215:	
  3426  1DCC  1003               	clrc
  3427  1DCD  0CF8               	rrf	___awdiv@divisor+1,f
  3428  1DCE  0CF7               	rrf	___awdiv@divisor,f
  3429  1DCF  3EFF               	addlw	-1
  3430  1DD0  1D03               	skipz
  3431  1DD1  2DCC               	goto	u3215
  3432  1DD2                     l2418:	
  3433  1DD2  3001               	movlw	1
  3434  1DD3  02A0               	subwf	___awdiv@counter,f
  3435  1DD4  1D03               	btfss	3,2
  3436  1DD5  2DD7               	goto	u3221
  3437  1DD6  2DD8               	goto	u3220
  3438  1DD7                     u3221:	
  3439  1DD7  2DB3               	goto	l2410
  3440  1DD8                     u3220:	
  3441  1DD8                     l2420:	
  3442  1DD8  0821               	movf	___awdiv@sign,w
  3443  1DD9  1903               	btfsc	3,2
  3444  1DDA  2DDC               	goto	u3231
  3445  1DDB  2DDD               	goto	u3230
  3446  1DDC                     u3231:	
  3447  1DDC  2DE2               	goto	l2424
  3448  1DDD                     u3230:	
  3449  1DDD                     l2422:	
  3450  1DDD  09A2               	comf	___awdiv@quotient,f
  3451  1DDE  09A3               	comf	___awdiv@quotient+1,f
  3452  1DDF  0AA2               	incf	___awdiv@quotient,f
  3453  1DE0  1903               	skipnz
  3454  1DE1  0AA3               	incf	___awdiv@quotient+1,f
  3455  1DE2                     l2424:	
  3456  1DE2  0823               	movf	___awdiv@quotient+1,w
  3457  1DE3  00F8               	movwf	?___awdiv+1
  3458  1DE4  0822               	movf	___awdiv@quotient,w
  3459  1DE5  00F7               	movwf	?___awdiv
  3460  1DE6                     l468:	
  3461  1DE6  0008               	return
  3462  1DE7                     __end_of___awdiv:	
  3463                           
  3464                           	psect	text6
  3465  000F                     __ptext6:	
  3466 ;; *************** function _isdigit *****************
  3467 ;; Defined at:
  3468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  c               1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  c               1    1[COMMON] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         2       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         2       0       0       0       0
  3486 ;;Total ram usage:        2 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_sprintf
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _isdigit
  3497  000F                     _isdigit:	
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3501                           ;isdigit@c stored from wreg
  3502  000F  00F1               	movwf	isdigit@c
  3503  0010                     l2916:	
  3504  0010  01F0               	clrf	_isdigit$710
  3505  0011                     l2918:	
  3506  0011  303A               	movlw	58
  3507  0012  0271               	subwf	isdigit@c,w
  3508  0013  1803               	skipnc
  3509  0014  2816               	goto	u4541
  3510  0015  2817               	goto	u4540
  3511  0016                     u4541:	
  3512  0016  281F               	goto	l2924
  3513  0017                     u4540:	
  3514  0017                     l2920:	
  3515  0017  3030               	movlw	48
  3516  0018  0271               	subwf	isdigit@c,w
  3517  0019  1C03               	skipc
  3518  001A  281C               	goto	u4551
  3519  001B  281D               	goto	u4550
  3520  001C                     u4551:	
  3521  001C  281F               	goto	l2924
  3522  001D                     u4550:	
  3523  001D                     l2922:	
  3524  001D  01F0               	clrf	_isdigit$710
  3525  001E  0AF0               	incf	_isdigit$710,f
  3526  001F                     l2924:	
  3527  001F  0C70               	rrf	_isdigit$710,w
  3528  0020                     l796:	
  3529  0020  0008               	return
  3530  0021                     __end_of_isdigit:	
  3531                           
  3532                           	psect	text7
  3533  1320                     __ptext7:	
  3534 ;; *************** function _fround *****************
  3535 ;; Defined at:
  3536 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  prec            1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  prec            1   49[BANK0 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  4   30[BANK0 ] unsigned char 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       4       0       0       0
  3551 ;;      Locals:         0       9       0       0       0
  3552 ;;      Temps:          0       7       0       0       0
  3553 ;;      Totals:         0      20       0       0       0
  3554 ;;Total ram usage:       20 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    2
  3557 ;; This function calls:
  3558 ;;		___flmul
  3559 ;;		___lwdiv
  3560 ;;		___lwmod
  3561 ;; This function is called by:
  3562 ;;		_sprintf
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _fround
  3568  1320                     _fround:	
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3572                           ;fround@prec stored from wreg
  3573  1320  1283               	bcf	3,5	;RP0=0, select bank0
  3574  1321  1303               	bcf	3,6	;RP1=0, select bank0
  3575  1322  00D1               	movwf	fround@prec
  3576  1323                     l2858:	
  3577                           
  3578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3579  1323  306E               	movlw	110
  3580  1324  0251               	subwf	fround@prec,w
  3581  1325  1C03               	skipc
  3582  1326  2B28               	goto	u4291
  3583  1327  2B29               	goto	u4290
  3584  1328                     u4291:	
  3585  1328  2C36               	goto	l2866
  3586  1329                     u4290:	
  3587  1329                     l2860:	
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3590  1329  303F               	movlw	63
  3591  132A  00A7               	movwf	___flmul@b+3
  3592  132B  3000               	movlw	0
  3593  132C  00A6               	movwf	___flmul@b+2
  3594  132D  3000               	movlw	0
  3595  132E  00A5               	movwf	___flmul@b+1
  3596  132F  3000               	movlw	0
  3597  1330  00A4               	movwf	___flmul@b
  3598  1331  3064               	movlw	100
  3599  1332  00F6               	movwf	___lwdiv@divisor
  3600  1333  3000               	movlw	0
  3601  1334  00F7               	movwf	___lwdiv@divisor+1
  3602  1335  0851               	movf	fround@prec,w
  3603  1336  00C2               	movwf	??_fround
  3604  1337  01C3               	clrf	??_fround+1
  3605  1338  0842               	movf	??_fround,w
  3606  1339  00F8               	movwf	___lwdiv@dividend
  3607  133A  0843               	movf	??_fround+1,w
  3608  133B  00F9               	movwf	___lwdiv@dividend+1
  3609  133C  160A  158A  2432  160A  118A  	fcall	___lwdiv
  3610  1341  0876               	movf	?___lwdiv,w
  3611  1342  1283               	bcf	3,5	;RP0=0, select bank0
  3612  1343  1303               	bcf	3,6	;RP1=0, select bank0
  3613  1344  00C4               	movwf	??_fround+2
  3614  1345  3001               	movlw	1
  3615  1346                     u4305:	
  3616  1346  1003               	clrc
  3617  1347  0DC4               	rlf	??_fround+2,f
  3618  1348  3EFF               	addlw	-1
  3619  1349  1D03               	skipz
  3620  134A  2B46               	goto	u4305
  3621  134B  1003               	clrc
  3622  134C  0D44               	rlf	??_fround+2,w
  3623  134D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3624  134E  0084               	movwf	4
  3625  134F  160A  158A  200A  160A  118A  	fcall	stringdir
  3626  1354  00C5               	movwf	??_fround+3
  3627  1355  160A  158A  200A  160A  118A  	fcall	stringdir
  3628  135A  00C6               	movwf	??_fround+4
  3629  135B  160A  158A  200A  160A  118A  	fcall	stringdir
  3630  1360  00C7               	movwf	??_fround+5
  3631  1361  160A  158A  200A  160A  118A  	fcall	stringdir
  3632  1366  00C8               	movwf	??_fround+6
  3633  1367  0848               	movf	??_fround+6,w
  3634  1368  00AB               	movwf	___flmul@a+3
  3635  1369  0847               	movf	??_fround+5,w
  3636  136A  00AA               	movwf	___flmul@a+2
  3637  136B  0846               	movf	??_fround+4,w
  3638  136C  00A9               	movwf	___flmul@a+1
  3639  136D  0845               	movf	??_fround+3,w
  3640  136E  00A8               	movwf	___flmul@a
  3641  136F  120A  158A  249F  160A  118A  	fcall	___flmul
  3642  1374  1283               	bcf	3,5	;RP0=0, select bank0
  3643  1375  1303               	bcf	3,6	;RP1=0, select bank0
  3644  1376  0827               	movf	?___flmul+3,w
  3645  1377  00D0               	movwf	_fround$885+3
  3646  1378  0826               	movf	?___flmul+2,w
  3647  1379  00CF               	movwf	_fround$885+2
  3648  137A  0825               	movf	?___flmul+1,w
  3649  137B  00CE               	movwf	_fround$885+1
  3650  137C  0824               	movf	?___flmul,w
  3651  137D  00CD               	movwf	_fround$885
  3652                           
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3654  137E  300A               	movlw	10
  3655  137F  00F6               	movwf	___lwdiv@divisor
  3656  1380  3000               	movlw	0
  3657  1381  00F7               	movwf	___lwdiv@divisor+1
  3658  1382  0851               	movf	fround@prec,w
  3659  1383  00C2               	movwf	??_fround
  3660  1384  01C3               	clrf	??_fround+1
  3661  1385  0842               	movf	??_fround,w
  3662  1386  00F2               	movwf	___lwmod@dividend
  3663  1387  0843               	movf	??_fround+1,w
  3664  1388  00F3               	movwf	___lwmod@dividend+1
  3665  1389  3064               	movlw	100
  3666  138A  00F0               	movwf	___lwmod@divisor
  3667  138B  3000               	movlw	0
  3668  138C  00F1               	movwf	___lwmod@divisor+1
  3669  138D  160A  158A  23BC  160A  118A  	fcall	___lwmod
  3670  1392  0871               	movf	?___lwmod+1,w
  3671  1393  00F9               	movwf	___lwdiv@dividend+1
  3672  1394  0870               	movf	?___lwmod,w
  3673  1395  00F8               	movwf	___lwdiv@dividend
  3674  1396  160A  158A  2432  160A  118A  	fcall	___lwdiv
  3675  139B  0876               	movf	?___lwdiv,w
  3676  139C  1283               	bcf	3,5	;RP0=0, select bank0
  3677  139D  1303               	bcf	3,6	;RP1=0, select bank0
  3678  139E  00C4               	movwf	??_fround+2
  3679  139F  3001               	movlw	1
  3680  13A0                     u4315:	
  3681  13A0  1003               	clrc
  3682  13A1  0DC4               	rlf	??_fround+2,f
  3683  13A2  3EFF               	addlw	-1
  3684  13A3  1D03               	skipz
  3685  13A4  2BA0               	goto	u4315
  3686  13A5  1003               	clrc
  3687  13A6  0D44               	rlf	??_fround+2,w
  3688  13A7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3689  13A8  0084               	movwf	4
  3690  13A9  160A  158A  200A  160A  118A  	fcall	stringdir
  3691  13AE  00C5               	movwf	??_fround+3
  3692  13AF  160A  158A  200A  160A  118A  	fcall	stringdir
  3693  13B4  00C6               	movwf	??_fround+4
  3694  13B5  160A  158A  200A  160A  118A  	fcall	stringdir
  3695  13BA  00C7               	movwf	??_fround+5
  3696  13BB  160A  158A  200A  160A  118A  	fcall	stringdir
  3697  13C0  00C8               	movwf	??_fround+6
  3698  13C1  0848               	movf	??_fround+6,w
  3699  13C2  00A7               	movwf	___flmul@b+3
  3700  13C3  0847               	movf	??_fround+5,w
  3701  13C4  00A6               	movwf	___flmul@b+2
  3702  13C5  0846               	movf	??_fround+4,w
  3703  13C6  00A5               	movwf	___flmul@b+1
  3704  13C7  0845               	movf	??_fround+3,w
  3705  13C8  00A4               	movwf	___flmul@b
  3706  13C9  0850               	movf	_fround$885+3,w
  3707  13CA  00AB               	movwf	___flmul@a+3
  3708  13CB  084F               	movf	_fround$885+2,w
  3709  13CC  00AA               	movwf	___flmul@a+2
  3710  13CD  084E               	movf	_fround$885+1,w
  3711  13CE  00A9               	movwf	___flmul@a+1
  3712  13CF  084D               	movf	_fround$885,w
  3713  13D0  00A8               	movwf	___flmul@a
  3714  13D1  120A  158A  249F  160A  118A  	fcall	___flmul
  3715  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  3716  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  3717  13D8  0827               	movf	?___flmul+3,w
  3718  13D9  00CC               	movwf	_fround$886+3
  3719  13DA  0826               	movf	?___flmul+2,w
  3720  13DB  00CB               	movwf	_fround$886+2
  3721  13DC  0825               	movf	?___flmul+1,w
  3722  13DD  00CA               	movwf	_fround$886+1
  3723  13DE  0824               	movf	?___flmul,w
  3724  13DF  00C9               	movwf	_fround$886
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3727  13E0  300A               	movlw	10
  3728  13E1  00F0               	movwf	___lwmod@divisor
  3729  13E2  3000               	movlw	0
  3730  13E3  00F1               	movwf	___lwmod@divisor+1
  3731  13E4  0851               	movf	fround@prec,w
  3732  13E5  00C2               	movwf	??_fround
  3733  13E6  01C3               	clrf	??_fround+1
  3734  13E7  0842               	movf	??_fround,w
  3735  13E8  00F2               	movwf	___lwmod@dividend
  3736  13E9  0843               	movf	??_fround+1,w
  3737  13EA  00F3               	movwf	___lwmod@dividend+1
  3738  13EB  160A  158A  23BC  160A  118A  	fcall	___lwmod
  3739  13F0  0870               	movf	?___lwmod,w
  3740  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  3741  13F2  1303               	bcf	3,6	;RP1=0, select bank0
  3742  13F3  00C4               	movwf	??_fround+2
  3743  13F4  3001               	movlw	1
  3744  13F5                     u4325:	
  3745  13F5  1003               	clrc
  3746  13F6  0DC4               	rlf	??_fround+2,f
  3747  13F7  3EFF               	addlw	-1
  3748  13F8  1D03               	skipz
  3749  13F9  2BF5               	goto	u4325
  3750  13FA  1003               	clrc
  3751  13FB  0D44               	rlf	??_fround+2,w
  3752  13FC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3753  13FD  0084               	movwf	4
  3754  13FE  160A  158A  200A  160A  118A  	fcall	stringdir
  3755  1403  00C5               	movwf	??_fround+3
  3756  1404  160A  158A  200A  160A  118A  	fcall	stringdir
  3757  1409  00C6               	movwf	??_fround+4
  3758  140A  160A  158A  200A  160A  118A  	fcall	stringdir
  3759  140F  00C7               	movwf	??_fround+5
  3760  1410  160A  158A  200A  160A  118A  	fcall	stringdir
  3761  1415  00C8               	movwf	??_fround+6
  3762  1416  0848               	movf	??_fround+6,w
  3763  1417  00A7               	movwf	___flmul@b+3
  3764  1418  0847               	movf	??_fround+5,w
  3765  1419  00A6               	movwf	___flmul@b+2
  3766  141A  0846               	movf	??_fround+4,w
  3767  141B  00A5               	movwf	___flmul@b+1
  3768  141C  0845               	movf	??_fround+3,w
  3769  141D  00A4               	movwf	___flmul@b
  3770  141E  084C               	movf	_fround$886+3,w
  3771  141F  00AB               	movwf	___flmul@a+3
  3772  1420  084B               	movf	_fround$886+2,w
  3773  1421  00AA               	movwf	___flmul@a+2
  3774  1422  084A               	movf	_fround$886+1,w
  3775  1423  00A9               	movwf	___flmul@a+1
  3776  1424  0849               	movf	_fround$886,w
  3777  1425  00A8               	movwf	___flmul@a
  3778  1426  120A  158A  249F  160A  118A  	fcall	___flmul
  3779  142B  1283               	bcf	3,5	;RP0=0, select bank0
  3780  142C  1303               	bcf	3,6	;RP1=0, select bank0
  3781  142D  0827               	movf	?___flmul+3,w
  3782  142E  00C1               	movwf	?_fround+3
  3783  142F  0826               	movf	?___flmul+2,w
  3784  1430  00C0               	movwf	?_fround+2
  3785  1431  0825               	movf	?___flmul+1,w
  3786  1432  00BF               	movwf	?_fround+1
  3787  1433  0824               	movf	?___flmul,w
  3788  1434  00BE               	movwf	?_fround
  3789  1435  2D2A               	goto	l203
  3790  1436                     l2866:	
  3791  1436  300B               	movlw	11
  3792  1437  0251               	subwf	fround@prec,w
  3793  1438  1C03               	skipc
  3794  1439  2C3B               	goto	u4331
  3795  143A  2C3C               	goto	u4330
  3796  143B                     u4331:	
  3797  143B  2CE7               	goto	l2872
  3798  143C                     u4330:	
  3799  143C                     l2868:	
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3802  143C  303F               	movlw	63
  3803  143D  00A7               	movwf	___flmul@b+3
  3804  143E  3000               	movlw	0
  3805  143F  00A6               	movwf	___flmul@b+2
  3806  1440  3000               	movlw	0
  3807  1441  00A5               	movwf	___flmul@b+1
  3808  1442  3000               	movlw	0
  3809  1443  00A4               	movwf	___flmul@b
  3810  1444  300A               	movlw	10
  3811  1445  00F6               	movwf	___lwdiv@divisor
  3812  1446  3000               	movlw	0
  3813  1447  00F7               	movwf	___lwdiv@divisor+1
  3814  1448  0851               	movf	fround@prec,w
  3815  1449  00C2               	movwf	??_fround
  3816  144A  01C3               	clrf	??_fround+1
  3817  144B  0842               	movf	??_fround,w
  3818  144C  00F8               	movwf	___lwdiv@dividend
  3819  144D  0843               	movf	??_fround+1,w
  3820  144E  00F9               	movwf	___lwdiv@dividend+1
  3821  144F  160A  158A  2432  160A  118A  	fcall	___lwdiv
  3822  1454  0876               	movf	?___lwdiv,w
  3823  1455  1283               	bcf	3,5	;RP0=0, select bank0
  3824  1456  1303               	bcf	3,6	;RP1=0, select bank0
  3825  1457  00C4               	movwf	??_fround+2
  3826  1458  3001               	movlw	1
  3827  1459                     u4345:	
  3828  1459  1003               	clrc
  3829  145A  0DC4               	rlf	??_fround+2,f
  3830  145B  3EFF               	addlw	-1
  3831  145C  1D03               	skipz
  3832  145D  2C59               	goto	u4345
  3833  145E  1003               	clrc
  3834  145F  0D44               	rlf	??_fround+2,w
  3835  1460  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3836  1461  0084               	movwf	4
  3837  1462  160A  158A  200A  160A  118A  	fcall	stringdir
  3838  1467  00C5               	movwf	??_fround+3
  3839  1468  160A  158A  200A  160A  118A  	fcall	stringdir
  3840  146D  00C6               	movwf	??_fround+4
  3841  146E  160A  158A  200A  160A  118A  	fcall	stringdir
  3842  1473  00C7               	movwf	??_fround+5
  3843  1474  160A  158A  200A  160A  118A  	fcall	stringdir
  3844  1479  00C8               	movwf	??_fround+6
  3845  147A  0848               	movf	??_fround+6,w
  3846  147B  00AB               	movwf	___flmul@a+3
  3847  147C  0847               	movf	??_fround+5,w
  3848  147D  00AA               	movwf	___flmul@a+2
  3849  147E  0846               	movf	??_fround+4,w
  3850  147F  00A9               	movwf	___flmul@a+1
  3851  1480  0845               	movf	??_fround+3,w
  3852  1481  00A8               	movwf	___flmul@a
  3853  1482  120A  158A  249F  160A  118A  	fcall	___flmul
  3854  1487  1283               	bcf	3,5	;RP0=0, select bank0
  3855  1488  1303               	bcf	3,6	;RP1=0, select bank0
  3856  1489  0827               	movf	?___flmul+3,w
  3857  148A  00D0               	movwf	_fround$885+3
  3858  148B  0826               	movf	?___flmul+2,w
  3859  148C  00CF               	movwf	_fround$885+2
  3860  148D  0825               	movf	?___flmul+1,w
  3861  148E  00CE               	movwf	_fround$885+1
  3862  148F  0824               	movf	?___flmul,w
  3863  1490  00CD               	movwf	_fround$885
  3864                           
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3866  1491  300A               	movlw	10
  3867  1492  00F0               	movwf	___lwmod@divisor
  3868  1493  3000               	movlw	0
  3869  1494  00F1               	movwf	___lwmod@divisor+1
  3870  1495  0851               	movf	fround@prec,w
  3871  1496  00C2               	movwf	??_fround
  3872  1497  01C3               	clrf	??_fround+1
  3873  1498  0842               	movf	??_fround,w
  3874  1499  00F2               	movwf	___lwmod@dividend
  3875  149A  0843               	movf	??_fround+1,w
  3876  149B  00F3               	movwf	___lwmod@dividend+1
  3877  149C  160A  158A  23BC  160A  118A  	fcall	___lwmod
  3878  14A1  0870               	movf	?___lwmod,w
  3879  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  3880  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  3881  14A4  00C4               	movwf	??_fround+2
  3882  14A5  3001               	movlw	1
  3883  14A6                     u4355:	
  3884  14A6  1003               	clrc
  3885  14A7  0DC4               	rlf	??_fround+2,f
  3886  14A8  3EFF               	addlw	-1
  3887  14A9  1D03               	skipz
  3888  14AA  2CA6               	goto	u4355
  3889  14AB  1003               	clrc
  3890  14AC  0D44               	rlf	??_fround+2,w
  3891  14AD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3892  14AE  0084               	movwf	4
  3893  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  3894  14B4  00C5               	movwf	??_fround+3
  3895  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  3896  14BA  00C6               	movwf	??_fround+4
  3897  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  3898  14C0  00C7               	movwf	??_fround+5
  3899  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  3900  14C6  00C8               	movwf	??_fround+6
  3901  14C7  0848               	movf	??_fround+6,w
  3902  14C8  00A7               	movwf	___flmul@b+3
  3903  14C9  0847               	movf	??_fround+5,w
  3904  14CA  00A6               	movwf	___flmul@b+2
  3905  14CB  0846               	movf	??_fround+4,w
  3906  14CC  00A5               	movwf	___flmul@b+1
  3907  14CD  0845               	movf	??_fround+3,w
  3908  14CE  00A4               	movwf	___flmul@b
  3909  14CF  0850               	movf	_fround$885+3,w
  3910  14D0  00AB               	movwf	___flmul@a+3
  3911  14D1  084F               	movf	_fround$885+2,w
  3912  14D2  00AA               	movwf	___flmul@a+2
  3913  14D3  084E               	movf	_fround$885+1,w
  3914  14D4  00A9               	movwf	___flmul@a+1
  3915  14D5  084D               	movf	_fround$885,w
  3916  14D6  00A8               	movwf	___flmul@a
  3917  14D7  120A  158A  249F  160A  118A  	fcall	___flmul
  3918  14DC  1283               	bcf	3,5	;RP0=0, select bank0
  3919  14DD  1303               	bcf	3,6	;RP1=0, select bank0
  3920  14DE  0827               	movf	?___flmul+3,w
  3921  14DF  00C1               	movwf	?_fround+3
  3922  14E0  0826               	movf	?___flmul+2,w
  3923  14E1  00C0               	movwf	?_fround+2
  3924  14E2  0825               	movf	?___flmul+1,w
  3925  14E3  00BF               	movwf	?_fround+1
  3926  14E4  0824               	movf	?___flmul,w
  3927  14E5  00BE               	movwf	?_fround
  3928  14E6  2D2A               	goto	l203
  3929  14E7                     l2872:	
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  3932  14E7  303F               	movlw	63
  3933  14E8  00A7               	movwf	___flmul@b+3
  3934  14E9  3000               	movlw	0
  3935  14EA  00A6               	movwf	___flmul@b+2
  3936  14EB  3000               	movlw	0
  3937  14EC  00A5               	movwf	___flmul@b+1
  3938  14ED  3000               	movlw	0
  3939  14EE  00A4               	movwf	___flmul@b
  3940  14EF  0851               	movf	fround@prec,w
  3941  14F0  00C2               	movwf	??_fround
  3942  14F1  3001               	movlw	1
  3943  14F2                     u4365:	
  3944  14F2  1003               	clrc
  3945  14F3  0DC2               	rlf	??_fround,f
  3946  14F4  3EFF               	addlw	-1
  3947  14F5  1D03               	skipz
  3948  14F6  2CF2               	goto	u4365
  3949  14F7  1003               	clrc
  3950  14F8  0D42               	rlf	??_fround,w
  3951  14F9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3952  14FA  0084               	movwf	4
  3953  14FB  160A  158A  200A  160A  118A  	fcall	stringdir
  3954  1500  00C3               	movwf	??_fround+1
  3955  1501  160A  158A  200A  160A  118A  	fcall	stringdir
  3956  1506  00C4               	movwf	??_fround+2
  3957  1507  160A  158A  200A  160A  118A  	fcall	stringdir
  3958  150C  00C5               	movwf	??_fround+3
  3959  150D  160A  158A  200A  160A  118A  	fcall	stringdir
  3960  1512  00C6               	movwf	??_fround+4
  3961  1513  0846               	movf	??_fround+4,w
  3962  1514  00AB               	movwf	___flmul@a+3
  3963  1515  0845               	movf	??_fround+3,w
  3964  1516  00AA               	movwf	___flmul@a+2
  3965  1517  0844               	movf	??_fround+2,w
  3966  1518  00A9               	movwf	___flmul@a+1
  3967  1519  0843               	movf	??_fround+1,w
  3968  151A  00A8               	movwf	___flmul@a
  3969  151B  120A  158A  249F  160A  118A  	fcall	___flmul
  3970  1520  1283               	bcf	3,5	;RP0=0, select bank0
  3971  1521  1303               	bcf	3,6	;RP1=0, select bank0
  3972  1522  0827               	movf	?___flmul+3,w
  3973  1523  00C1               	movwf	?_fround+3
  3974  1524  0826               	movf	?___flmul+2,w
  3975  1525  00C0               	movwf	?_fround+2
  3976  1526  0825               	movf	?___flmul+1,w
  3977  1527  00BF               	movwf	?_fround+1
  3978  1528  0824               	movf	?___flmul,w
  3979  1529  00BE               	movwf	?_fround
  3980  152A                     l203:	
  3981  152A  0008               	return
  3982  152B                     __end_of_fround:	
  3983                           
  3984                           	psect	text8
  3985  1BBC                     __ptext8:	
  3986 ;; *************** function ___lwmod *****************
  3987 ;; Defined at:
  3988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  divisor         2    0[COMMON] unsigned int 
  3991 ;;  dividend        2    2[COMMON] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  counter         1    5[COMMON] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    0[COMMON] unsigned int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         4       0       0       0       0
  4004 ;;      Locals:         1       0       0       0       0
  4005 ;;      Temps:          1       0       0       0       0
  4006 ;;      Totals:         6       0       0       0       0
  4007 ;;Total ram usage:        6 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_fround
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function ___lwmod
  4018  1BBC                     ___lwmod:	
  4019  1BBC                     l2492:	
  4020                           ;incstack = 0
  4021                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4022                           
  4023  1BBC  0870               	movf	___lwmod@divisor,w
  4024  1BBD  0471               	iorwf	___lwmod@divisor+1,w
  4025  1BBE  1903               	btfsc	3,2
  4026  1BBF  2BC1               	goto	u3401
  4027  1BC0  2BC2               	goto	u3400
  4028  1BC1                     u3401:	
  4029  1BC1  2BF1               	goto	l2510
  4030  1BC2                     u3400:	
  4031  1BC2                     l2494:	
  4032  1BC2  01F5               	clrf	___lwmod@counter
  4033  1BC3  0AF5               	incf	___lwmod@counter,f
  4034  1BC4  2BD0               	goto	l2500
  4035  1BC5                     l2496:	
  4036  1BC5  3001               	movlw	1
  4037  1BC6                     u3415:	
  4038  1BC6  1003               	clrc
  4039  1BC7  0DF0               	rlf	___lwmod@divisor,f
  4040  1BC8  0DF1               	rlf	___lwmod@divisor+1,f
  4041  1BC9  3EFF               	addlw	-1
  4042  1BCA  1D03               	skipz
  4043  1BCB  2BC6               	goto	u3415
  4044  1BCC                     l2498:	
  4045  1BCC  3001               	movlw	1
  4046  1BCD  00F4               	movwf	??___lwmod
  4047  1BCE  0874               	movf	??___lwmod,w
  4048  1BCF  07F5               	addwf	___lwmod@counter,f
  4049  1BD0                     l2500:	
  4050  1BD0  1FF1               	btfss	___lwmod@divisor+1,7
  4051  1BD1  2BD3               	goto	u3421
  4052  1BD2  2BD4               	goto	u3420
  4053  1BD3                     u3421:	
  4054  1BD3  2BC5               	goto	l2496
  4055  1BD4                     u3420:	
  4056  1BD4                     l2502:	
  4057  1BD4  0871               	movf	___lwmod@divisor+1,w
  4058  1BD5  0273               	subwf	___lwmod@dividend+1,w
  4059  1BD6  1D03               	skipz
  4060  1BD7  2BDA               	goto	u3435
  4061  1BD8  0870               	movf	___lwmod@divisor,w
  4062  1BD9  0272               	subwf	___lwmod@dividend,w
  4063  1BDA                     u3435:	
  4064  1BDA  1C03               	skipc
  4065  1BDB  2BDD               	goto	u3431
  4066  1BDC  2BDE               	goto	u3430
  4067  1BDD                     u3431:	
  4068  1BDD  2BE4               	goto	l2506
  4069  1BDE                     u3430:	
  4070  1BDE                     l2504:	
  4071  1BDE  0870               	movf	___lwmod@divisor,w
  4072  1BDF  02F2               	subwf	___lwmod@dividend,f
  4073  1BE0  0871               	movf	___lwmod@divisor+1,w
  4074  1BE1  1C03               	skipc
  4075  1BE2  03F3               	decf	___lwmod@dividend+1,f
  4076  1BE3  02F3               	subwf	___lwmod@dividend+1,f
  4077  1BE4                     l2506:	
  4078  1BE4  3001               	movlw	1
  4079  1BE5                     u3445:	
  4080  1BE5  1003               	clrc
  4081  1BE6  0CF1               	rrf	___lwmod@divisor+1,f
  4082  1BE7  0CF0               	rrf	___lwmod@divisor,f
  4083  1BE8  3EFF               	addlw	-1
  4084  1BE9  1D03               	skipz
  4085  1BEA  2BE5               	goto	u3445
  4086  1BEB                     l2508:	
  4087  1BEB  3001               	movlw	1
  4088  1BEC  02F5               	subwf	___lwmod@counter,f
  4089  1BED  1D03               	btfss	3,2
  4090  1BEE  2BF0               	goto	u3451
  4091  1BEF  2BF1               	goto	u3450
  4092  1BF0                     u3451:	
  4093  1BF0  2BD4               	goto	l2502
  4094  1BF1                     u3450:	
  4095  1BF1                     l2510:	
  4096  1BF1  0873               	movf	___lwmod@dividend+1,w
  4097  1BF2  00F1               	movwf	?___lwmod+1
  4098  1BF3  0872               	movf	___lwmod@dividend,w
  4099  1BF4  00F0               	movwf	?___lwmod
  4100  1BF5                     l631:	
  4101  1BF5  0008               	return
  4102  1BF6                     __end_of___lwmod:	
  4103                           
  4104                           	psect	text9
  4105  1C32                     __ptext9:	
  4106 ;; *************** function ___lwdiv *****************
  4107 ;; Defined at:
  4108 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  divisor         2    6[COMMON] unsigned int 
  4111 ;;  dividend        2    8[COMMON] unsigned int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  quotient        2   11[COMMON] unsigned int 
  4114 ;;  counter         1   13[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    6[COMMON] unsigned int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         4       0       0       0       0
  4125 ;;      Locals:         3       0       0       0       0
  4126 ;;      Temps:          1       0       0       0       0
  4127 ;;      Totals:         8       0       0       0       0
  4128 ;;Total ram usage:        8 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_fround
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function ___lwdiv
  4139  1C32                     ___lwdiv:	
  4140  1C32                     l2466:	
  4141                           ;incstack = 0
  4142                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4143                           
  4144  1C32  01FB               	clrf	___lwdiv@quotient
  4145  1C33  01FC               	clrf	___lwdiv@quotient+1
  4146  1C34                     l2468:	
  4147  1C34  0876               	movf	___lwdiv@divisor,w
  4148  1C35  0477               	iorwf	___lwdiv@divisor+1,w
  4149  1C36  1903               	btfsc	3,2
  4150  1C37  2C39               	goto	u3331
  4151  1C38  2C3A               	goto	u3330
  4152  1C39                     u3331:	
  4153  1C39  2C71               	goto	l2488
  4154  1C3A                     u3330:	
  4155  1C3A                     l2470:	
  4156  1C3A  01FD               	clrf	___lwdiv@counter
  4157  1C3B  0AFD               	incf	___lwdiv@counter,f
  4158  1C3C  2C48               	goto	l2476
  4159  1C3D                     l2472:	
  4160  1C3D  3001               	movlw	1
  4161  1C3E                     u3345:	
  4162  1C3E  1003               	clrc
  4163  1C3F  0DF6               	rlf	___lwdiv@divisor,f
  4164  1C40  0DF7               	rlf	___lwdiv@divisor+1,f
  4165  1C41  3EFF               	addlw	-1
  4166  1C42  1D03               	skipz
  4167  1C43  2C3E               	goto	u3345
  4168  1C44                     l2474:	
  4169  1C44  3001               	movlw	1
  4170  1C45  00FA               	movwf	??___lwdiv
  4171  1C46  087A               	movf	??___lwdiv,w
  4172  1C47  07FD               	addwf	___lwdiv@counter,f
  4173  1C48                     l2476:	
  4174  1C48  1FF7               	btfss	___lwdiv@divisor+1,7
  4175  1C49  2C4B               	goto	u3351
  4176  1C4A  2C4C               	goto	u3350
  4177  1C4B                     u3351:	
  4178  1C4B  2C3D               	goto	l2472
  4179  1C4C                     u3350:	
  4180  1C4C                     l2478:	
  4181  1C4C  3001               	movlw	1
  4182  1C4D                     u3365:	
  4183  1C4D  1003               	clrc
  4184  1C4E  0DFB               	rlf	___lwdiv@quotient,f
  4185  1C4F  0DFC               	rlf	___lwdiv@quotient+1,f
  4186  1C50  3EFF               	addlw	-1
  4187  1C51  1D03               	skipz
  4188  1C52  2C4D               	goto	u3365
  4189  1C53  0877               	movf	___lwdiv@divisor+1,w
  4190  1C54  0279               	subwf	___lwdiv@dividend+1,w
  4191  1C55  1D03               	skipz
  4192  1C56  2C59               	goto	u3375
  4193  1C57  0876               	movf	___lwdiv@divisor,w
  4194  1C58  0278               	subwf	___lwdiv@dividend,w
  4195  1C59                     u3375:	
  4196  1C59  1C03               	skipc
  4197  1C5A  2C5C               	goto	u3371
  4198  1C5B  2C5D               	goto	u3370
  4199  1C5C                     u3371:	
  4200  1C5C  2C64               	goto	l2484
  4201  1C5D                     u3370:	
  4202  1C5D                     l2480:	
  4203  1C5D  0876               	movf	___lwdiv@divisor,w
  4204  1C5E  02F8               	subwf	___lwdiv@dividend,f
  4205  1C5F  0877               	movf	___lwdiv@divisor+1,w
  4206  1C60  1C03               	skipc
  4207  1C61  03F9               	decf	___lwdiv@dividend+1,f
  4208  1C62  02F9               	subwf	___lwdiv@dividend+1,f
  4209  1C63                     l2482:	
  4210  1C63  147B               	bsf	___lwdiv@quotient,0
  4211  1C64                     l2484:	
  4212  1C64  3001               	movlw	1
  4213  1C65                     u3385:	
  4214  1C65  1003               	clrc
  4215  1C66  0CF7               	rrf	___lwdiv@divisor+1,f
  4216  1C67  0CF6               	rrf	___lwdiv@divisor,f
  4217  1C68  3EFF               	addlw	-1
  4218  1C69  1D03               	skipz
  4219  1C6A  2C65               	goto	u3385
  4220  1C6B                     l2486:	
  4221  1C6B  3001               	movlw	1
  4222  1C6C  02FD               	subwf	___lwdiv@counter,f
  4223  1C6D  1D03               	btfss	3,2
  4224  1C6E  2C70               	goto	u3391
  4225  1C6F  2C71               	goto	u3390
  4226  1C70                     u3391:	
  4227  1C70  2C4C               	goto	l2478
  4228  1C71                     u3390:	
  4229  1C71                     l2488:	
  4230  1C71  087C               	movf	___lwdiv@quotient+1,w
  4231  1C72  00F7               	movwf	?___lwdiv+1
  4232  1C73  087B               	movf	___lwdiv@quotient,w
  4233  1C74  00F6               	movwf	?___lwdiv
  4234  1C75                     l621:	
  4235  1C75  0008               	return
  4236  1C76                     __end_of___lwdiv:	
  4237                           
  4238                           	psect	text10
  4239  0C9F                     __ptext10:	
  4240 ;; *************** function ___flmul *****************
  4241 ;; Defined at:
  4242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  b               4    4[BANK0 ] unsigned int 
  4245 ;;  a               4    8[BANK0 ] unsigned int 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  prod            4   24[BANK0 ] struct .
  4248 ;;  grs             4   18[BANK0 ] unsigned long 
  4249 ;;  temp            2   28[BANK0 ] struct .
  4250 ;;  bexp            1   23[BANK0 ] unsigned char 
  4251 ;;  aexp            1   22[BANK0 ] unsigned char 
  4252 ;;  sign            1   17[BANK0 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  4    4[BANK0 ] unsigned char 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       8       0       0       0
  4263 ;;      Locals:         0      13       0       0       0
  4264 ;;      Temps:          0       5       0       0       0
  4265 ;;      Totals:         0      26       0       0       0
  4266 ;;Total ram usage:       26 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    1
  4269 ;; This function calls:
  4270 ;;		__Umul8_16
  4271 ;; This function is called by:
  4272 ;;		_voltaje1
  4273 ;;		_fround
  4274 ;;		_scale
  4275 ;;		_sprintf
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function ___flmul
  4281  0C9F                     ___flmul:	
  4282  0C9F                     l2708:	
  4283                           ;incstack = 0
  4284                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4285                           
  4286  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4288  0CA1  0827               	movf	___flmul@b+3,w
  4289  0CA2  3980               	andlw	128
  4290  0CA3  00AC               	movwf	??___flmul
  4291  0CA4  082C               	movf	??___flmul,w
  4292  0CA5  00B1               	movwf	___flmul@sign
  4293  0CA6                     l2710:	
  4294  0CA6  0827               	movf	___flmul@b+3,w
  4295  0CA7  00AC               	movwf	??___flmul
  4296  0CA8  072C               	addwf	??___flmul,w
  4297  0CA9  00AD               	movwf	??___flmul+1
  4298  0CAA  082D               	movf	??___flmul+1,w
  4299  0CAB  00B7               	movwf	___flmul@bexp
  4300  0CAC                     l2712:	
  4301  0CAC  1FA6               	btfss	___flmul@b+2,7
  4302  0CAD  2CAF               	goto	u3921
  4303  0CAE  2CB0               	goto	u3920
  4304  0CAF                     u3921:	
  4305  0CAF  2CB1               	goto	l2716
  4306  0CB0                     u3920:	
  4307  0CB0                     l2714:	
  4308  0CB0  1437               	bsf	___flmul@bexp,0
  4309  0CB1                     l2716:	
  4310  0CB1  0837               	movf	___flmul@bexp,w
  4311  0CB2  1903               	btfsc	3,2
  4312  0CB3  2CB5               	goto	u3931
  4313  0CB4  2CB6               	goto	u3930
  4314  0CB5                     u3931:	
  4315  0CB5  2CC5               	goto	l2724
  4316  0CB6                     u3930:	
  4317  0CB6                     l2718:	
  4318  0CB6  0A37               	incf	___flmul@bexp,w
  4319  0CB7  1D03               	btfss	3,2
  4320  0CB8  2CBA               	goto	u3941
  4321  0CB9  2CBB               	goto	u3940
  4322  0CBA                     u3941:	
  4323  0CBA  2CC3               	goto	l2722
  4324  0CBB                     u3940:	
  4325  0CBB                     l2720:	
  4326  0CBB  3000               	movlw	0
  4327  0CBC  00A7               	movwf	___flmul@b+3
  4328  0CBD  3000               	movlw	0
  4329  0CBE  00A6               	movwf	___flmul@b+2
  4330  0CBF  3000               	movlw	0
  4331  0CC0  00A5               	movwf	___flmul@b+1
  4332  0CC1  3000               	movlw	0
  4333  0CC2  00A4               	movwf	___flmul@b
  4334  0CC3                     l2722:	
  4335  0CC3  17A6               	bsf	___flmul@b+2,7
  4336  0CC4  2CCD               	goto	l2726
  4337  0CC5                     l2724:	
  4338  0CC5  3000               	movlw	0
  4339  0CC6  00A7               	movwf	___flmul@b+3
  4340  0CC7  3000               	movlw	0
  4341  0CC8  00A6               	movwf	___flmul@b+2
  4342  0CC9  3000               	movlw	0
  4343  0CCA  00A5               	movwf	___flmul@b+1
  4344  0CCB  3000               	movlw	0
  4345  0CCC  00A4               	movwf	___flmul@b
  4346  0CCD                     l2726:	
  4347  0CCD  082B               	movf	___flmul@a+3,w
  4348  0CCE  3980               	andlw	128
  4349  0CCF  00AC               	movwf	??___flmul
  4350  0CD0  082C               	movf	??___flmul,w
  4351  0CD1  06B1               	xorwf	___flmul@sign,f
  4352  0CD2                     l2728:	
  4353  0CD2  082B               	movf	___flmul@a+3,w
  4354  0CD3  00AC               	movwf	??___flmul
  4355  0CD4  072C               	addwf	??___flmul,w
  4356  0CD5  00AD               	movwf	??___flmul+1
  4357  0CD6  082D               	movf	??___flmul+1,w
  4358  0CD7  00B6               	movwf	___flmul@aexp
  4359  0CD8                     l2730:	
  4360  0CD8  1FAA               	btfss	___flmul@a+2,7
  4361  0CD9  2CDB               	goto	u3951
  4362  0CDA  2CDC               	goto	u3950
  4363  0CDB                     u3951:	
  4364  0CDB  2CDD               	goto	l2734
  4365  0CDC                     u3950:	
  4366  0CDC                     l2732:	
  4367  0CDC  1436               	bsf	___flmul@aexp,0
  4368  0CDD                     l2734:	
  4369  0CDD  0836               	movf	___flmul@aexp,w
  4370  0CDE  1903               	btfsc	3,2
  4371  0CDF  2CE1               	goto	u3961
  4372  0CE0  2CE2               	goto	u3960
  4373  0CE1                     u3961:	
  4374  0CE1  2CF1               	goto	l2742
  4375  0CE2                     u3960:	
  4376  0CE2                     l2736:	
  4377  0CE2  0A36               	incf	___flmul@aexp,w
  4378  0CE3  1D03               	btfss	3,2
  4379  0CE4  2CE6               	goto	u3971
  4380  0CE5  2CE7               	goto	u3970
  4381  0CE6                     u3971:	
  4382  0CE6  2CEF               	goto	l2740
  4383  0CE7                     u3970:	
  4384  0CE7                     l2738:	
  4385  0CE7  3000               	movlw	0
  4386  0CE8  00AB               	movwf	___flmul@a+3
  4387  0CE9  3000               	movlw	0
  4388  0CEA  00AA               	movwf	___flmul@a+2
  4389  0CEB  3000               	movlw	0
  4390  0CEC  00A9               	movwf	___flmul@a+1
  4391  0CED  3000               	movlw	0
  4392  0CEE  00A8               	movwf	___flmul@a
  4393  0CEF                     l2740:	
  4394  0CEF  17AA               	bsf	___flmul@a+2,7
  4395  0CF0  2CF9               	goto	l2744
  4396  0CF1                     l2742:	
  4397  0CF1  3000               	movlw	0
  4398  0CF2  00AB               	movwf	___flmul@a+3
  4399  0CF3  3000               	movlw	0
  4400  0CF4  00AA               	movwf	___flmul@a+2
  4401  0CF5  3000               	movlw	0
  4402  0CF6  00A9               	movwf	___flmul@a+1
  4403  0CF7  3000               	movlw	0
  4404  0CF8  00A8               	movwf	___flmul@a
  4405  0CF9                     l2744:	
  4406  0CF9  0836               	movf	___flmul@aexp,w
  4407  0CFA  1903               	btfsc	3,2
  4408  0CFB  2CFD               	goto	u3981
  4409  0CFC  2CFE               	goto	u3980
  4410  0CFD                     u3981:	
  4411  0CFD  2D03               	goto	l2748
  4412  0CFE                     u3980:	
  4413  0CFE                     l2746:	
  4414  0CFE  0837               	movf	___flmul@bexp,w
  4415  0CFF  1D03               	btfss	3,2
  4416  0D00  2D02               	goto	u3991
  4417  0D01  2D03               	goto	u3990
  4418  0D02                     u3991:	
  4419  0D02  2D0C               	goto	l2752
  4420  0D03                     u3990:	
  4421  0D03                     l2748:	
  4422  0D03  3000               	movlw	0
  4423  0D04  00A7               	movwf	?___flmul+3
  4424  0D05  3000               	movlw	0
  4425  0D06  00A6               	movwf	?___flmul+2
  4426  0D07  3000               	movlw	0
  4427  0D08  00A5               	movwf	?___flmul+1
  4428  0D09  3000               	movlw	0
  4429  0D0A  00A4               	movwf	?___flmul
  4430  0D0B  2FFF               	goto	l738
  4431  0D0C                     l2752:	
  4432  0D0C  0824               	movf	___flmul@b,w
  4433  0D0D  00AC               	movwf	??___flmul
  4434  0D0E  082C               	movf	??___flmul,w
  4435  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4436  0D10  082A               	movf	___flmul@a+2,w
  4437  0D11  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4438  0D16  0871               	movf	?__Umul8_16+1,w
  4439  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0D19  00BD               	movwf	___flmul@temp+1
  4442  0D1A  0870               	movf	?__Umul8_16,w
  4443  0D1B  00BC               	movwf	___flmul@temp
  4444  0D1C                     l2754:	
  4445  0D1C  083C               	movf	___flmul@temp,w
  4446  0D1D  00AC               	movwf	??___flmul
  4447  0D1E  01AD               	clrf	??___flmul+1
  4448  0D1F  01AE               	clrf	??___flmul+2
  4449  0D20  01AF               	clrf	??___flmul+3
  4450  0D21  082F               	movf	??___flmul+3,w
  4451  0D22  00B5               	movwf	___flmul@grs+3
  4452  0D23  082E               	movf	??___flmul+2,w
  4453  0D24  00B4               	movwf	___flmul@grs+2
  4454  0D25  082D               	movf	??___flmul+1,w
  4455  0D26  00B3               	movwf	___flmul@grs+1
  4456  0D27  082C               	movf	??___flmul,w
  4457  0D28  00B2               	movwf	___flmul@grs
  4458  0D29                     l2756:	
  4459  0D29  083D               	movf	___flmul@temp+1,w
  4460  0D2A  00AC               	movwf	??___flmul
  4461  0D2B  01AD               	clrf	??___flmul+1
  4462  0D2C  01AE               	clrf	??___flmul+2
  4463  0D2D  01AF               	clrf	??___flmul+3
  4464  0D2E  082F               	movf	??___flmul+3,w
  4465  0D2F  00BB               	movwf	___flmul@prod+3
  4466  0D30  082E               	movf	??___flmul+2,w
  4467  0D31  00BA               	movwf	___flmul@prod+2
  4468  0D32  082D               	movf	??___flmul+1,w
  4469  0D33  00B9               	movwf	___flmul@prod+1
  4470  0D34  082C               	movf	??___flmul,w
  4471  0D35  00B8               	movwf	___flmul@prod
  4472  0D36  0825               	movf	___flmul@b+1,w
  4473  0D37  00AC               	movwf	??___flmul
  4474  0D38  082C               	movf	??___flmul,w
  4475  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4476  0D3A  0829               	movf	___flmul@a+1,w
  4477  0D3B  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4478  0D40  0871               	movf	?__Umul8_16+1,w
  4479  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0D43  00BD               	movwf	___flmul@temp+1
  4482  0D44  0870               	movf	?__Umul8_16,w
  4483  0D45  00BC               	movwf	___flmul@temp
  4484  0D46                     l2758:	
  4485  0D46  083C               	movf	___flmul@temp,w
  4486  0D47  00AC               	movwf	??___flmul
  4487  0D48  01AD               	clrf	??___flmul+1
  4488  0D49  01AE               	clrf	??___flmul+2
  4489  0D4A  01AF               	clrf	??___flmul+3
  4490  0D4B  082C               	movf	??___flmul,w
  4491  0D4C  07B2               	addwf	___flmul@grs,f
  4492  0D4D  082D               	movf	??___flmul+1,w
  4493  0D4E  1103               	clrz
  4494  0D4F  1803               	skipnc
  4495  0D50  3E01               	addlw	1
  4496  0D51  1903               	skipnz
  4497  0D52  2D54               	goto	u4001
  4498  0D53  07B3               	addwf	___flmul@grs+1,f
  4499  0D54                     u4001:	
  4500  0D54  082E               	movf	??___flmul+2,w
  4501  0D55  1103               	clrz
  4502  0D56  1803               	skipnc
  4503  0D57  3E01               	addlw	1
  4504  0D58  1903               	skipnz
  4505  0D59  2D5B               	goto	u4002
  4506  0D5A  07B4               	addwf	___flmul@grs+2,f
  4507  0D5B                     u4002:	
  4508  0D5B  082F               	movf	??___flmul+3,w
  4509  0D5C  1103               	clrz
  4510  0D5D  1803               	skipnc
  4511  0D5E  3E01               	addlw	1
  4512  0D5F  1903               	skipnz
  4513  0D60  2D62               	goto	u4003
  4514  0D61  07B5               	addwf	___flmul@grs+3,f
  4515  0D62                     u4003:	
  4516  0D62                     l2760:	
  4517  0D62  083D               	movf	___flmul@temp+1,w
  4518  0D63  00AC               	movwf	??___flmul
  4519  0D64  01AD               	clrf	??___flmul+1
  4520  0D65  01AE               	clrf	??___flmul+2
  4521  0D66  01AF               	clrf	??___flmul+3
  4522  0D67  082C               	movf	??___flmul,w
  4523  0D68  07B8               	addwf	___flmul@prod,f
  4524  0D69  082D               	movf	??___flmul+1,w
  4525  0D6A  1103               	clrz
  4526  0D6B  1803               	skipnc
  4527  0D6C  3E01               	addlw	1
  4528  0D6D  1903               	skipnz
  4529  0D6E  2D70               	goto	u4011
  4530  0D6F  07B9               	addwf	___flmul@prod+1,f
  4531  0D70                     u4011:	
  4532  0D70  082E               	movf	??___flmul+2,w
  4533  0D71  1103               	clrz
  4534  0D72  1803               	skipnc
  4535  0D73  3E01               	addlw	1
  4536  0D74  1903               	skipnz
  4537  0D75  2D77               	goto	u4012
  4538  0D76  07BA               	addwf	___flmul@prod+2,f
  4539  0D77                     u4012:	
  4540  0D77  082F               	movf	??___flmul+3,w
  4541  0D78  1103               	clrz
  4542  0D79  1803               	skipnc
  4543  0D7A  3E01               	addlw	1
  4544  0D7B  1903               	skipnz
  4545  0D7C  2D7E               	goto	u4013
  4546  0D7D  07BB               	addwf	___flmul@prod+3,f
  4547  0D7E                     u4013:	
  4548  0D7E  0826               	movf	___flmul@b+2,w
  4549  0D7F  00AC               	movwf	??___flmul
  4550  0D80  082C               	movf	??___flmul,w
  4551  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4552  0D82  0828               	movf	___flmul@a,w
  4553  0D83  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4554  0D88  0871               	movf	?__Umul8_16+1,w
  4555  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0D8B  00BD               	movwf	___flmul@temp+1
  4558  0D8C  0870               	movf	?__Umul8_16,w
  4559  0D8D  00BC               	movwf	___flmul@temp
  4560  0D8E                     l2762:	
  4561  0D8E  083C               	movf	___flmul@temp,w
  4562  0D8F  00AC               	movwf	??___flmul
  4563  0D90  01AD               	clrf	??___flmul+1
  4564  0D91  01AE               	clrf	??___flmul+2
  4565  0D92  01AF               	clrf	??___flmul+3
  4566  0D93  082C               	movf	??___flmul,w
  4567  0D94  07B2               	addwf	___flmul@grs,f
  4568  0D95  082D               	movf	??___flmul+1,w
  4569  0D96  1103               	clrz
  4570  0D97  1803               	skipnc
  4571  0D98  3E01               	addlw	1
  4572  0D99  1903               	skipnz
  4573  0D9A  2D9C               	goto	u4021
  4574  0D9B  07B3               	addwf	___flmul@grs+1,f
  4575  0D9C                     u4021:	
  4576  0D9C  082E               	movf	??___flmul+2,w
  4577  0D9D  1103               	clrz
  4578  0D9E  1803               	skipnc
  4579  0D9F  3E01               	addlw	1
  4580  0DA0  1903               	skipnz
  4581  0DA1  2DA3               	goto	u4022
  4582  0DA2  07B4               	addwf	___flmul@grs+2,f
  4583  0DA3                     u4022:	
  4584  0DA3  082F               	movf	??___flmul+3,w
  4585  0DA4  1103               	clrz
  4586  0DA5  1803               	skipnc
  4587  0DA6  3E01               	addlw	1
  4588  0DA7  1903               	skipnz
  4589  0DA8  2DAA               	goto	u4023
  4590  0DA9  07B5               	addwf	___flmul@grs+3,f
  4591  0DAA                     u4023:	
  4592  0DAA                     l2764:	
  4593  0DAA  083D               	movf	___flmul@temp+1,w
  4594  0DAB  00AC               	movwf	??___flmul
  4595  0DAC  01AD               	clrf	??___flmul+1
  4596  0DAD  01AE               	clrf	??___flmul+2
  4597  0DAE  01AF               	clrf	??___flmul+3
  4598  0DAF  082C               	movf	??___flmul,w
  4599  0DB0  07B8               	addwf	___flmul@prod,f
  4600  0DB1  082D               	movf	??___flmul+1,w
  4601  0DB2  1103               	clrz
  4602  0DB3  1803               	skipnc
  4603  0DB4  3E01               	addlw	1
  4604  0DB5  1903               	skipnz
  4605  0DB6  2DB8               	goto	u4031
  4606  0DB7  07B9               	addwf	___flmul@prod+1,f
  4607  0DB8                     u4031:	
  4608  0DB8  082E               	movf	??___flmul+2,w
  4609  0DB9  1103               	clrz
  4610  0DBA  1803               	skipnc
  4611  0DBB  3E01               	addlw	1
  4612  0DBC  1903               	skipnz
  4613  0DBD  2DBF               	goto	u4032
  4614  0DBE  07BA               	addwf	___flmul@prod+2,f
  4615  0DBF                     u4032:	
  4616  0DBF  082F               	movf	??___flmul+3,w
  4617  0DC0  1103               	clrz
  4618  0DC1  1803               	skipnc
  4619  0DC2  3E01               	addlw	1
  4620  0DC3  1903               	skipnz
  4621  0DC4  2DC6               	goto	u4033
  4622  0DC5  07BB               	addwf	___flmul@prod+3,f
  4623  0DC6                     u4033:	
  4624  0DC6                     l2766:	
  4625  0DC6  3008               	movlw	8
  4626  0DC7  00AC               	movwf	??___flmul
  4627  0DC8                     u4045:	
  4628  0DC8  1003               	clrc
  4629  0DC9  0DB2               	rlf	___flmul@grs,f
  4630  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4631  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4632  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4633  0DCD  0BAC               	decfsz	??___flmul,f
  4634  0DCE  2DC8               	goto	u4045
  4635  0DCF                     l2768:	
  4636  0DCF  0825               	movf	___flmul@b+1,w
  4637  0DD0  00AC               	movwf	??___flmul
  4638  0DD1  082C               	movf	??___flmul,w
  4639  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4640  0DD3  0828               	movf	___flmul@a,w
  4641  0DD4  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4642  0DD9  0871               	movf	?__Umul8_16+1,w
  4643  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0DDC  00BD               	movwf	___flmul@temp+1
  4646  0DDD  0870               	movf	?__Umul8_16,w
  4647  0DDE  00BC               	movwf	___flmul@temp
  4648  0DDF                     l2770:	
  4649  0DDF  083C               	movf	___flmul@temp,w
  4650  0DE0  00AC               	movwf	??___flmul
  4651  0DE1  083D               	movf	___flmul@temp+1,w
  4652  0DE2  00AD               	movwf	??___flmul+1
  4653  0DE3  01AE               	clrf	??___flmul+2
  4654  0DE4  01AF               	clrf	??___flmul+3
  4655  0DE5  082C               	movf	??___flmul,w
  4656  0DE6  07B2               	addwf	___flmul@grs,f
  4657  0DE7  082D               	movf	??___flmul+1,w
  4658  0DE8  1103               	clrz
  4659  0DE9  1803               	skipnc
  4660  0DEA  3E01               	addlw	1
  4661  0DEB  1903               	skipnz
  4662  0DEC  2DEE               	goto	u4051
  4663  0DED  07B3               	addwf	___flmul@grs+1,f
  4664  0DEE                     u4051:	
  4665  0DEE  082E               	movf	??___flmul+2,w
  4666  0DEF  1103               	clrz
  4667  0DF0  1803               	skipnc
  4668  0DF1  3E01               	addlw	1
  4669  0DF2  1903               	skipnz
  4670  0DF3  2DF5               	goto	u4052
  4671  0DF4  07B4               	addwf	___flmul@grs+2,f
  4672  0DF5                     u4052:	
  4673  0DF5  082F               	movf	??___flmul+3,w
  4674  0DF6  1103               	clrz
  4675  0DF7  1803               	skipnc
  4676  0DF8  3E01               	addlw	1
  4677  0DF9  1903               	skipnz
  4678  0DFA  2DFC               	goto	u4053
  4679  0DFB  07B5               	addwf	___flmul@grs+3,f
  4680  0DFC                     u4053:	
  4681  0DFC                     l2772:	
  4682  0DFC  0824               	movf	___flmul@b,w
  4683  0DFD  00AC               	movwf	??___flmul
  4684  0DFE  082C               	movf	??___flmul,w
  4685  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4686  0E00  0829               	movf	___flmul@a+1,w
  4687  0E01  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4688  0E06  0871               	movf	?__Umul8_16+1,w
  4689  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0E09  00BD               	movwf	___flmul@temp+1
  4692  0E0A  0870               	movf	?__Umul8_16,w
  4693  0E0B  00BC               	movwf	___flmul@temp
  4694  0E0C                     l2774:	
  4695  0E0C  083C               	movf	___flmul@temp,w
  4696  0E0D  00AC               	movwf	??___flmul
  4697  0E0E  083D               	movf	___flmul@temp+1,w
  4698  0E0F  00AD               	movwf	??___flmul+1
  4699  0E10  01AE               	clrf	??___flmul+2
  4700  0E11  01AF               	clrf	??___flmul+3
  4701  0E12  082C               	movf	??___flmul,w
  4702  0E13  07B2               	addwf	___flmul@grs,f
  4703  0E14  082D               	movf	??___flmul+1,w
  4704  0E15  1103               	clrz
  4705  0E16  1803               	skipnc
  4706  0E17  3E01               	addlw	1
  4707  0E18  1903               	skipnz
  4708  0E19  2E1B               	goto	u4061
  4709  0E1A  07B3               	addwf	___flmul@grs+1,f
  4710  0E1B                     u4061:	
  4711  0E1B  082E               	movf	??___flmul+2,w
  4712  0E1C  1103               	clrz
  4713  0E1D  1803               	skipnc
  4714  0E1E  3E01               	addlw	1
  4715  0E1F  1903               	skipnz
  4716  0E20  2E22               	goto	u4062
  4717  0E21  07B4               	addwf	___flmul@grs+2,f
  4718  0E22                     u4062:	
  4719  0E22  082F               	movf	??___flmul+3,w
  4720  0E23  1103               	clrz
  4721  0E24  1803               	skipnc
  4722  0E25  3E01               	addlw	1
  4723  0E26  1903               	skipnz
  4724  0E27  2E29               	goto	u4063
  4725  0E28  07B5               	addwf	___flmul@grs+3,f
  4726  0E29                     u4063:	
  4727  0E29                     l2776:	
  4728  0E29  3008               	movlw	8
  4729  0E2A  00AC               	movwf	??___flmul
  4730  0E2B                     u4075:	
  4731  0E2B  1003               	clrc
  4732  0E2C  0DB2               	rlf	___flmul@grs,f
  4733  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4734  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4735  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4736  0E30  0BAC               	decfsz	??___flmul,f
  4737  0E31  2E2B               	goto	u4075
  4738  0E32  0824               	movf	___flmul@b,w
  4739  0E33  00AC               	movwf	??___flmul
  4740  0E34  082C               	movf	??___flmul,w
  4741  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4742  0E36  0828               	movf	___flmul@a,w
  4743  0E37  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4744  0E3C  0871               	movf	?__Umul8_16+1,w
  4745  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0E3F  00BD               	movwf	___flmul@temp+1
  4748  0E40  0870               	movf	?__Umul8_16,w
  4749  0E41  00BC               	movwf	___flmul@temp
  4750  0E42                     l2778:	
  4751  0E42  083C               	movf	___flmul@temp,w
  4752  0E43  00AC               	movwf	??___flmul
  4753  0E44  083D               	movf	___flmul@temp+1,w
  4754  0E45  00AD               	movwf	??___flmul+1
  4755  0E46  01AE               	clrf	??___flmul+2
  4756  0E47  01AF               	clrf	??___flmul+3
  4757  0E48  082C               	movf	??___flmul,w
  4758  0E49  07B2               	addwf	___flmul@grs,f
  4759  0E4A  082D               	movf	??___flmul+1,w
  4760  0E4B  1103               	clrz
  4761  0E4C  1803               	skipnc
  4762  0E4D  3E01               	addlw	1
  4763  0E4E  1903               	skipnz
  4764  0E4F  2E51               	goto	u4081
  4765  0E50  07B3               	addwf	___flmul@grs+1,f
  4766  0E51                     u4081:	
  4767  0E51  082E               	movf	??___flmul+2,w
  4768  0E52  1103               	clrz
  4769  0E53  1803               	skipnc
  4770  0E54  3E01               	addlw	1
  4771  0E55  1903               	skipnz
  4772  0E56  2E58               	goto	u4082
  4773  0E57  07B4               	addwf	___flmul@grs+2,f
  4774  0E58                     u4082:	
  4775  0E58  082F               	movf	??___flmul+3,w
  4776  0E59  1103               	clrz
  4777  0E5A  1803               	skipnc
  4778  0E5B  3E01               	addlw	1
  4779  0E5C  1903               	skipnz
  4780  0E5D  2E5F               	goto	u4083
  4781  0E5E  07B5               	addwf	___flmul@grs+3,f
  4782  0E5F                     u4083:	
  4783  0E5F                     l2780:	
  4784  0E5F  0825               	movf	___flmul@b+1,w
  4785  0E60  00AC               	movwf	??___flmul
  4786  0E61  082C               	movf	??___flmul,w
  4787  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4788  0E63  082A               	movf	___flmul@a+2,w
  4789  0E64  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4790  0E69  0871               	movf	?__Umul8_16+1,w
  4791  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0E6C  00BD               	movwf	___flmul@temp+1
  4794  0E6D  0870               	movf	?__Umul8_16,w
  4795  0E6E  00BC               	movwf	___flmul@temp
  4796  0E6F  083C               	movf	___flmul@temp,w
  4797  0E70  00AC               	movwf	??___flmul
  4798  0E71  083D               	movf	___flmul@temp+1,w
  4799  0E72  00AD               	movwf	??___flmul+1
  4800  0E73  01AE               	clrf	??___flmul+2
  4801  0E74  01AF               	clrf	??___flmul+3
  4802  0E75  082C               	movf	??___flmul,w
  4803  0E76  07B8               	addwf	___flmul@prod,f
  4804  0E77  082D               	movf	??___flmul+1,w
  4805  0E78  1103               	clrz
  4806  0E79  1803               	skipnc
  4807  0E7A  3E01               	addlw	1
  4808  0E7B  1903               	skipnz
  4809  0E7C  2E7E               	goto	u4091
  4810  0E7D  07B9               	addwf	___flmul@prod+1,f
  4811  0E7E                     u4091:	
  4812  0E7E  082E               	movf	??___flmul+2,w
  4813  0E7F  1103               	clrz
  4814  0E80  1803               	skipnc
  4815  0E81  3E01               	addlw	1
  4816  0E82  1903               	skipnz
  4817  0E83  2E85               	goto	u4092
  4818  0E84  07BA               	addwf	___flmul@prod+2,f
  4819  0E85                     u4092:	
  4820  0E85  082F               	movf	??___flmul+3,w
  4821  0E86  1103               	clrz
  4822  0E87  1803               	skipnc
  4823  0E88  3E01               	addlw	1
  4824  0E89  1903               	skipnz
  4825  0E8A  2E8C               	goto	u4093
  4826  0E8B  07BB               	addwf	___flmul@prod+3,f
  4827  0E8C                     u4093:	
  4828  0E8C                     l2782:	
  4829  0E8C  0826               	movf	___flmul@b+2,w
  4830  0E8D  00AC               	movwf	??___flmul
  4831  0E8E  082C               	movf	??___flmul,w
  4832  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4833  0E90  0829               	movf	___flmul@a+1,w
  4834  0E91  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4835  0E96  0871               	movf	?__Umul8_16+1,w
  4836  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0E99  00BD               	movwf	___flmul@temp+1
  4839  0E9A  0870               	movf	?__Umul8_16,w
  4840  0E9B  00BC               	movwf	___flmul@temp
  4841  0E9C                     l2784:	
  4842  0E9C  083C               	movf	___flmul@temp,w
  4843  0E9D  00AC               	movwf	??___flmul
  4844  0E9E  083D               	movf	___flmul@temp+1,w
  4845  0E9F  00AD               	movwf	??___flmul+1
  4846  0EA0  01AE               	clrf	??___flmul+2
  4847  0EA1  01AF               	clrf	??___flmul+3
  4848  0EA2  082C               	movf	??___flmul,w
  4849  0EA3  07B8               	addwf	___flmul@prod,f
  4850  0EA4  082D               	movf	??___flmul+1,w
  4851  0EA5  1103               	clrz
  4852  0EA6  1803               	skipnc
  4853  0EA7  3E01               	addlw	1
  4854  0EA8  1903               	skipnz
  4855  0EA9  2EAB               	goto	u4101
  4856  0EAA  07B9               	addwf	___flmul@prod+1,f
  4857  0EAB                     u4101:	
  4858  0EAB  082E               	movf	??___flmul+2,w
  4859  0EAC  1103               	clrz
  4860  0EAD  1803               	skipnc
  4861  0EAE  3E01               	addlw	1
  4862  0EAF  1903               	skipnz
  4863  0EB0  2EB2               	goto	u4102
  4864  0EB1  07BA               	addwf	___flmul@prod+2,f
  4865  0EB2                     u4102:	
  4866  0EB2  082F               	movf	??___flmul+3,w
  4867  0EB3  1103               	clrz
  4868  0EB4  1803               	skipnc
  4869  0EB5  3E01               	addlw	1
  4870  0EB6  1903               	skipnz
  4871  0EB7  2EB9               	goto	u4103
  4872  0EB8  07BB               	addwf	___flmul@prod+3,f
  4873  0EB9                     u4103:	
  4874  0EB9  0826               	movf	___flmul@b+2,w
  4875  0EBA  00AC               	movwf	??___flmul
  4876  0EBB  082C               	movf	??___flmul,w
  4877  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4878  0EBD  082A               	movf	___flmul@a+2,w
  4879  0EBE  160A  158A  236C  120A  158A  	fcall	__Umul8_16
  4880  0EC3  0871               	movf	?__Umul8_16+1,w
  4881  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0EC6  00BD               	movwf	___flmul@temp+1
  4884  0EC7  0870               	movf	?__Umul8_16,w
  4885  0EC8  00BC               	movwf	___flmul@temp
  4886  0EC9                     l2786:	
  4887  0EC9  083C               	movf	___flmul@temp,w
  4888  0ECA  00AC               	movwf	??___flmul
  4889  0ECB  083D               	movf	___flmul@temp+1,w
  4890  0ECC  00AD               	movwf	??___flmul+1
  4891  0ECD  01AE               	clrf	??___flmul+2
  4892  0ECE  01AF               	clrf	??___flmul+3
  4893  0ECF  3008               	movlw	8
  4894  0ED0                     u4115:	
  4895  0ED0  1003               	clrc
  4896  0ED1  0DAC               	rlf	??___flmul,f
  4897  0ED2  0DAD               	rlf	??___flmul+1,f
  4898  0ED3  0DAE               	rlf	??___flmul+2,f
  4899  0ED4  0DAF               	rlf	??___flmul+3,f
  4900  0ED5                     u4110:	
  4901  0ED5  3EFF               	addlw	-1
  4902  0ED6  1D03               	skipz
  4903  0ED7  2ED0               	goto	u4115
  4904  0ED8  082C               	movf	??___flmul,w
  4905  0ED9  07B8               	addwf	___flmul@prod,f
  4906  0EDA  082D               	movf	??___flmul+1,w
  4907  0EDB  1103               	clrz
  4908  0EDC  1803               	skipnc
  4909  0EDD  3E01               	addlw	1
  4910  0EDE  1903               	skipnz
  4911  0EDF  2EE1               	goto	u4121
  4912  0EE0  07B9               	addwf	___flmul@prod+1,f
  4913  0EE1                     u4121:	
  4914  0EE1  082E               	movf	??___flmul+2,w
  4915  0EE2  1103               	clrz
  4916  0EE3  1803               	skipnc
  4917  0EE4  3E01               	addlw	1
  4918  0EE5  1903               	skipnz
  4919  0EE6  2EE8               	goto	u4122
  4920  0EE7  07BA               	addwf	___flmul@prod+2,f
  4921  0EE8                     u4122:	
  4922  0EE8  082F               	movf	??___flmul+3,w
  4923  0EE9  1103               	clrz
  4924  0EEA  1803               	skipnc
  4925  0EEB  3E01               	addlw	1
  4926  0EEC  1903               	skipnz
  4927  0EED  2EEF               	goto	u4123
  4928  0EEE  07BB               	addwf	___flmul@prod+3,f
  4929  0EEF                     u4123:	
  4930  0EEF                     l2788:	
  4931  0EEF  0832               	movf	___flmul@grs,w
  4932  0EF0  00AC               	movwf	??___flmul
  4933  0EF1  0833               	movf	___flmul@grs+1,w
  4934  0EF2  00AD               	movwf	??___flmul+1
  4935  0EF3  0834               	movf	___flmul@grs+2,w
  4936  0EF4  00AE               	movwf	??___flmul+2
  4937  0EF5  0835               	movf	___flmul@grs+3,w
  4938  0EF6  00AF               	movwf	??___flmul+3
  4939  0EF7  3018               	movlw	24
  4940  0EF8                     u4135:	
  4941  0EF8  1003               	clrc
  4942  0EF9  0CAF               	rrf	??___flmul+3,f
  4943  0EFA  0CAE               	rrf	??___flmul+2,f
  4944  0EFB  0CAD               	rrf	??___flmul+1,f
  4945  0EFC  0CAC               	rrf	??___flmul,f
  4946  0EFD                     u4130:	
  4947  0EFD  3EFF               	addlw	-1
  4948  0EFE  1D03               	skipz
  4949  0EFF  2EF8               	goto	u4135
  4950  0F00  082C               	movf	??___flmul,w
  4951  0F01  07B8               	addwf	___flmul@prod,f
  4952  0F02  082D               	movf	??___flmul+1,w
  4953  0F03  1103               	clrz
  4954  0F04  1803               	skipnc
  4955  0F05  3E01               	addlw	1
  4956  0F06  1903               	skipnz
  4957  0F07  2F09               	goto	u4141
  4958  0F08  07B9               	addwf	___flmul@prod+1,f
  4959  0F09                     u4141:	
  4960  0F09  082E               	movf	??___flmul+2,w
  4961  0F0A  1103               	clrz
  4962  0F0B  1803               	skipnc
  4963  0F0C  3E01               	addlw	1
  4964  0F0D  1903               	skipnz
  4965  0F0E  2F10               	goto	u4142
  4966  0F0F  07BA               	addwf	___flmul@prod+2,f
  4967  0F10                     u4142:	
  4968  0F10  082F               	movf	??___flmul+3,w
  4969  0F11  1103               	clrz
  4970  0F12  1803               	skipnc
  4971  0F13  3E01               	addlw	1
  4972  0F14  1903               	skipnz
  4973  0F15  2F17               	goto	u4143
  4974  0F16  07BB               	addwf	___flmul@prod+3,f
  4975  0F17                     u4143:	
  4976  0F17                     l2790:	
  4977  0F17  3008               	movlw	8
  4978  0F18  00AC               	movwf	??___flmul
  4979  0F19                     u4155:	
  4980  0F19  1003               	clrc
  4981  0F1A  0DB2               	rlf	___flmul@grs,f
  4982  0F1B  0DB3               	rlf	___flmul@grs+1,f
  4983  0F1C  0DB4               	rlf	___flmul@grs+2,f
  4984  0F1D  0DB5               	rlf	___flmul@grs+3,f
  4985  0F1E  0BAC               	decfsz	??___flmul,f
  4986  0F1F  2F19               	goto	u4155
  4987  0F20                     l2792:	
  4988  0F20  0837               	movf	___flmul@bexp,w
  4989  0F21  0736               	addwf	___flmul@aexp,w
  4990  0F22  00AC               	movwf	??___flmul
  4991  0F23  01AD               	clrf	??___flmul+1
  4992  0F24  0DAD               	rlf	??___flmul+1,f
  4993  0F25  082C               	movf	??___flmul,w
  4994  0F26  3E82               	addlw	130
  4995  0F27  00BC               	movwf	___flmul@temp
  4996  0F28  082D               	movf	??___flmul+1,w
  4997  0F29  1803               	skipnc
  4998  0F2A  3E01               	addlw	1
  4999  0F2B  3EFF               	addlw	255
  5000  0F2C  00BD               	movwf	___flmul@temp+1
  5001  0F2D  2F4B               	goto	l2804
  5002  0F2E                     l2794:	
  5003  0F2E  3001               	movlw	1
  5004  0F2F  00AC               	movwf	??___flmul
  5005  0F30                     u4165:	
  5006  0F30  1003               	clrc
  5007  0F31  0DB8               	rlf	___flmul@prod,f
  5008  0F32  0DB9               	rlf	___flmul@prod+1,f
  5009  0F33  0DBA               	rlf	___flmul@prod+2,f
  5010  0F34  0DBB               	rlf	___flmul@prod+3,f
  5011  0F35  0BAC               	decfsz	??___flmul,f
  5012  0F36  2F30               	goto	u4165
  5013  0F37                     l2796:	
  5014  0F37  1FB5               	btfss	___flmul@grs+3,7
  5015  0F38  2F3A               	goto	u4171
  5016  0F39  2F3B               	goto	u4170
  5017  0F3A                     u4171:	
  5018  0F3A  2F3C               	goto	l2800
  5019  0F3B                     u4170:	
  5020  0F3B                     l2798:	
  5021  0F3B  1438               	bsf	___flmul@prod,0
  5022  0F3C                     l2800:	
  5023  0F3C  3001               	movlw	1
  5024  0F3D  00AC               	movwf	??___flmul
  5025  0F3E                     u4185:	
  5026  0F3E  1003               	clrc
  5027  0F3F  0DB2               	rlf	___flmul@grs,f
  5028  0F40  0DB3               	rlf	___flmul@grs+1,f
  5029  0F41  0DB4               	rlf	___flmul@grs+2,f
  5030  0F42  0DB5               	rlf	___flmul@grs+3,f
  5031  0F43  0BAC               	decfsz	??___flmul,f
  5032  0F44  2F3E               	goto	u4185
  5033  0F45                     l2802:	
  5034  0F45  30FF               	movlw	255
  5035  0F46  07BC               	addwf	___flmul@temp,f
  5036  0F47  1803               	skipnc
  5037  0F48  0ABD               	incf	___flmul@temp+1,f
  5038  0F49  30FF               	movlw	255
  5039  0F4A  07BD               	addwf	___flmul@temp+1,f
  5040  0F4B                     l2804:	
  5041  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5042  0F4C  2F4E               	goto	u4191
  5043  0F4D  2F4F               	goto	u4190
  5044  0F4E                     u4191:	
  5045  0F4E  2F2E               	goto	l2794
  5046  0F4F                     u4190:	
  5047  0F4F                     l2806:	
  5048  0F4F  01B6               	clrf	___flmul@aexp
  5049  0F50                     l2808:	
  5050  0F50  1FB5               	btfss	___flmul@grs+3,7
  5051  0F51  2F53               	goto	u4201
  5052  0F52  2F54               	goto	u4200
  5053  0F53                     u4201:	
  5054  0F53  2F70               	goto	l2816
  5055  0F54                     u4200:	
  5056  0F54                     l2810:	
  5057  0F54  30FF               	movlw	255
  5058  0F55  0532               	andwf	___flmul@grs,w
  5059  0F56  00AC               	movwf	??___flmul
  5060  0F57  30FF               	movlw	255
  5061  0F58  0533               	andwf	___flmul@grs+1,w
  5062  0F59  00AD               	movwf	??___flmul+1
  5063  0F5A  30FF               	movlw	255
  5064  0F5B  0534               	andwf	___flmul@grs+2,w
  5065  0F5C  00AE               	movwf	??___flmul+2
  5066  0F5D  307F               	movlw	127
  5067  0F5E  0535               	andwf	___flmul@grs+3,w
  5068  0F5F  00AF               	movwf	??___flmul+3
  5069  0F60  082F               	movf	??___flmul+3,w
  5070  0F61  042E               	iorwf	??___flmul+2,w
  5071  0F62  042D               	iorwf	??___flmul+1,w
  5072  0F63  042C               	iorwf	??___flmul,w
  5073  0F64  1903               	skipnz
  5074  0F65  2F67               	goto	u4211
  5075  0F66  2F68               	goto	u4210
  5076  0F67                     u4211:	
  5077  0F67  2F6B               	goto	l744
  5078  0F68                     u4210:	
  5079  0F68                     l2812:	
  5080  0F68  01B6               	clrf	___flmul@aexp
  5081  0F69  0AB6               	incf	___flmul@aexp,f
  5082  0F6A  2F70               	goto	l2816
  5083  0F6B                     l744:	
  5084  0F6B  1C38               	btfss	___flmul@prod,0
  5085  0F6C  2F6E               	goto	u4221
  5086  0F6D  2F6F               	goto	u4220
  5087  0F6E                     u4221:	
  5088  0F6E  2F70               	goto	l2816
  5089  0F6F                     u4220:	
  5090  0F6F  2F68               	goto	l2812
  5091  0F70                     l2816:	
  5092  0F70  0836               	movf	___flmul@aexp,w
  5093  0F71  1903               	btfsc	3,2
  5094  0F72  2F74               	goto	u4231
  5095  0F73  2F75               	goto	u4230
  5096  0F74                     u4231:	
  5097  0F74  2FA6               	goto	l2826
  5098  0F75                     u4230:	
  5099  0F75                     l2818:	
  5100  0F75  3001               	movlw	1
  5101  0F76  07B8               	addwf	___flmul@prod,f
  5102  0F77  3000               	movlw	0
  5103  0F78  1803               	skipnc
  5104  0F79  3001               	movlw	1
  5105  0F7A  07B9               	addwf	___flmul@prod+1,f
  5106  0F7B  3000               	movlw	0
  5107  0F7C  1803               	skipnc
  5108  0F7D  3001               	movlw	1
  5109  0F7E  07BA               	addwf	___flmul@prod+2,f
  5110  0F7F  3000               	movlw	0
  5111  0F80  1803               	skipnc
  5112  0F81  3001               	movlw	1
  5113  0F82  07BB               	addwf	___flmul@prod+3,f
  5114  0F83                     l2820:	
  5115  0F83  1C3B               	btfss	___flmul@prod+3,0
  5116  0F84  2F86               	goto	u4241
  5117  0F85  2F87               	goto	u4240
  5118  0F86                     u4241:	
  5119  0F86  2FA6               	goto	l2826
  5120  0F87                     u4240:	
  5121  0F87                     l2822:	
  5122  0F87  0838               	movf	___flmul@prod,w
  5123  0F88  00AC               	movwf	??___flmul
  5124  0F89  0839               	movf	___flmul@prod+1,w
  5125  0F8A  00AD               	movwf	??___flmul+1
  5126  0F8B  083A               	movf	___flmul@prod+2,w
  5127  0F8C  00AE               	movwf	??___flmul+2
  5128  0F8D  083B               	movf	___flmul@prod+3,w
  5129  0F8E  00AF               	movwf	??___flmul+3
  5130  0F8F  3001               	movlw	1
  5131  0F90  00B0               	movwf	??___flmul+4
  5132  0F91                     u4255:	
  5133  0F91  0D2F               	rlf	??___flmul+3,w
  5134  0F92  0CAF               	rrf	??___flmul+3,f
  5135  0F93  0CAE               	rrf	??___flmul+2,f
  5136  0F94  0CAD               	rrf	??___flmul+1,f
  5137  0F95  0CAC               	rrf	??___flmul,f
  5138  0F96                     u4250:	
  5139  0F96  0BB0               	decfsz	??___flmul+4,f
  5140  0F97  2F91               	goto	u4255
  5141  0F98  082F               	movf	??___flmul+3,w
  5142  0F99  00BB               	movwf	___flmul@prod+3
  5143  0F9A  082E               	movf	??___flmul+2,w
  5144  0F9B  00BA               	movwf	___flmul@prod+2
  5145  0F9C  082D               	movf	??___flmul+1,w
  5146  0F9D  00B9               	movwf	___flmul@prod+1
  5147  0F9E  082C               	movf	??___flmul,w
  5148  0F9F  00B8               	movwf	___flmul@prod
  5149  0FA0                     l2824:	
  5150  0FA0  3001               	movlw	1
  5151  0FA1  07BC               	addwf	___flmul@temp,f
  5152  0FA2  1803               	skipnc
  5153  0FA3  0ABD               	incf	___flmul@temp+1,f
  5154  0FA4  3000               	movlw	0
  5155  0FA5  07BD               	addwf	___flmul@temp+1,f
  5156  0FA6                     l2826:	
  5157  0FA6  083D               	movf	___flmul@temp+1,w
  5158  0FA7  3A80               	xorlw	128
  5159  0FA8  00FF               	movwf	btemp+1
  5160  0FA9  3080               	movlw	128
  5161  0FAA  027F               	subwf	btemp+1,w
  5162  0FAB  1D03               	skipz
  5163  0FAC  2FAF               	goto	u4265
  5164  0FAD  30FF               	movlw	255
  5165  0FAE  023C               	subwf	___flmul@temp,w
  5166  0FAF                     u4265:	
  5167  0FAF  1C03               	skipc
  5168  0FB0  2FB2               	goto	u4261
  5169  0FB1  2FB3               	goto	u4260
  5170  0FB2                     u4261:	
  5171  0FB2  2FBE               	goto	l2830
  5172  0FB3                     u4260:	
  5173  0FB3                     l2828:	
  5174  0FB3  307F               	movlw	127
  5175  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5176  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5177  0FB6  00BB               	movwf	___flmul@prod+3
  5178  0FB7  3080               	movlw	128
  5179  0FB8  00BA               	movwf	___flmul@prod+2
  5180  0FB9  3000               	movlw	0
  5181  0FBA  00B9               	movwf	___flmul@prod+1
  5182  0FBB  3000               	movlw	0
  5183  0FBC  00B8               	movwf	___flmul@prod
  5184  0FBD  2FF3               	goto	l750
  5185  0FBE                     l2830:	
  5186  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0FC0  083D               	movf	___flmul@temp+1,w
  5189  0FC1  3A80               	xorlw	128
  5190  0FC2  00FF               	movwf	btemp+1
  5191  0FC3  3080               	movlw	128
  5192  0FC4  027F               	subwf	btemp+1,w
  5193  0FC5  1D03               	skipz
  5194  0FC6  2FC9               	goto	u4275
  5195  0FC7  3001               	movlw	1
  5196  0FC8  023C               	subwf	___flmul@temp,w
  5197  0FC9                     u4275:	
  5198  0FC9  1803               	skipnc
  5199  0FCA  2FCC               	goto	u4271
  5200  0FCB  2FCD               	goto	u4270
  5201  0FCC                     u4271:	
  5202  0FCC  2FD9               	goto	l2836
  5203  0FCD                     u4270:	
  5204  0FCD                     l2832:	
  5205  0FCD  3000               	movlw	0
  5206  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0FD0  00BB               	movwf	___flmul@prod+3
  5209  0FD1  3000               	movlw	0
  5210  0FD2  00BA               	movwf	___flmul@prod+2
  5211  0FD3  3000               	movlw	0
  5212  0FD4  00B9               	movwf	___flmul@prod+1
  5213  0FD5  3000               	movlw	0
  5214  0FD6  00B8               	movwf	___flmul@prod
  5215  0FD7                     l2834:	
  5216  0FD7  01B1               	clrf	___flmul@sign
  5217  0FD8  2FF3               	goto	l750
  5218  0FD9                     l2836:	
  5219  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0FDB  083C               	movf	___flmul@temp,w
  5222  0FDC  00AC               	movwf	??___flmul
  5223  0FDD  082C               	movf	??___flmul,w
  5224  0FDE  00B7               	movwf	___flmul@bexp
  5225  0FDF  30FF               	movlw	255
  5226  0FE0  05B8               	andwf	___flmul@prod,f
  5227  0FE1  30FF               	movlw	255
  5228  0FE2  05B9               	andwf	___flmul@prod+1,f
  5229  0FE3  307F               	movlw	127
  5230  0FE4  05BA               	andwf	___flmul@prod+2,f
  5231  0FE5  3000               	movlw	0
  5232  0FE6  05BB               	andwf	___flmul@prod+3,f
  5233  0FE7                     l2838:	
  5234  0FE7  1C37               	btfss	___flmul@bexp,0
  5235  0FE8  2FEA               	goto	u4281
  5236  0FE9  2FEB               	goto	u4280
  5237  0FEA                     u4281:	
  5238  0FEA  2FEC               	goto	l2842
  5239  0FEB                     u4280:	
  5240  0FEB                     l2840:	
  5241  0FEB  17BA               	bsf	___flmul@prod+2,7
  5242  0FEC                     l2842:	
  5243  0FEC  0837               	movf	___flmul@bexp,w
  5244  0FED  00AC               	movwf	??___flmul
  5245  0FEE  1003               	clrc
  5246  0FEF  0C2C               	rrf	??___flmul,w
  5247  0FF0  00AD               	movwf	??___flmul+1
  5248  0FF1  082D               	movf	??___flmul+1,w
  5249  0FF2  00BB               	movwf	___flmul@prod+3
  5250  0FF3                     l750:	
  5251  0FF3  0831               	movf	___flmul@sign,w
  5252  0FF4  00AC               	movwf	??___flmul
  5253  0FF5  082C               	movf	??___flmul,w
  5254  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5255  0FF7                     l2844:	
  5256  0FF7  083B               	movf	___flmul@prod+3,w
  5257  0FF8  00A7               	movwf	?___flmul+3
  5258  0FF9  083A               	movf	___flmul@prod+2,w
  5259  0FFA  00A6               	movwf	?___flmul+2
  5260  0FFB  0839               	movf	___flmul@prod+1,w
  5261  0FFC  00A5               	movwf	?___flmul+1
  5262  0FFD  0838               	movf	___flmul@prod,w
  5263  0FFE  00A4               	movwf	?___flmul
  5264  0FFF                     l738:	
  5265  0FFF  0008               	return
  5266  1000                     __end_of___flmul:	
  5267                           
  5268                           	psect	text11
  5269  1B6C                     __ptext11:	
  5270 ;; *************** function __Umul8_16 *****************
  5271 ;; Defined at:
  5272 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  multiplier      1    wreg     unsigned char 
  5275 ;;  multiplicand    1    0[COMMON] unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  multiplier      1    8[COMMON] unsigned char 
  5278 ;;  word_mpld       2    6[COMMON] unsigned int 
  5279 ;;  product         2    4[COMMON] unsigned int 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  2    0[COMMON] unsigned int 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5289 ;;      Params:         2       0       0       0       0
  5290 ;;      Locals:         5       0       0       0       0
  5291 ;;      Temps:          2       0       0       0       0
  5292 ;;      Totals:         9       0       0       0       0
  5293 ;;Total ram usage:        9 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		___flmul
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function __Umul8_16
  5304  1B6C                     __Umul8_16:	
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5308                           ;__Umul8_16@multiplier stored from wreg
  5309  1B6C  00F8               	movwf	__Umul8_16@multiplier
  5310  1B6D                     l2344:	
  5311  1B6D  01F4               	clrf	__Umul8_16@product
  5312  1B6E  01F5               	clrf	__Umul8_16@product+1
  5313  1B6F                     l2346:	
  5314  1B6F  0870               	movf	__Umul8_16@multiplicand,w
  5315  1B70  00F2               	movwf	??__Umul8_16
  5316  1B71  01F3               	clrf	??__Umul8_16+1
  5317  1B72  0872               	movf	??__Umul8_16,w
  5318  1B73  00F6               	movwf	__Umul8_16@word_mpld
  5319  1B74  0873               	movf	??__Umul8_16+1,w
  5320  1B75  00F7               	movwf	__Umul8_16@word_mpld+1
  5321  1B76                     l2348:	
  5322  1B76  1C78               	btfss	__Umul8_16@multiplier,0
  5323  1B77  2B79               	goto	u3101
  5324  1B78  2B7A               	goto	u3100
  5325  1B79                     u3101:	
  5326  1B79  2B80               	goto	l804
  5327  1B7A                     u3100:	
  5328  1B7A                     l2350:	
  5329  1B7A  0876               	movf	__Umul8_16@word_mpld,w
  5330  1B7B  07F4               	addwf	__Umul8_16@product,f
  5331  1B7C  1803               	skipnc
  5332  1B7D  0AF5               	incf	__Umul8_16@product+1,f
  5333  1B7E  0877               	movf	__Umul8_16@word_mpld+1,w
  5334  1B7F  07F5               	addwf	__Umul8_16@product+1,f
  5335  1B80                     l804:	
  5336  1B80  3001               	movlw	1
  5337  1B81                     u3115:	
  5338  1B81  1003               	clrc
  5339  1B82  0DF6               	rlf	__Umul8_16@word_mpld,f
  5340  1B83  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5341  1B84  3EFF               	addlw	-1
  5342  1B85  1D03               	skipz
  5343  1B86  2B81               	goto	u3115
  5344  1B87  1003               	clrc
  5345  1B88  0CF8               	rrf	__Umul8_16@multiplier,f
  5346  1B89                     l2352:	
  5347  1B89  0878               	movf	__Umul8_16@multiplier,w
  5348  1B8A  1D03               	btfss	3,2
  5349  1B8B  2B8D               	goto	u3121
  5350  1B8C  2B8E               	goto	u3120
  5351  1B8D                     u3121:	
  5352  1B8D  2B76               	goto	l2348
  5353  1B8E                     u3120:	
  5354  1B8E                     l2354:	
  5355  1B8E  0875               	movf	__Umul8_16@product+1,w
  5356  1B8F  00F1               	movwf	?__Umul8_16+1
  5357  1B90  0874               	movf	__Umul8_16@product,w
  5358  1B91  00F0               	movwf	?__Umul8_16
  5359  1B92                     l806:	
  5360  1B92  0008               	return
  5361  1B93                     __end_of__Umul8_16:	
  5362                           
  5363                           	psect	text12
  5364  1F43                     __ptext12:	
  5365 ;; *************** function __tdiv_to_l_ *****************
  5366 ;; Defined at:
  5367 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  f1              4    0[COMMON] float 
  5370 ;;  f2              4    4[COMMON] float 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  quot            4    0[BANK0 ] unsigned long 
  5373 ;;  exp1            1    5[BANK0 ] unsigned char 
  5374 ;;  cntr            1    4[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  4    0[COMMON] unsigned long 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5384 ;;      Params:         8       0       0       0       0
  5385 ;;      Locals:         0       6       0       0       0
  5386 ;;      Temps:          4       0       0       0       0
  5387 ;;      Totals:        12       6       0       0       0
  5388 ;;Total ram usage:       18 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_sprintf
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function __tdiv_to_l_
  5399  1F43                     __tdiv_to_l_:	
  5400  1F43                     l2928:	
  5401                           ;incstack = 0
  5402                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5403                           
  5404  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5405  1F44  00F8               	movwf	??__tdiv_to_l_
  5406  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5407  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5408  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5409  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5410  1F49  1003               	clrc
  5411  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5412  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5413  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5414  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5415  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5416  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5417  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5418  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5419  1F52  1D03               	btfss	3,2
  5420  1F53  2F55               	goto	u4561
  5421  1F54  2F56               	goto	u4560
  5422  1F55                     u4561:	
  5423  1F55  2F5F               	goto	l2934
  5424  1F56                     u4560:	
  5425  1F56                     l2930:	
  5426  1F56  3000               	movlw	0
  5427  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5428  1F58  3000               	movlw	0
  5429  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5430  1F5A  3000               	movlw	0
  5431  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5432  1F5C  3000               	movlw	0
  5433  1F5D  00F0               	movwf	?__tdiv_to_l_
  5434  1F5E  2FFF               	goto	l532
  5435  1F5F                     l2934:	
  5436  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5437  1F60  00F8               	movwf	??__tdiv_to_l_
  5438  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5439  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5440  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5441  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5442  1F65  1003               	clrc
  5443  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5444  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5445  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5446  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5447  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5448  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5449  1F6C  1D03               	btfss	3,2
  5450  1F6D  2F6F               	goto	u4571
  5451  1F6E  2F70               	goto	u4570
  5452  1F6F                     u4571:	
  5453  1F6F  2F71               	goto	l533
  5454  1F70                     u4570:	
  5455  1F70  2F56               	goto	l2930
  5456  1F71                     l533:	
  5457  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5458  1F72                     l2940:	
  5459  1F72  30FF               	movlw	255
  5460  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5461  1F74  30FF               	movlw	255
  5462  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5463  1F76  3000               	movlw	0
  5464  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5465  1F78                     l2942:	
  5466  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5467  1F79  30FF               	movlw	255
  5468  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5469  1F7B  30FF               	movlw	255
  5470  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5471  1F7D  3000               	movlw	0
  5472  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5473  1F7F  3000               	movlw	0
  5474  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5475  1F81  3000               	movlw	0
  5476  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5477  1F83  3000               	movlw	0
  5478  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5479  1F85  3000               	movlw	0
  5480  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5481  1F87                     l2944:	
  5482  1F87  307F               	movlw	127
  5483  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5484  1F89                     l2946:	
  5485  1F89  3098               	movlw	152
  5486  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5487  1F8B  00F8               	movwf	??__tdiv_to_l_
  5488  1F8C  0878               	movf	??__tdiv_to_l_,w
  5489  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5490  1F8E  3018               	movlw	24
  5491  1F8F  00F8               	movwf	??__tdiv_to_l_
  5492  1F90  0878               	movf	??__tdiv_to_l_,w
  5493  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5494  1F92                     l2948:	
  5495  1F92  3001               	movlw	1
  5496  1F93  00F8               	movwf	??__tdiv_to_l_
  5497  1F94                     u4585:	
  5498  1F94  1003               	clrc
  5499  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5500  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5501  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5502  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5503  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5504  1F9A  2F94               	goto	u4585
  5505  1F9B                     l2950:	
  5506  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5507  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5508  1F9D  1D03               	skipz
  5509  1F9E  2FA5               	goto	u4595
  5510  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5511  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5512  1FA1  1D03               	skipz
  5513  1FA2  2FA5               	goto	u4595
  5514  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5515  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5516  1FA5                     u4595:	
  5517  1FA5  1C03               	skipc
  5518  1FA6  2FA8               	goto	u4591
  5519  1FA7  2FA9               	goto	u4590
  5520  1FA8                     u4591:	
  5521  1FA8  2FB4               	goto	l2956
  5522  1FA9                     u4590:	
  5523  1FA9                     l2952:	
  5524  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5525  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5526  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5527  1FAC  1C03               	skipc
  5528  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5529  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5530  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5531  1FB0  1C03               	skipc
  5532  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5533  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5534  1FB3                     l2954:	
  5535  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5536  1FB4                     l2956:	
  5537  1FB4  3001               	movlw	1
  5538  1FB5                     u4605:	
  5539  1FB5  1003               	clrc
  5540  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5541  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5542  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5543  1FB9  3EFF               	addlw	-1
  5544  1FBA  1D03               	skipz
  5545  1FBB  2FB5               	goto	u4605
  5546  1FBC                     l2958:	
  5547  1FBC  3001               	movlw	1
  5548  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5549  1FBE  1D03               	btfss	3,2
  5550  1FBF  2FC1               	goto	u4611
  5551  1FC0  2FC2               	goto	u4610
  5552  1FC1                     u4611:	
  5553  1FC1  2F92               	goto	l2948
  5554  1FC2                     u4610:	
  5555  1FC2                     l536:	
  5556  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5557  1FC3  2FC5               	goto	u4621
  5558  1FC4  2FC6               	goto	u4620
  5559  1FC5                     u4621:	
  5560  1FC5  2FE0               	goto	l2968
  5561  1FC6                     u4620:	
  5562  1FC6                     l2960:	
  5563  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5564  1FC7  3A80               	xorlw	128
  5565  1FC8  3E97               	addlw	151
  5566  1FC9  1803               	skipnc
  5567  1FCA  2FCC               	goto	u4631
  5568  1FCB  2FCD               	goto	u4630
  5569  1FCC                     u4631:	
  5570  1FCC  2FCE               	goto	l2966
  5571  1FCD                     u4630:	
  5572  1FCD  2F56               	goto	l2930
  5573  1FCE                     l2966:	
  5574  1FCE  3001               	movlw	1
  5575  1FCF                     u4645:	
  5576  1FCF  1003               	clrc
  5577  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5578  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5579  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5580  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5581  1FD4  3EFF               	addlw	-1
  5582  1FD5  1D03               	skipz
  5583  1FD6  2FCF               	goto	u4645
  5584  1FD7  3001               	movlw	1
  5585  1FD8  00F8               	movwf	??__tdiv_to_l_
  5586  1FD9  0878               	movf	??__tdiv_to_l_,w
  5587  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5588  1FDB  1D03               	btfss	3,2
  5589  1FDC  2FDE               	goto	u4651
  5590  1FDD  2FDF               	goto	u4650
  5591  1FDE                     u4651:	
  5592  1FDE  2FCE               	goto	l2966
  5593  1FDF                     u4650:	
  5594  1FDF  2FF7               	goto	l2976
  5595  1FE0                     l2968:	
  5596  1FE0  3018               	movlw	24
  5597  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5598  1FE2  1C03               	skipc
  5599  1FE3  2FE5               	goto	u4661
  5600  1FE4  2FE6               	goto	u4660
  5601  1FE5                     u4661:	
  5602  1FE5  2FF2               	goto	l543
  5603  1FE6                     u4660:	
  5604  1FE6  2F56               	goto	l2930
  5605  1FE7                     l2974:	
  5606  1FE7  3001               	movlw	1
  5607  1FE8  00F8               	movwf	??__tdiv_to_l_
  5608  1FE9                     u4675:	
  5609  1FE9  1003               	clrc
  5610  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5611  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5612  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5613  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5614  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5615  1FEF  2FE9               	goto	u4675
  5616  1FF0  3001               	movlw	1
  5617  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5618  1FF2                     l543:	
  5619  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5620  1FF3  1D03               	btfss	3,2
  5621  1FF4  2FF6               	goto	u4681
  5622  1FF5  2FF7               	goto	u4680
  5623  1FF6                     u4681:	
  5624  1FF6  2FE7               	goto	l2974
  5625  1FF7                     u4680:	
  5626  1FF7                     l2976:	
  5627  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5628  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5629  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5630  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5631  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5632  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5633  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5634  1FFE  00F0               	movwf	?__tdiv_to_l_
  5635  1FFF                     l532:	
  5636  1FFF  0008               	return
  5637  2000                     __end_of__tdiv_to_l_:	
  5638                           
  5639                           	psect	text13
  5640  1085                     __ptext13:	
  5641 ;; *************** function __div_to_l_ *****************
  5642 ;; Defined at:
  5643 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  f1              4    0[COMMON] unsigned long 
  5646 ;;  f2              4    4[COMMON] unsigned long 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  quot            4    0[BANK0 ] unsigned long 
  5649 ;;  exp1            1    5[BANK0 ] unsigned char 
  5650 ;;  cntr            1    4[BANK0 ] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  4    0[COMMON] unsigned long 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5660 ;;      Params:         8       0       0       0       0
  5661 ;;      Locals:         0       6       0       0       0
  5662 ;;      Temps:          1       0       0       0       0
  5663 ;;      Totals:         9       6       0       0       0
  5664 ;;Total ram usage:       15 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_sprintf
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function __div_to_l_
  5675  1085                     __div_to_l_:	
  5676  1085                     l2980:	
  5677                           ;incstack = 0
  5678                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5679                           
  5680  1085  1003               	clrc
  5681  1086  0D72               	rlf	__div_to_l_@f1+2,w
  5682  1087  0D73               	rlf	__div_to_l_@f1+3,w
  5683  1088  00F8               	movwf	??__div_to_l_
  5684  1089  0878               	movf	??__div_to_l_,w
  5685  108A  1283               	bcf	3,5	;RP0=0, select bank0
  5686  108B  1303               	bcf	3,6	;RP1=0, select bank0
  5687  108C  00A5               	movwf	__div_to_l_@exp1
  5688  108D  0825               	movf	__div_to_l_@exp1,w
  5689  108E  1D03               	btfss	3,2
  5690  108F  2891               	goto	u4691
  5691  1090  2892               	goto	u4690
  5692  1091                     u4691:	
  5693  1091  289B               	goto	l2986
  5694  1092                     u4690:	
  5695  1092                     l2982:	
  5696  1092  3000               	movlw	0
  5697  1093  00F3               	movwf	?__div_to_l_+3
  5698  1094  3000               	movlw	0
  5699  1095  00F2               	movwf	?__div_to_l_+2
  5700  1096  3000               	movlw	0
  5701  1097  00F1               	movwf	?__div_to_l_+1
  5702  1098  3000               	movlw	0
  5703  1099  00F0               	movwf	?__div_to_l_
  5704  109A  2942               	goto	l485
  5705  109B                     l2986:	
  5706  109B  1003               	clrc
  5707  109C  0D76               	rlf	__div_to_l_@f2+2,w
  5708  109D  0D77               	rlf	__div_to_l_@f2+3,w
  5709  109E  00F8               	movwf	??__div_to_l_
  5710  109F  0878               	movf	??__div_to_l_,w
  5711  10A0  00A4               	movwf	__div_to_l_@cntr
  5712  10A1  0824               	movf	__div_to_l_@cntr,w
  5713  10A2  1D03               	btfss	3,2
  5714  10A3  28A5               	goto	u4701
  5715  10A4  28A6               	goto	u4700
  5716  10A5                     u4701:	
  5717  10A5  28A7               	goto	l486
  5718  10A6                     u4700:	
  5719  10A6  2892               	goto	l2982
  5720  10A7                     l486:	
  5721  10A7  17F2               	bsf	__div_to_l_@f1+2,7
  5722  10A8                     l2992:	
  5723  10A8  30FF               	movlw	255
  5724  10A9  05F0               	andwf	__div_to_l_@f1,f
  5725  10AA  30FF               	movlw	255
  5726  10AB  05F1               	andwf	__div_to_l_@f1+1,f
  5727  10AC  30FF               	movlw	255
  5728  10AD  05F2               	andwf	__div_to_l_@f1+2,f
  5729  10AE  3000               	movlw	0
  5730  10AF  05F3               	andwf	__div_to_l_@f1+3,f
  5731  10B0                     l2994:	
  5732  10B0  17F6               	bsf	__div_to_l_@f2+2,7
  5733  10B1  30FF               	movlw	255
  5734  10B2  05F4               	andwf	__div_to_l_@f2,f
  5735  10B3  30FF               	movlw	255
  5736  10B4  05F5               	andwf	__div_to_l_@f2+1,f
  5737  10B5  30FF               	movlw	255
  5738  10B6  05F6               	andwf	__div_to_l_@f2+2,f
  5739  10B7  3000               	movlw	0
  5740  10B8  05F7               	andwf	__div_to_l_@f2+3,f
  5741  10B9  3000               	movlw	0
  5742  10BA  00A3               	movwf	__div_to_l_@quot+3
  5743  10BB  3000               	movlw	0
  5744  10BC  00A2               	movwf	__div_to_l_@quot+2
  5745  10BD  3000               	movlw	0
  5746  10BE  00A1               	movwf	__div_to_l_@quot+1
  5747  10BF  3000               	movlw	0
  5748  10C0  00A0               	movwf	__div_to_l_@quot
  5749  10C1                     l2996:	
  5750  10C1  307F               	movlw	127
  5751  10C2  02A5               	subwf	__div_to_l_@exp1,f
  5752  10C3                     l2998:	
  5753  10C3  30A0               	movlw	160
  5754  10C4  0724               	addwf	__div_to_l_@cntr,w
  5755  10C5  00F8               	movwf	??__div_to_l_
  5756  10C6  0878               	movf	??__div_to_l_,w
  5757  10C7  02A5               	subwf	__div_to_l_@exp1,f
  5758  10C8  3020               	movlw	32
  5759  10C9  00F8               	movwf	??__div_to_l_
  5760  10CA  0878               	movf	??__div_to_l_,w
  5761  10CB  00A4               	movwf	__div_to_l_@cntr
  5762  10CC                     l3000:	
  5763  10CC  3001               	movlw	1
  5764  10CD  00F8               	movwf	??__div_to_l_
  5765  10CE                     u4715:	
  5766  10CE  1003               	clrc
  5767  10CF  0DA0               	rlf	__div_to_l_@quot,f
  5768  10D0  0DA1               	rlf	__div_to_l_@quot+1,f
  5769  10D1  0DA2               	rlf	__div_to_l_@quot+2,f
  5770  10D2  0DA3               	rlf	__div_to_l_@quot+3,f
  5771  10D3  0BF8               	decfsz	??__div_to_l_,f
  5772  10D4  28CE               	goto	u4715
  5773  10D5                     l3002:	
  5774  10D5  0877               	movf	__div_to_l_@f2+3,w
  5775  10D6  0273               	subwf	__div_to_l_@f1+3,w
  5776  10D7  1D03               	skipz
  5777  10D8  28E3               	goto	u4725
  5778  10D9  0876               	movf	__div_to_l_@f2+2,w
  5779  10DA  0272               	subwf	__div_to_l_@f1+2,w
  5780  10DB  1D03               	skipz
  5781  10DC  28E3               	goto	u4725
  5782  10DD  0875               	movf	__div_to_l_@f2+1,w
  5783  10DE  0271               	subwf	__div_to_l_@f1+1,w
  5784  10DF  1D03               	skipz
  5785  10E0  28E3               	goto	u4725
  5786  10E1  0874               	movf	__div_to_l_@f2,w
  5787  10E2  0270               	subwf	__div_to_l_@f1,w
  5788  10E3                     u4725:	
  5789  10E3  1C03               	skipc
  5790  10E4  28E6               	goto	u4721
  5791  10E5  28E7               	goto	u4720
  5792  10E6                     u4721:	
  5793  10E6  28F6               	goto	l3008
  5794  10E7                     u4720:	
  5795  10E7                     l3004:	
  5796  10E7  0874               	movf	__div_to_l_@f2,w
  5797  10E8  02F0               	subwf	__div_to_l_@f1,f
  5798  10E9  0875               	movf	__div_to_l_@f2+1,w
  5799  10EA  1C03               	skipc
  5800  10EB  0F75               	incfsz	__div_to_l_@f2+1,w
  5801  10EC  02F1               	subwf	__div_to_l_@f1+1,f
  5802  10ED  0876               	movf	__div_to_l_@f2+2,w
  5803  10EE  1C03               	skipc
  5804  10EF  0F76               	incfsz	__div_to_l_@f2+2,w
  5805  10F0  02F2               	subwf	__div_to_l_@f1+2,f
  5806  10F1  0877               	movf	__div_to_l_@f2+3,w
  5807  10F2  1C03               	skipc
  5808  10F3  0F77               	incfsz	__div_to_l_@f2+3,w
  5809  10F4  02F3               	subwf	__div_to_l_@f1+3,f
  5810  10F5                     l3006:	
  5811  10F5  1420               	bsf	__div_to_l_@quot,0
  5812  10F6                     l3008:	
  5813  10F6  3001               	movlw	1
  5814  10F7  00F8               	movwf	??__div_to_l_
  5815  10F8                     u4735:	
  5816  10F8  1003               	clrc
  5817  10F9  0DF0               	rlf	__div_to_l_@f1,f
  5818  10FA  0DF1               	rlf	__div_to_l_@f1+1,f
  5819  10FB  0DF2               	rlf	__div_to_l_@f1+2,f
  5820  10FC  0DF3               	rlf	__div_to_l_@f1+3,f
  5821  10FD  0BF8               	decfsz	??__div_to_l_,f
  5822  10FE  28F8               	goto	u4735
  5823  10FF                     l3010:	
  5824  10FF  3001               	movlw	1
  5825  1100  02A4               	subwf	__div_to_l_@cntr,f
  5826  1101  1D03               	btfss	3,2
  5827  1102  2904               	goto	u4741
  5828  1103  2905               	goto	u4740
  5829  1104                     u4741:	
  5830  1104  28CC               	goto	l3000
  5831  1105                     u4740:	
  5832  1105                     l489:	
  5833  1105  1FA5               	btfss	__div_to_l_@exp1,7
  5834  1106  2908               	goto	u4751
  5835  1107  2909               	goto	u4750
  5836  1108                     u4751:	
  5837  1108  2923               	goto	l3020
  5838  1109                     u4750:	
  5839  1109                     l3012:	
  5840  1109  0825               	movf	__div_to_l_@exp1,w
  5841  110A  3A80               	xorlw	128
  5842  110B  3E9F               	addlw	159
  5843  110C  1803               	skipnc
  5844  110D  290F               	goto	u4761
  5845  110E  2910               	goto	u4760
  5846  110F                     u4761:	
  5847  110F  2911               	goto	l3018
  5848  1110                     u4760:	
  5849  1110  2892               	goto	l2982
  5850  1111                     l3018:	
  5851  1111  3001               	movlw	1
  5852  1112                     u4775:	
  5853  1112  1003               	clrc
  5854  1113  0CA3               	rrf	__div_to_l_@quot+3,f
  5855  1114  0CA2               	rrf	__div_to_l_@quot+2,f
  5856  1115  0CA1               	rrf	__div_to_l_@quot+1,f
  5857  1116  0CA0               	rrf	__div_to_l_@quot,f
  5858  1117  3EFF               	addlw	-1
  5859  1118  1D03               	skipz
  5860  1119  2912               	goto	u4775
  5861  111A  3001               	movlw	1
  5862  111B  00F8               	movwf	??__div_to_l_
  5863  111C  0878               	movf	??__div_to_l_,w
  5864  111D  07A5               	addwf	__div_to_l_@exp1,f
  5865  111E  1D03               	btfss	3,2
  5866  111F  2921               	goto	u4781
  5867  1120  2922               	goto	u4780
  5868  1121                     u4781:	
  5869  1121  2911               	goto	l3018
  5870  1122                     u4780:	
  5871  1122  293A               	goto	l3028
  5872  1123                     l3020:	
  5873  1123  3020               	movlw	32
  5874  1124  0225               	subwf	__div_to_l_@exp1,w
  5875  1125  1C03               	skipc
  5876  1126  2928               	goto	u4791
  5877  1127  2929               	goto	u4790
  5878  1128                     u4791:	
  5879  1128  2935               	goto	l496
  5880  1129                     u4790:	
  5881  1129  2892               	goto	l2982
  5882  112A                     l3026:	
  5883  112A  3001               	movlw	1
  5884  112B  00F8               	movwf	??__div_to_l_
  5885  112C                     u4805:	
  5886  112C  1003               	clrc
  5887  112D  0DA0               	rlf	__div_to_l_@quot,f
  5888  112E  0DA1               	rlf	__div_to_l_@quot+1,f
  5889  112F  0DA2               	rlf	__div_to_l_@quot+2,f
  5890  1130  0DA3               	rlf	__div_to_l_@quot+3,f
  5891  1131  0BF8               	decfsz	??__div_to_l_,f
  5892  1132  292C               	goto	u4805
  5893  1133  3001               	movlw	1
  5894  1134  02A5               	subwf	__div_to_l_@exp1,f
  5895  1135                     l496:	
  5896  1135  0825               	movf	__div_to_l_@exp1,w
  5897  1136  1D03               	btfss	3,2
  5898  1137  2939               	goto	u4811
  5899  1138  293A               	goto	u4810
  5900  1139                     u4811:	
  5901  1139  292A               	goto	l3026
  5902  113A                     u4810:	
  5903  113A                     l3028:	
  5904  113A  0823               	movf	__div_to_l_@quot+3,w
  5905  113B  00F3               	movwf	?__div_to_l_+3
  5906  113C  0822               	movf	__div_to_l_@quot+2,w
  5907  113D  00F2               	movwf	?__div_to_l_+2
  5908  113E  0821               	movf	__div_to_l_@quot+1,w
  5909  113F  00F1               	movwf	?__div_to_l_+1
  5910  1140  0820               	movf	__div_to_l_@quot,w
  5911  1141  00F0               	movwf	?__div_to_l_
  5912  1142                     l485:	
  5913  1142  0008               	return
  5914  1143                     __end_of__div_to_l_:	
  5915                           
  5916                           	psect	text14
  5917  1E89                     __ptext14:	
  5918 ;; *************** function ___xxtofl *****************
  5919 ;; Defined at:
  5920 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  sign            1    wreg     unsigned char 
  5923 ;;  val             4    0[COMMON] long 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  sign            1    8[COMMON] unsigned char 
  5926 ;;  arg             4   10[COMMON] unsigned long 
  5927 ;;  exp             1    9[COMMON] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  4    0[COMMON] unsigned char 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5937 ;;      Params:         4       0       0       0       0
  5938 ;;      Locals:         6       0       0       0       0
  5939 ;;      Temps:          4       0       0       0       0
  5940 ;;      Totals:        14       0       0       0       0
  5941 ;;Total ram usage:       14 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_voltaje1
  5947 ;;		_sprintf
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function ___xxtofl
  5953  1E89                     ___xxtofl:	
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5957                           ;___xxtofl@sign stored from wreg
  5958  1E89  00F8               	movwf	___xxtofl@sign
  5959  1E8A                     l3172:	
  5960  1E8A  0878               	movf	___xxtofl@sign,w
  5961  1E8B  1903               	btfsc	3,2
  5962  1E8C  2E8E               	goto	u5201
  5963  1E8D  2E8F               	goto	u5200
  5964  1E8E                     u5201:	
  5965  1E8E  2EA3               	goto	l3178
  5966  1E8F                     u5200:	
  5967  1E8F                     l3174:	
  5968  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  5969  1E90  2E92               	goto	u5211
  5970  1E91  2E93               	goto	u5210
  5971  1E92                     u5211:	
  5972  1E92  2EA3               	goto	l3178
  5973  1E93                     u5210:	
  5974  1E93                     l3176:	
  5975  1E93  0970               	comf	___xxtofl@val,w
  5976  1E94  00FA               	movwf	___xxtofl@arg
  5977  1E95  0971               	comf	___xxtofl@val+1,w
  5978  1E96  00FB               	movwf	___xxtofl@arg+1
  5979  1E97  0972               	comf	___xxtofl@val+2,w
  5980  1E98  00FC               	movwf	___xxtofl@arg+2
  5981  1E99  0973               	comf	___xxtofl@val+3,w
  5982  1E9A  00FD               	movwf	___xxtofl@arg+3
  5983  1E9B  0AFA               	incf	___xxtofl@arg,f
  5984  1E9C  1903               	skipnz
  5985  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  5986  1E9E  1903               	skipnz
  5987  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  5988  1EA0  1903               	skipnz
  5989  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  5990  1EA2  2EAB               	goto	l776
  5991  1EA3                     l3178:	
  5992  1EA3  0873               	movf	___xxtofl@val+3,w
  5993  1EA4  00FD               	movwf	___xxtofl@arg+3
  5994  1EA5  0872               	movf	___xxtofl@val+2,w
  5995  1EA6  00FC               	movwf	___xxtofl@arg+2
  5996  1EA7  0871               	movf	___xxtofl@val+1,w
  5997  1EA8  00FB               	movwf	___xxtofl@arg+1
  5998  1EA9  0870               	movf	___xxtofl@val,w
  5999  1EAA  00FA               	movwf	___xxtofl@arg
  6000  1EAB                     l776:	
  6001  1EAB  0873               	movf	___xxtofl@val+3,w
  6002  1EAC  0472               	iorwf	___xxtofl@val+2,w
  6003  1EAD  0471               	iorwf	___xxtofl@val+1,w
  6004  1EAE  0470               	iorwf	___xxtofl@val,w
  6005  1EAF  1D03               	skipz
  6006  1EB0  2EB2               	goto	u5221
  6007  1EB1  2EB3               	goto	u5220
  6008  1EB2                     u5221:	
  6009  1EB2  2EBC               	goto	l3184
  6010  1EB3                     u5220:	
  6011  1EB3                     l3180:	
  6012  1EB3  3000               	movlw	0
  6013  1EB4  00F3               	movwf	?___xxtofl+3
  6014  1EB5  3000               	movlw	0
  6015  1EB6  00F2               	movwf	?___xxtofl+2
  6016  1EB7  3000               	movlw	0
  6017  1EB8  00F1               	movwf	?___xxtofl+1
  6018  1EB9  3000               	movlw	0
  6019  1EBA  00F0               	movwf	?___xxtofl
  6020  1EBB  2F42               	goto	l778
  6021  1EBC                     l3184:	
  6022  1EBC  3096               	movlw	150
  6023  1EBD  00F4               	movwf	??___xxtofl
  6024  1EBE  0874               	movf	??___xxtofl,w
  6025  1EBF  00F9               	movwf	___xxtofl@exp
  6026  1EC0  2ECE               	goto	l3188
  6027  1EC1                     l3186:	
  6028  1EC1  3001               	movlw	1
  6029  1EC2  00F4               	movwf	??___xxtofl
  6030  1EC3  0874               	movf	??___xxtofl,w
  6031  1EC4  07F9               	addwf	___xxtofl@exp,f
  6032  1EC5  3001               	movlw	1
  6033  1EC6                     u5235:	
  6034  1EC6  1003               	clrc
  6035  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  6036  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  6037  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  6038  1ECA  0CFA               	rrf	___xxtofl@arg,f
  6039  1ECB  3EFF               	addlw	-1
  6040  1ECC  1D03               	skipz
  6041  1ECD  2EC6               	goto	u5235
  6042  1ECE                     l3188:	
  6043  1ECE  30FE               	movlw	254
  6044  1ECF  057D               	andwf	___xxtofl@arg+3,w
  6045  1ED0  1D03               	btfss	3,2
  6046  1ED1  2ED3               	goto	u5241
  6047  1ED2  2ED4               	goto	u5240
  6048  1ED3                     u5241:	
  6049  1ED3  2EC1               	goto	l3186
  6050  1ED4                     u5240:	
  6051  1ED4  2EF0               	goto	l782
  6052  1ED5                     l3190:	
  6053  1ED5  3001               	movlw	1
  6054  1ED6  00F4               	movwf	??___xxtofl
  6055  1ED7  0874               	movf	??___xxtofl,w
  6056  1ED8  07F9               	addwf	___xxtofl@exp,f
  6057  1ED9                     l3192:	
  6058  1ED9  3001               	movlw	1
  6059  1EDA  07FA               	addwf	___xxtofl@arg,f
  6060  1EDB  3000               	movlw	0
  6061  1EDC  1803               	skipnc
  6062  1EDD  3001               	movlw	1
  6063  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  6064  1EDF  3000               	movlw	0
  6065  1EE0  1803               	skipnc
  6066  1EE1  3001               	movlw	1
  6067  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  6068  1EE3  3000               	movlw	0
  6069  1EE4  1803               	skipnc
  6070  1EE5  3001               	movlw	1
  6071  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  6072  1EE7                     l3194:	
  6073  1EE7  3001               	movlw	1
  6074  1EE8                     u5255:	
  6075  1EE8  1003               	clrc
  6076  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  6077  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  6078  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  6079  1EEC  0CFA               	rrf	___xxtofl@arg,f
  6080  1EED  3EFF               	addlw	-1
  6081  1EEE  1D03               	skipz
  6082  1EEF  2EE8               	goto	u5255
  6083  1EF0                     l782:	
  6084  1EF0  30FF               	movlw	255
  6085  1EF1  057D               	andwf	___xxtofl@arg+3,w
  6086  1EF2  1D03               	btfss	3,2
  6087  1EF3  2EF5               	goto	u5261
  6088  1EF4  2EF6               	goto	u5260
  6089  1EF5                     u5261:	
  6090  1EF5  2ED5               	goto	l3190
  6091  1EF6                     u5260:	
  6092  1EF6  2F02               	goto	l3198
  6093  1EF7                     l3196:	
  6094  1EF7  3001               	movlw	1
  6095  1EF8  02F9               	subwf	___xxtofl@exp,f
  6096  1EF9  3001               	movlw	1
  6097  1EFA  00F4               	movwf	??___xxtofl
  6098  1EFB                     u5275:	
  6099  1EFB  1003               	clrc
  6100  1EFC  0DFA               	rlf	___xxtofl@arg,f
  6101  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  6102  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  6103  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  6104  1F00  0BF4               	decfsz	??___xxtofl,f
  6105  1F01  2EFB               	goto	u5275
  6106  1F02                     l3198:	
  6107  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  6108  1F03  2F05               	goto	u5281
  6109  1F04  2F06               	goto	u5280
  6110  1F05                     u5281:	
  6111  1F05  2F0C               	goto	l789
  6112  1F06                     u5280:	
  6113  1F06                     l3200:	
  6114  1F06  3002               	movlw	2
  6115  1F07  0279               	subwf	___xxtofl@exp,w
  6116  1F08  1803               	skipnc
  6117  1F09  2F0B               	goto	u5291
  6118  1F0A  2F0C               	goto	u5290
  6119  1F0B                     u5291:	
  6120  1F0B  2EF7               	goto	l3196
  6121  1F0C                     u5290:	
  6122  1F0C                     l789:	
  6123  1F0C  1879               	btfsc	___xxtofl@exp,0
  6124  1F0D  2F0F               	goto	u5301
  6125  1F0E  2F10               	goto	u5300
  6126  1F0F                     u5301:	
  6127  1F0F  2F18               	goto	l790
  6128  1F10                     u5300:	
  6129  1F10                     l3202:	
  6130  1F10  30FF               	movlw	255
  6131  1F11  05FA               	andwf	___xxtofl@arg,f
  6132  1F12  30FF               	movlw	255
  6133  1F13  05FB               	andwf	___xxtofl@arg+1,f
  6134  1F14  307F               	movlw	127
  6135  1F15  05FC               	andwf	___xxtofl@arg+2,f
  6136  1F16  30FF               	movlw	255
  6137  1F17  05FD               	andwf	___xxtofl@arg+3,f
  6138  1F18                     l790:	
  6139  1F18  1003               	clrc
  6140  1F19  0CF9               	rrf	___xxtofl@exp,f
  6141  1F1A                     l3204:	
  6142  1F1A  0879               	movf	___xxtofl@exp,w
  6143  1F1B  00F4               	movwf	??___xxtofl
  6144  1F1C  01F5               	clrf	??___xxtofl+1
  6145  1F1D  01F6               	clrf	??___xxtofl+2
  6146  1F1E  01F7               	clrf	??___xxtofl+3
  6147  1F1F  3018               	movlw	24
  6148  1F20                     u5315:	
  6149  1F20  1003               	clrc
  6150  1F21  0DF4               	rlf	??___xxtofl,f
  6151  1F22  0DF5               	rlf	??___xxtofl+1,f
  6152  1F23  0DF6               	rlf	??___xxtofl+2,f
  6153  1F24  0DF7               	rlf	??___xxtofl+3,f
  6154  1F25                     u5310:	
  6155  1F25  3EFF               	addlw	-1
  6156  1F26  1D03               	skipz
  6157  1F27  2F20               	goto	u5315
  6158  1F28  0874               	movf	??___xxtofl,w
  6159  1F29  04FA               	iorwf	___xxtofl@arg,f
  6160  1F2A  0875               	movf	??___xxtofl+1,w
  6161  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  6162  1F2C  0876               	movf	??___xxtofl+2,w
  6163  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  6164  1F2E  0877               	movf	??___xxtofl+3,w
  6165  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  6166  1F30                     l3206:	
  6167  1F30  0878               	movf	___xxtofl@sign,w
  6168  1F31  1903               	btfsc	3,2
  6169  1F32  2F34               	goto	u5321
  6170  1F33  2F35               	goto	u5320
  6171  1F34                     u5321:	
  6172  1F34  2F3A               	goto	l3212
  6173  1F35                     u5320:	
  6174  1F35                     l3208:	
  6175  1F35  1FF3               	btfss	___xxtofl@val+3,7
  6176  1F36  2F38               	goto	u5331
  6177  1F37  2F39               	goto	u5330
  6178  1F38                     u5331:	
  6179  1F38  2F3A               	goto	l3212
  6180  1F39                     u5330:	
  6181  1F39                     l3210:	
  6182  1F39  17FD               	bsf	___xxtofl@arg+3,7
  6183  1F3A                     l3212:	
  6184  1F3A  087D               	movf	___xxtofl@arg+3,w
  6185  1F3B  00F3               	movwf	?___xxtofl+3
  6186  1F3C  087C               	movf	___xxtofl@arg+2,w
  6187  1F3D  00F2               	movwf	?___xxtofl+2
  6188  1F3E  087B               	movf	___xxtofl@arg+1,w
  6189  1F3F  00F1               	movwf	?___xxtofl+1
  6190  1F40  087A               	movf	___xxtofl@arg,w
  6191  1F41  00F0               	movwf	?___xxtofl
  6192  1F42                     l778:	
  6193  1F42  0008               	return
  6194  1F43                     __end_of___xxtofl:	
  6195                           
  6196                           	psect	text15
  6197  1B21                     __ptext15:	
  6198 ;; *************** function ___wmul *****************
  6199 ;; Defined at:
  6200 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  multiplier      2    0[COMMON] unsigned int 
  6203 ;;  multiplicand    2    2[COMMON] unsigned int 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  product         2    4[COMMON] unsigned int 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  2    0[COMMON] unsigned int 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6215 ;;      Params:         4       0       0       0       0
  6216 ;;      Locals:         2       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0
  6218 ;;      Totals:         6       0       0       0       0
  6219 ;;Total ram usage:        6 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_sprintf
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           
  6229                           ;psect for function ___wmul
  6230  1B21                     ___wmul:	
  6231  1B21                     l3032:	
  6232                           ;incstack = 0
  6233                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6234                           
  6235  1B21  01F4               	clrf	___wmul@product
  6236  1B22  01F5               	clrf	___wmul@product+1
  6237  1B23                     l3034:	
  6238  1B23  1C70               	btfss	___wmul@multiplier,0
  6239  1B24  2B26               	goto	u4821
  6240  1B25  2B27               	goto	u4820
  6241  1B26                     u4821:	
  6242  1B26  2B2D               	goto	l315
  6243  1B27                     u4820:	
  6244  1B27                     l3036:	
  6245  1B27  0872               	movf	___wmul@multiplicand,w
  6246  1B28  07F4               	addwf	___wmul@product,f
  6247  1B29  1803               	skipnc
  6248  1B2A  0AF5               	incf	___wmul@product+1,f
  6249  1B2B  0873               	movf	___wmul@multiplicand+1,w
  6250  1B2C  07F5               	addwf	___wmul@product+1,f
  6251  1B2D                     l315:	
  6252  1B2D  3001               	movlw	1
  6253  1B2E                     u4835:	
  6254  1B2E  1003               	clrc
  6255  1B2F  0DF2               	rlf	___wmul@multiplicand,f
  6256  1B30  0DF3               	rlf	___wmul@multiplicand+1,f
  6257  1B31  3EFF               	addlw	-1
  6258  1B32  1D03               	skipz
  6259  1B33  2B2E               	goto	u4835
  6260  1B34                     l3038:	
  6261  1B34  3001               	movlw	1
  6262  1B35                     u4845:	
  6263  1B35  1003               	clrc
  6264  1B36  0CF1               	rrf	___wmul@multiplier+1,f
  6265  1B37  0CF0               	rrf	___wmul@multiplier,f
  6266  1B38  3EFF               	addlw	-1
  6267  1B39  1D03               	skipz
  6268  1B3A  2B35               	goto	u4845
  6269  1B3B                     l3040:	
  6270  1B3B  0870               	movf	___wmul@multiplier,w
  6271  1B3C  0471               	iorwf	___wmul@multiplier+1,w
  6272  1B3D  1D03               	btfss	3,2
  6273  1B3E  2B40               	goto	u4851
  6274  1B3F  2B41               	goto	u4850
  6275  1B40                     u4851:	
  6276  1B40  2B23               	goto	l3034
  6277  1B41                     u4850:	
  6278  1B41                     l3042:	
  6279  1B41  0875               	movf	___wmul@product+1,w
  6280  1B42  00F1               	movwf	?___wmul+1
  6281  1B43  0874               	movf	___wmul@product,w
  6282  1B44  00F0               	movwf	?___wmul
  6283  1B45                     l317:	
  6284  1B45  0008               	return
  6285  1B46                     __end_of___wmul:	
  6286                           
  6287                           	psect	text16
  6288  1CC4                     __ptext16:	
  6289 ;; *************** function ___llmod *****************
  6290 ;; Defined at:
  6291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  divisor         4    0[COMMON] unsigned long 
  6294 ;;  dividend        4    4[COMMON] unsigned long 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  counter         1    9[COMMON] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  4    0[COMMON] unsigned long 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6306 ;;      Params:         8       0       0       0       0
  6307 ;;      Locals:         1       0       0       0       0
  6308 ;;      Temps:          1       0       0       0       0
  6309 ;;      Totals:        10       0       0       0       0
  6310 ;;Total ram usage:       10 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_sprintf
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           
  6320                           ;psect for function ___llmod
  6321  1CC4                     ___llmod:	
  6322  1CC4                     l3146:	
  6323                           ;incstack = 0
  6324                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6325                           
  6326  1CC4  0873               	movf	___llmod@divisor+3,w
  6327  1CC5  0472               	iorwf	___llmod@divisor+2,w
  6328  1CC6  0471               	iorwf	___llmod@divisor+1,w
  6329  1CC7  0470               	iorwf	___llmod@divisor,w
  6330  1CC8  1903               	skipnz
  6331  1CC9  2CCB               	goto	u5141
  6332  1CCA  2CCC               	goto	u5140
  6333  1CCB                     u5141:	
  6334  1CCB  2D0F               	goto	l3162
  6335  1CCC                     u5140:	
  6336  1CCC                     l3148:	
  6337  1CCC  01F9               	clrf	___llmod@counter
  6338  1CCD  0AF9               	incf	___llmod@counter,f
  6339  1CCE  2CDC               	goto	l3152
  6340  1CCF                     l3150:	
  6341  1CCF  3001               	movlw	1
  6342  1CD0  00F8               	movwf	??___llmod
  6343  1CD1                     u5155:	
  6344  1CD1  1003               	clrc
  6345  1CD2  0DF0               	rlf	___llmod@divisor,f
  6346  1CD3  0DF1               	rlf	___llmod@divisor+1,f
  6347  1CD4  0DF2               	rlf	___llmod@divisor+2,f
  6348  1CD5  0DF3               	rlf	___llmod@divisor+3,f
  6349  1CD6  0BF8               	decfsz	??___llmod,f
  6350  1CD7  2CD1               	goto	u5155
  6351  1CD8  3001               	movlw	1
  6352  1CD9  00F8               	movwf	??___llmod
  6353  1CDA  0878               	movf	??___llmod,w
  6354  1CDB  07F9               	addwf	___llmod@counter,f
  6355  1CDC                     l3152:	
  6356  1CDC  1FF3               	btfss	___llmod@divisor+3,7
  6357  1CDD  2CDF               	goto	u5161
  6358  1CDE  2CE0               	goto	u5160
  6359  1CDF                     u5161:	
  6360  1CDF  2CCF               	goto	l3150
  6361  1CE0                     u5160:	
  6362  1CE0                     l3154:	
  6363  1CE0  0873               	movf	___llmod@divisor+3,w
  6364  1CE1  0277               	subwf	___llmod@dividend+3,w
  6365  1CE2  1D03               	skipz
  6366  1CE3  2CEE               	goto	u5175
  6367  1CE4  0872               	movf	___llmod@divisor+2,w
  6368  1CE5  0276               	subwf	___llmod@dividend+2,w
  6369  1CE6  1D03               	skipz
  6370  1CE7  2CEE               	goto	u5175
  6371  1CE8  0871               	movf	___llmod@divisor+1,w
  6372  1CE9  0275               	subwf	___llmod@dividend+1,w
  6373  1CEA  1D03               	skipz
  6374  1CEB  2CEE               	goto	u5175
  6375  1CEC  0870               	movf	___llmod@divisor,w
  6376  1CED  0274               	subwf	___llmod@dividend,w
  6377  1CEE                     u5175:	
  6378  1CEE  1C03               	skipc
  6379  1CEF  2CF1               	goto	u5171
  6380  1CF0  2CF2               	goto	u5170
  6381  1CF1                     u5171:	
  6382  1CF1  2D00               	goto	l3158
  6383  1CF2                     u5170:	
  6384  1CF2                     l3156:	
  6385  1CF2  0870               	movf	___llmod@divisor,w
  6386  1CF3  02F4               	subwf	___llmod@dividend,f
  6387  1CF4  0871               	movf	___llmod@divisor+1,w
  6388  1CF5  1C03               	skipc
  6389  1CF6  0F71               	incfsz	___llmod@divisor+1,w
  6390  1CF7  02F5               	subwf	___llmod@dividend+1,f
  6391  1CF8  0872               	movf	___llmod@divisor+2,w
  6392  1CF9  1C03               	skipc
  6393  1CFA  0F72               	incfsz	___llmod@divisor+2,w
  6394  1CFB  02F6               	subwf	___llmod@dividend+2,f
  6395  1CFC  0873               	movf	___llmod@divisor+3,w
  6396  1CFD  1C03               	skipc
  6397  1CFE  0F73               	incfsz	___llmod@divisor+3,w
  6398  1CFF  02F7               	subwf	___llmod@dividend+3,f
  6399  1D00                     l3158:	
  6400  1D00  3001               	movlw	1
  6401  1D01                     u5185:	
  6402  1D01  1003               	clrc
  6403  1D02  0CF3               	rrf	___llmod@divisor+3,f
  6404  1D03  0CF2               	rrf	___llmod@divisor+2,f
  6405  1D04  0CF1               	rrf	___llmod@divisor+1,f
  6406  1D05  0CF0               	rrf	___llmod@divisor,f
  6407  1D06  3EFF               	addlw	-1
  6408  1D07  1D03               	skipz
  6409  1D08  2D01               	goto	u5185
  6410  1D09                     l3160:	
  6411  1D09  3001               	movlw	1
  6412  1D0A  02F9               	subwf	___llmod@counter,f
  6413  1D0B  1D03               	btfss	3,2
  6414  1D0C  2D0E               	goto	u5191
  6415  1D0D  2D0F               	goto	u5190
  6416  1D0E                     u5191:	
  6417  1D0E  2CE0               	goto	l3154
  6418  1D0F                     u5190:	
  6419  1D0F                     l3162:	
  6420  1D0F  0877               	movf	___llmod@dividend+3,w
  6421  1D10  00F3               	movwf	?___llmod+3
  6422  1D11  0876               	movf	___llmod@dividend+2,w
  6423  1D12  00F2               	movwf	?___llmod+2
  6424  1D13  0875               	movf	___llmod@dividend+1,w
  6425  1D14  00F1               	movwf	?___llmod+1
  6426  1D15  0874               	movf	___llmod@dividend,w
  6427  1D16  00F0               	movwf	?___llmod
  6428  1D17                     l571:	
  6429  1D17  0008               	return
  6430  1D18                     __end_of___llmod:	
  6431                           
  6432                           	psect	text17
  6433  1D18                     __ptext17:	
  6434 ;; *************** function ___lldiv *****************
  6435 ;; Defined at:
  6436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  divisor         4    0[COMMON] unsigned long 
  6439 ;;  dividend        4    4[COMMON] unsigned long 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  quotient        4    9[COMMON] unsigned long 
  6442 ;;  counter         1   13[COMMON] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  4    0[COMMON] unsigned long 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6452 ;;      Params:         8       0       0       0       0
  6453 ;;      Locals:         5       0       0       0       0
  6454 ;;      Temps:          1       0       0       0       0
  6455 ;;      Totals:        14       0       0       0       0
  6456 ;;Total ram usage:       14 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_sprintf
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function ___lldiv
  6467  1D18                     ___lldiv:	
  6468  1D18                     l3046:	
  6469                           ;incstack = 0
  6470                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6471                           
  6472  1D18  3000               	movlw	0
  6473  1D19  00FC               	movwf	___lldiv@quotient+3
  6474  1D1A  3000               	movlw	0
  6475  1D1B  00FB               	movwf	___lldiv@quotient+2
  6476  1D1C  3000               	movlw	0
  6477  1D1D  00FA               	movwf	___lldiv@quotient+1
  6478  1D1E  3000               	movlw	0
  6479  1D1F  00F9               	movwf	___lldiv@quotient
  6480  1D20  0873               	movf	___lldiv@divisor+3,w
  6481  1D21  0472               	iorwf	___lldiv@divisor+2,w
  6482  1D22  0471               	iorwf	___lldiv@divisor+1,w
  6483  1D23  0470               	iorwf	___lldiv@divisor,w
  6484  1D24  1903               	skipnz
  6485  1D25  2D27               	goto	u4861
  6486  1D26  2D28               	goto	u4860
  6487  1D27                     u4861:	
  6488  1D27  2D75               	goto	l3066
  6489  1D28                     u4860:	
  6490  1D28                     l3048:	
  6491  1D28  01FD               	clrf	___lldiv@counter
  6492  1D29  0AFD               	incf	___lldiv@counter,f
  6493  1D2A  2D38               	goto	l3052
  6494  1D2B                     l3050:	
  6495  1D2B  3001               	movlw	1
  6496  1D2C  00F8               	movwf	??___lldiv
  6497  1D2D                     u4875:	
  6498  1D2D  1003               	clrc
  6499  1D2E  0DF0               	rlf	___lldiv@divisor,f
  6500  1D2F  0DF1               	rlf	___lldiv@divisor+1,f
  6501  1D30  0DF2               	rlf	___lldiv@divisor+2,f
  6502  1D31  0DF3               	rlf	___lldiv@divisor+3,f
  6503  1D32  0BF8               	decfsz	??___lldiv,f
  6504  1D33  2D2D               	goto	u4875
  6505  1D34  3001               	movlw	1
  6506  1D35  00F8               	movwf	??___lldiv
  6507  1D36  0878               	movf	??___lldiv,w
  6508  1D37  07FD               	addwf	___lldiv@counter,f
  6509  1D38                     l3052:	
  6510  1D38  1FF3               	btfss	___lldiv@divisor+3,7
  6511  1D39  2D3B               	goto	u4881
  6512  1D3A  2D3C               	goto	u4880
  6513  1D3B                     u4881:	
  6514  1D3B  2D2B               	goto	l3050
  6515  1D3C                     u4880:	
  6516  1D3C                     l3054:	
  6517  1D3C  3001               	movlw	1
  6518  1D3D  00F8               	movwf	??___lldiv
  6519  1D3E                     u4895:	
  6520  1D3E  1003               	clrc
  6521  1D3F  0DF9               	rlf	___lldiv@quotient,f
  6522  1D40  0DFA               	rlf	___lldiv@quotient+1,f
  6523  1D41  0DFB               	rlf	___lldiv@quotient+2,f
  6524  1D42  0DFC               	rlf	___lldiv@quotient+3,f
  6525  1D43  0BF8               	decfsz	??___lldiv,f
  6526  1D44  2D3E               	goto	u4895
  6527  1D45                     l3056:	
  6528  1D45  0873               	movf	___lldiv@divisor+3,w
  6529  1D46  0277               	subwf	___lldiv@dividend+3,w
  6530  1D47  1D03               	skipz
  6531  1D48  2D53               	goto	u4905
  6532  1D49  0872               	movf	___lldiv@divisor+2,w
  6533  1D4A  0276               	subwf	___lldiv@dividend+2,w
  6534  1D4B  1D03               	skipz
  6535  1D4C  2D53               	goto	u4905
  6536  1D4D  0871               	movf	___lldiv@divisor+1,w
  6537  1D4E  0275               	subwf	___lldiv@dividend+1,w
  6538  1D4F  1D03               	skipz
  6539  1D50  2D53               	goto	u4905
  6540  1D51  0870               	movf	___lldiv@divisor,w
  6541  1D52  0274               	subwf	___lldiv@dividend,w
  6542  1D53                     u4905:	
  6543  1D53  1C03               	skipc
  6544  1D54  2D56               	goto	u4901
  6545  1D55  2D57               	goto	u4900
  6546  1D56                     u4901:	
  6547  1D56  2D66               	goto	l3062
  6548  1D57                     u4900:	
  6549  1D57                     l3058:	
  6550  1D57  0870               	movf	___lldiv@divisor,w
  6551  1D58  02F4               	subwf	___lldiv@dividend,f
  6552  1D59  0871               	movf	___lldiv@divisor+1,w
  6553  1D5A  1C03               	skipc
  6554  1D5B  0F71               	incfsz	___lldiv@divisor+1,w
  6555  1D5C  02F5               	subwf	___lldiv@dividend+1,f
  6556  1D5D  0872               	movf	___lldiv@divisor+2,w
  6557  1D5E  1C03               	skipc
  6558  1D5F  0F72               	incfsz	___lldiv@divisor+2,w
  6559  1D60  02F6               	subwf	___lldiv@dividend+2,f
  6560  1D61  0873               	movf	___lldiv@divisor+3,w
  6561  1D62  1C03               	skipc
  6562  1D63  0F73               	incfsz	___lldiv@divisor+3,w
  6563  1D64  02F7               	subwf	___lldiv@dividend+3,f
  6564  1D65                     l3060:	
  6565  1D65  1479               	bsf	___lldiv@quotient,0
  6566  1D66                     l3062:	
  6567  1D66  3001               	movlw	1
  6568  1D67                     u4915:	
  6569  1D67  1003               	clrc
  6570  1D68  0CF3               	rrf	___lldiv@divisor+3,f
  6571  1D69  0CF2               	rrf	___lldiv@divisor+2,f
  6572  1D6A  0CF1               	rrf	___lldiv@divisor+1,f
  6573  1D6B  0CF0               	rrf	___lldiv@divisor,f
  6574  1D6C  3EFF               	addlw	-1
  6575  1D6D  1D03               	skipz
  6576  1D6E  2D67               	goto	u4915
  6577  1D6F                     l3064:	
  6578  1D6F  3001               	movlw	1
  6579  1D70  02FD               	subwf	___lldiv@counter,f
  6580  1D71  1D03               	btfss	3,2
  6581  1D72  2D74               	goto	u4921
  6582  1D73  2D75               	goto	u4920
  6583  1D74                     u4921:	
  6584  1D74  2D3C               	goto	l3054
  6585  1D75                     u4920:	
  6586  1D75                     l3066:	
  6587  1D75  087C               	movf	___lldiv@quotient+3,w
  6588  1D76  00F3               	movwf	?___lldiv+3
  6589  1D77  087B               	movf	___lldiv@quotient+2,w
  6590  1D78  00F2               	movwf	?___lldiv+2
  6591  1D79  087A               	movf	___lldiv@quotient+1,w
  6592  1D7A  00F1               	movwf	?___lldiv+1
  6593  1D7B  0879               	movf	___lldiv@quotient,w
  6594  1D7C  00F0               	movwf	?___lldiv
  6595  1D7D                     l351:	
  6596  1D7D  0008               	return
  6597  1D7E                     __end_of___lldiv:	
  6598                           
  6599                           	psect	text18
  6600  1009                     __ptext18:	
  6601 ;; *************** function ___fltol *****************
  6602 ;; Defined at:
  6603 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  f1              4   49[BANK0 ] unsigned long 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  exp1            1   59[BANK0 ] unsigned char 
  6608 ;;  sign1           1   58[BANK0 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  4   49[BANK0 ] long 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6618 ;;      Params:         0       4       0       0       0
  6619 ;;      Locals:         0       2       0       0       0
  6620 ;;      Temps:          0       5       0       0       0
  6621 ;;      Totals:         0      11       0       0       0
  6622 ;;Total ram usage:       11 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_sprintf
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function ___fltol
  6633  1009                     ___fltol:	
  6634  1009                     l3110:	
  6635                           ;incstack = 0
  6636                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6637                           
  6638  1009  1003               	clrc
  6639  100A  1283               	bcf	3,5	;RP0=0, select bank0
  6640  100B  1303               	bcf	3,6	;RP1=0, select bank0
  6641  100C  0D53               	rlf	___fltol@f1+2,w
  6642  100D  0D54               	rlf	___fltol@f1+3,w
  6643  100E  00D5               	movwf	??___fltol
  6644  100F  0855               	movf	??___fltol,w
  6645  1010  00DB               	movwf	___fltol@exp1
  6646  1011  085B               	movf	___fltol@exp1,w
  6647  1012  1D03               	btfss	3,2
  6648  1013  2815               	goto	u5041
  6649  1014  2816               	goto	u5040
  6650  1015                     u5041:	
  6651  1015  281F               	goto	l3116
  6652  1016                     u5040:	
  6653  1016                     l3112:	
  6654  1016  3000               	movlw	0
  6655  1017  00D4               	movwf	?___fltol+3
  6656  1018  3000               	movlw	0
  6657  1019  00D3               	movwf	?___fltol+2
  6658  101A  3000               	movlw	0
  6659  101B  00D2               	movwf	?___fltol+1
  6660  101C  3000               	movlw	0
  6661  101D  00D1               	movwf	?___fltol
  6662  101E  2884               	goto	l518
  6663  101F                     l3116:	
  6664  101F  0851               	movf	___fltol@f1,w
  6665  1020  00D5               	movwf	??___fltol
  6666  1021  0852               	movf	___fltol@f1+1,w
  6667  1022  00D6               	movwf	??___fltol+1
  6668  1023  0853               	movf	___fltol@f1+2,w
  6669  1024  00D7               	movwf	??___fltol+2
  6670  1025  0854               	movf	___fltol@f1+3,w
  6671  1026  00D8               	movwf	??___fltol+3
  6672  1027  301F               	movlw	31
  6673  1028                     u5055:	
  6674  1028  1003               	clrc
  6675  1029  0CD8               	rrf	??___fltol+3,f
  6676  102A  0CD7               	rrf	??___fltol+2,f
  6677  102B  0CD6               	rrf	??___fltol+1,f
  6678  102C  0CD5               	rrf	??___fltol,f
  6679  102D                     u5050:	
  6680  102D  3EFF               	addlw	-1
  6681  102E  1D03               	skipz
  6682  102F  2828               	goto	u5055
  6683  1030  0855               	movf	??___fltol,w
  6684  1031  00D9               	movwf	??___fltol+4
  6685  1032  0859               	movf	??___fltol+4,w
  6686  1033  00DA               	movwf	___fltol@sign1
  6687  1034                     l3118:	
  6688  1034  17D3               	bsf	___fltol@f1+2,7
  6689  1035                     l3120:	
  6690  1035  30FF               	movlw	255
  6691  1036  05D1               	andwf	___fltol@f1,f
  6692  1037  30FF               	movlw	255
  6693  1038  05D2               	andwf	___fltol@f1+1,f
  6694  1039  30FF               	movlw	255
  6695  103A  05D3               	andwf	___fltol@f1+2,f
  6696  103B  3000               	movlw	0
  6697  103C  05D4               	andwf	___fltol@f1+3,f
  6698  103D                     l3122:	
  6699  103D  3096               	movlw	150
  6700  103E  02DB               	subwf	___fltol@exp1,f
  6701  103F                     l3124:	
  6702  103F  1FDB               	btfss	___fltol@exp1,7
  6703  1040  2842               	goto	u5061
  6704  1041  2843               	goto	u5060
  6705  1042                     u5061:	
  6706  1042  285D               	goto	l3134
  6707  1043                     u5060:	
  6708  1043                     l3126:	
  6709  1043  085B               	movf	___fltol@exp1,w
  6710  1044  3A80               	xorlw	128
  6711  1045  3E97               	addlw	151
  6712  1046  1803               	skipnc
  6713  1047  2849               	goto	u5071
  6714  1048  284A               	goto	u5070
  6715  1049                     u5071:	
  6716  1049  284B               	goto	l3132
  6717  104A                     u5070:	
  6718  104A  2816               	goto	l3112
  6719  104B                     l3132:	
  6720  104B  3001               	movlw	1
  6721  104C                     u5085:	
  6722  104C  1003               	clrc
  6723  104D  0CD4               	rrf	___fltol@f1+3,f
  6724  104E  0CD3               	rrf	___fltol@f1+2,f
  6725  104F  0CD2               	rrf	___fltol@f1+1,f
  6726  1050  0CD1               	rrf	___fltol@f1,f
  6727  1051  3EFF               	addlw	-1
  6728  1052  1D03               	skipz
  6729  1053  284C               	goto	u5085
  6730  1054  3001               	movlw	1
  6731  1055  00D5               	movwf	??___fltol
  6732  1056  0855               	movf	??___fltol,w
  6733  1057  07DB               	addwf	___fltol@exp1,f
  6734  1058  1D03               	btfss	3,2
  6735  1059  285B               	goto	u5091
  6736  105A  285C               	goto	u5090
  6737  105B                     u5091:	
  6738  105B  284B               	goto	l3132
  6739  105C                     u5090:	
  6740  105C  2874               	goto	l3142
  6741  105D                     l3134:	
  6742  105D  3020               	movlw	32
  6743  105E  025B               	subwf	___fltol@exp1,w
  6744  105F  1C03               	skipc
  6745  1060  2862               	goto	u5101
  6746  1061  2863               	goto	u5100
  6747  1062                     u5101:	
  6748  1062  286F               	goto	l525
  6749  1063                     u5100:	
  6750  1063  2816               	goto	l3112
  6751  1064                     l3140:	
  6752  1064  3001               	movlw	1
  6753  1065  00D5               	movwf	??___fltol
  6754  1066                     u5115:	
  6755  1066  1003               	clrc
  6756  1067  0DD1               	rlf	___fltol@f1,f
  6757  1068  0DD2               	rlf	___fltol@f1+1,f
  6758  1069  0DD3               	rlf	___fltol@f1+2,f
  6759  106A  0DD4               	rlf	___fltol@f1+3,f
  6760  106B  0BD5               	decfsz	??___fltol,f
  6761  106C  2866               	goto	u5115
  6762  106D  3001               	movlw	1
  6763  106E  02DB               	subwf	___fltol@exp1,f
  6764  106F                     l525:	
  6765  106F  085B               	movf	___fltol@exp1,w
  6766  1070  1D03               	btfss	3,2
  6767  1071  2873               	goto	u5121
  6768  1072  2874               	goto	u5120
  6769  1073                     u5121:	
  6770  1073  2864               	goto	l3140
  6771  1074                     u5120:	
  6772  1074                     l3142:	
  6773  1074  085A               	movf	___fltol@sign1,w
  6774  1075  1903               	btfsc	3,2
  6775  1076  2878               	goto	u5131
  6776  1077  2879               	goto	u5130
  6777  1078                     u5131:	
  6778  1078  2884               	goto	l528
  6779  1079                     u5130:	
  6780  1079                     l3144:	
  6781  1079  09D1               	comf	___fltol@f1,f
  6782  107A  09D2               	comf	___fltol@f1+1,f
  6783  107B  09D3               	comf	___fltol@f1+2,f
  6784  107C  09D4               	comf	___fltol@f1+3,f
  6785  107D  0AD1               	incf	___fltol@f1,f
  6786  107E  1903               	skipnz
  6787  107F  0AD2               	incf	___fltol@f1+1,f
  6788  1080  1903               	skipnz
  6789  1081  0AD3               	incf	___fltol@f1+2,f
  6790  1082  1903               	skipnz
  6791  1083  0AD4               	incf	___fltol@f1+3,f
  6792  1084                     l528:	
  6793  1084                     l518:	
  6794  1084  0008               	return
  6795  1085                     __end_of___fltol:	
  6796                           
  6797                           	psect	text19
  6798  1AFD                     __ptext19:	
  6799 ;; *************** function ___flsub *****************
  6800 ;; Defined at:
  6801 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  a               4   70[BANK0 ] long 
  6804 ;;  b               4   74[BANK0 ] long 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  4   70[BANK0 ] long 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6816 ;;      Params:         0       8       0       0       0
  6817 ;;      Locals:         0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0
  6819 ;;      Totals:         0       8       0       0       0
  6820 ;;Total ram usage:        8 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    1
  6823 ;; This function calls:
  6824 ;;		___fladd
  6825 ;; This function is called by:
  6826 ;;		_sprintf
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function ___flsub
  6832  1AFD                     ___flsub:	
  6833  1AFD                     l3166:	
  6834                           ;incstack = 0
  6835                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6836                           
  6837  1AFD  3080               	movlw	128
  6838  1AFE  1283               	bcf	3,5	;RP0=0, select bank0
  6839  1AFF  1303               	bcf	3,6	;RP1=0, select bank0
  6840  1B00  06E9               	xorwf	___flsub@a+3,f
  6841  1B01                     l3168:	
  6842  1B01  086D               	movf	___flsub@b+3,w
  6843  1B02  00D5               	movwf	___fladd@b+3
  6844  1B03  086C               	movf	___flsub@b+2,w
  6845  1B04  00D4               	movwf	___fladd@b+2
  6846  1B05  086B               	movf	___flsub@b+1,w
  6847  1B06  00D3               	movwf	___fladd@b+1
  6848  1B07  086A               	movf	___flsub@b,w
  6849  1B08  00D2               	movwf	___fladd@b
  6850  1B09  0869               	movf	___flsub@a+3,w
  6851  1B0A  00D9               	movwf	___fladd@a+3
  6852  1B0B  0868               	movf	___flsub@a+2,w
  6853  1B0C  00D8               	movwf	___fladd@a+2
  6854  1B0D  0867               	movf	___flsub@a+1,w
  6855  1B0E  00D7               	movwf	___fladd@a+1
  6856  1B0F  0866               	movf	___flsub@a,w
  6857  1B10  00D6               	movwf	___fladd@a
  6858  1B11  120A  118A  2021  160A  158A  	fcall	___fladd
  6859  1B16  1283               	bcf	3,5	;RP0=0, select bank0
  6860  1B17  1303               	bcf	3,6	;RP1=0, select bank0
  6861  1B18  0855               	movf	?___fladd+3,w
  6862  1B19  00E9               	movwf	?___flsub+3
  6863  1B1A  0854               	movf	?___fladd+2,w
  6864  1B1B  00E8               	movwf	?___flsub+2
  6865  1B1C  0853               	movf	?___fladd+1,w
  6866  1B1D  00E7               	movwf	?___flsub+1
  6867  1B1E  0852               	movf	?___fladd,w
  6868  1B1F  00E6               	movwf	?___flsub
  6869  1B20                     l688:	
  6870  1B20  0008               	return
  6871  1B21                     __end_of___flsub:	
  6872                           
  6873                           	psect	text20
  6874  0021                     __ptext20:	
  6875 ;; *************** function ___fladd *****************
  6876 ;; Defined at:
  6877 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  b               4   50[BANK0 ] long 
  6880 ;;  a               4   54[BANK0 ] long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  grs             1   69[BANK0 ] unsigned char 
  6883 ;;  bexp            1   68[BANK0 ] unsigned char 
  6884 ;;  aexp            1   67[BANK0 ] unsigned char 
  6885 ;;  signs           1   66[BANK0 ] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4   50[BANK0 ] unsigned char 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0, btemp+1
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6895 ;;      Params:         0       8       0       0       0
  6896 ;;      Locals:         0       4       0       0       0
  6897 ;;      Temps:          0       8       0       0       0
  6898 ;;      Totals:         0      20       0       0       0
  6899 ;;Total ram usage:       20 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_sprintf
  6905 ;;		___flsub
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function ___fladd
  6911  0021                     ___fladd:	
  6912  0021                     l2514:	
  6913                           ;incstack = 0
  6914                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6915                           
  6916  0021  1283               	bcf	3,5	;RP0=0, select bank0
  6917  0022  1303               	bcf	3,6	;RP1=0, select bank0
  6918  0023  0855               	movf	___fladd@b+3,w
  6919  0024  3980               	andlw	128
  6920  0025  00DA               	movwf	??___fladd
  6921  0026  085A               	movf	??___fladd,w
  6922  0027  00E2               	movwf	___fladd@signs
  6923  0028                     l2516:	
  6924  0028  0855               	movf	___fladd@b+3,w
  6925  0029  00DA               	movwf	??___fladd
  6926  002A  075A               	addwf	??___fladd,w
  6927  002B  00DB               	movwf	??___fladd+1
  6928  002C  085B               	movf	??___fladd+1,w
  6929  002D  00E4               	movwf	___fladd@bexp
  6930  002E                     l2518:	
  6931  002E  1FD4               	btfss	___fladd@b+2,7
  6932  002F  2831               	goto	u3461
  6933  0030  2832               	goto	u3460
  6934  0031                     u3461:	
  6935  0031  2833               	goto	l2522
  6936  0032                     u3460:	
  6937  0032                     l2520:	
  6938  0032  1464               	bsf	___fladd@bexp,0
  6939  0033                     l2522:	
  6940  0033  0864               	movf	___fladd@bexp,w
  6941  0034  1903               	btfsc	3,2
  6942  0035  2837               	goto	u3471
  6943  0036  2838               	goto	u3470
  6944  0037                     u3471:	
  6945  0037  2848               	goto	l2532
  6946  0038                     u3470:	
  6947  0038                     l2524:	
  6948  0038  0A64               	incf	___fladd@bexp,w
  6949  0039  1D03               	btfss	3,2
  6950  003A  283C               	goto	u3481
  6951  003B  283D               	goto	u3480
  6952  003C                     u3481:	
  6953  003C  2845               	goto	l2528
  6954  003D                     u3480:	
  6955  003D                     l2526:	
  6956  003D  3000               	movlw	0
  6957  003E  00D5               	movwf	___fladd@b+3
  6958  003F  3000               	movlw	0
  6959  0040  00D4               	movwf	___fladd@b+2
  6960  0041  3000               	movlw	0
  6961  0042  00D3               	movwf	___fladd@b+1
  6962  0043  3000               	movlw	0
  6963  0044  00D2               	movwf	___fladd@b
  6964  0045                     l2528:	
  6965  0045  17D4               	bsf	___fladd@b+2,7
  6966  0046                     l2530:	
  6967  0046  01D5               	clrf	___fladd@b+3
  6968  0047  2850               	goto	l2534
  6969  0048                     l2532:	
  6970  0048  3000               	movlw	0
  6971  0049  00D5               	movwf	___fladd@b+3
  6972  004A  3000               	movlw	0
  6973  004B  00D4               	movwf	___fladd@b+2
  6974  004C  3000               	movlw	0
  6975  004D  00D3               	movwf	___fladd@b+1
  6976  004E  3000               	movlw	0
  6977  004F  00D2               	movwf	___fladd@b
  6978  0050                     l2534:	
  6979  0050  0859               	movf	___fladd@a+3,w
  6980  0051  3980               	andlw	128
  6981  0052  00DA               	movwf	??___fladd
  6982  0053  085A               	movf	??___fladd,w
  6983  0054  00E3               	movwf	___fladd@aexp
  6984  0055                     l2536:	
  6985  0055  0863               	movf	___fladd@aexp,w
  6986  0056  0662               	xorwf	___fladd@signs,w
  6987  0057  1903               	skipnz
  6988  0058  285A               	goto	u3491
  6989  0059  285B               	goto	u3490
  6990  005A                     u3491:	
  6991  005A  285C               	goto	l2540
  6992  005B                     u3490:	
  6993  005B                     l2538:	
  6994  005B  1762               	bsf	___fladd@signs,6
  6995  005C                     l2540:	
  6996  005C  0859               	movf	___fladd@a+3,w
  6997  005D  00DA               	movwf	??___fladd
  6998  005E  075A               	addwf	??___fladd,w
  6999  005F  00DB               	movwf	??___fladd+1
  7000  0060  085B               	movf	??___fladd+1,w
  7001  0061  00E3               	movwf	___fladd@aexp
  7002  0062                     l2542:	
  7003  0062  1FD8               	btfss	___fladd@a+2,7
  7004  0063  2865               	goto	u3501
  7005  0064  2866               	goto	u3500
  7006  0065                     u3501:	
  7007  0065  2867               	goto	l2546
  7008  0066                     u3500:	
  7009  0066                     l2544:	
  7010  0066  1463               	bsf	___fladd@aexp,0
  7011  0067                     l2546:	
  7012  0067  0863               	movf	___fladd@aexp,w
  7013  0068  1903               	btfsc	3,2
  7014  0069  286B               	goto	u3511
  7015  006A  286C               	goto	u3510
  7016  006B                     u3511:	
  7017  006B  287C               	goto	l2556
  7018  006C                     u3510:	
  7019  006C                     l2548:	
  7020  006C  0A63               	incf	___fladd@aexp,w
  7021  006D  1D03               	btfss	3,2
  7022  006E  2870               	goto	u3521
  7023  006F  2871               	goto	u3520
  7024  0070                     u3521:	
  7025  0070  2879               	goto	l2552
  7026  0071                     u3520:	
  7027  0071                     l2550:	
  7028  0071  3000               	movlw	0
  7029  0072  00D9               	movwf	___fladd@a+3
  7030  0073  3000               	movlw	0
  7031  0074  00D8               	movwf	___fladd@a+2
  7032  0075  3000               	movlw	0
  7033  0076  00D7               	movwf	___fladd@a+1
  7034  0077  3000               	movlw	0
  7035  0078  00D6               	movwf	___fladd@a
  7036  0079                     l2552:	
  7037  0079  17D8               	bsf	___fladd@a+2,7
  7038  007A                     l2554:	
  7039  007A  01D9               	clrf	___fladd@a+3
  7040  007B  2884               	goto	l642
  7041  007C                     l2556:	
  7042  007C  3000               	movlw	0
  7043  007D  00D9               	movwf	___fladd@a+3
  7044  007E  3000               	movlw	0
  7045  007F  00D8               	movwf	___fladd@a+2
  7046  0080  3000               	movlw	0
  7047  0081  00D7               	movwf	___fladd@a+1
  7048  0082  3000               	movlw	0
  7049  0083  00D6               	movwf	___fladd@a
  7050  0084                     l642:	
  7051  0084  0864               	movf	___fladd@bexp,w
  7052  0085  0263               	subwf	___fladd@aexp,w
  7053  0086  1803               	skipnc
  7054  0087  2889               	goto	u3531
  7055  0088  288A               	goto	u3530
  7056  0089                     u3531:	
  7057  0089  28CE               	goto	l2592
  7058  008A                     u3530:	
  7059  008A                     l2558:	
  7060  008A  1F62               	btfss	___fladd@signs,6
  7061  008B  288D               	goto	u3541
  7062  008C  288E               	goto	u3540
  7063  008D                     u3541:	
  7064  008D  2892               	goto	l2562
  7065  008E                     u3540:	
  7066  008E                     l2560:	
  7067  008E  3080               	movlw	128
  7068  008F  00DA               	movwf	??___fladd
  7069  0090  085A               	movf	??___fladd,w
  7070  0091  06E2               	xorwf	___fladd@signs,f
  7071  0092                     l2562:	
  7072  0092  0864               	movf	___fladd@bexp,w
  7073  0093  00DA               	movwf	??___fladd
  7074  0094  085A               	movf	??___fladd,w
  7075  0095  00E5               	movwf	___fladd@grs
  7076  0096                     l2564:	
  7077  0096  0863               	movf	___fladd@aexp,w
  7078  0097  00DA               	movwf	??___fladd
  7079  0098  085A               	movf	??___fladd,w
  7080  0099  00E4               	movwf	___fladd@bexp
  7081  009A                     l2566:	
  7082  009A  0865               	movf	___fladd@grs,w
  7083  009B  00DA               	movwf	??___fladd
  7084  009C  085A               	movf	??___fladd,w
  7085  009D  00E3               	movwf	___fladd@aexp
  7086  009E                     l2568:	
  7087  009E  0852               	movf	___fladd@b,w
  7088  009F  00DA               	movwf	??___fladd
  7089  00A0  085A               	movf	??___fladd,w
  7090  00A1  00E5               	movwf	___fladd@grs
  7091  00A2                     l2570:	
  7092  00A2  0856               	movf	___fladd@a,w
  7093  00A3  00DA               	movwf	??___fladd
  7094  00A4  085A               	movf	??___fladd,w
  7095  00A5  00D2               	movwf	___fladd@b
  7096  00A6                     l2572:	
  7097  00A6  0865               	movf	___fladd@grs,w
  7098  00A7  00DA               	movwf	??___fladd
  7099  00A8  085A               	movf	??___fladd,w
  7100  00A9  00D6               	movwf	___fladd@a
  7101  00AA                     l2574:	
  7102  00AA  0853               	movf	___fladd@b+1,w
  7103  00AB  00DA               	movwf	??___fladd
  7104  00AC  085A               	movf	??___fladd,w
  7105  00AD  00E5               	movwf	___fladd@grs
  7106  00AE                     l2576:	
  7107  00AE  0857               	movf	___fladd@a+1,w
  7108  00AF  00DA               	movwf	??___fladd
  7109  00B0  085A               	movf	??___fladd,w
  7110  00B1  00D3               	movwf	___fladd@b+1
  7111  00B2                     l2578:	
  7112  00B2  0865               	movf	___fladd@grs,w
  7113  00B3  00DA               	movwf	??___fladd
  7114  00B4  085A               	movf	??___fladd,w
  7115  00B5  00D7               	movwf	___fladd@a+1
  7116  00B6                     l2580:	
  7117  00B6  0854               	movf	___fladd@b+2,w
  7118  00B7  00DA               	movwf	??___fladd
  7119  00B8  085A               	movf	??___fladd,w
  7120  00B9  00E5               	movwf	___fladd@grs
  7121  00BA                     l2582:	
  7122  00BA  0858               	movf	___fladd@a+2,w
  7123  00BB  00DA               	movwf	??___fladd
  7124  00BC  085A               	movf	??___fladd,w
  7125  00BD  00D4               	movwf	___fladd@b+2
  7126  00BE                     l2584:	
  7127  00BE  0865               	movf	___fladd@grs,w
  7128  00BF  00DA               	movwf	??___fladd
  7129  00C0  085A               	movf	??___fladd,w
  7130  00C1  00D8               	movwf	___fladd@a+2
  7131  00C2                     l2586:	
  7132  00C2  0855               	movf	___fladd@b+3,w
  7133  00C3  00DA               	movwf	??___fladd
  7134  00C4  085A               	movf	??___fladd,w
  7135  00C5  00E5               	movwf	___fladd@grs
  7136  00C6                     l2588:	
  7137  00C6  0859               	movf	___fladd@a+3,w
  7138  00C7  00DA               	movwf	??___fladd
  7139  00C8  085A               	movf	??___fladd,w
  7140  00C9  00D5               	movwf	___fladd@b+3
  7141  00CA                     l2590:	
  7142  00CA  0865               	movf	___fladd@grs,w
  7143  00CB  00DA               	movwf	??___fladd
  7144  00CC  085A               	movf	??___fladd,w
  7145  00CD  00D9               	movwf	___fladd@a+3
  7146  00CE                     l2592:	
  7147  00CE  01E5               	clrf	___fladd@grs
  7148  00CF                     l2594:	
  7149  00CF  0863               	movf	___fladd@aexp,w
  7150  00D0  00DA               	movwf	??___fladd
  7151  00D1  01DB               	clrf	??___fladd+1
  7152  00D2  085B               	movf	??___fladd+1,w
  7153  00D3  00DD               	movwf	??___fladd+3
  7154  00D4  0864               	movf	___fladd@bexp,w
  7155  00D5  025A               	subwf	??___fladd,w
  7156  00D6  00DC               	movwf	??___fladd+2
  7157  00D7  1C03               	skipc
  7158  00D8  03DD               	decf	??___fladd+3,f
  7159  00D9  085D               	movf	??___fladd+3,w
  7160  00DA  3A80               	xorlw	128
  7161  00DB  00FF               	movwf	btemp+1
  7162  00DC  3080               	movlw	128
  7163  00DD  027F               	subwf	btemp+1,w
  7164  00DE  1D03               	skipz
  7165  00DF  28E2               	goto	u3555
  7166  00E0  301A               	movlw	26
  7167  00E1  025C               	subwf	??___fladd+2,w
  7168  00E2                     u3555:	
  7169  00E2  1C03               	skipc
  7170  00E3  28E5               	goto	u3551
  7171  00E4  28E6               	goto	u3550
  7172  00E5                     u3551:	
  7173  00E5  2923               	goto	l2610
  7174  00E6                     u3550:	
  7175  00E6                     l2596:	
  7176  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  7177  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  7178  00E8  0855               	movf	___fladd@b+3,w
  7179  00E9  0454               	iorwf	___fladd@b+2,w
  7180  00EA  0453               	iorwf	___fladd@b+1,w
  7181  00EB  0452               	iorwf	___fladd@b,w
  7182  00EC  1D03               	skipz
  7183  00ED  28EF               	goto	u3561
  7184  00EE  28F1               	goto	u3560
  7185  00EF                     u3561:	
  7186  00EF  3001               	movlw	1
  7187  00F0  28F2               	goto	u3570
  7188  00F1                     u3560:	
  7189  00F1  3000               	movlw	0
  7190  00F2                     u3570:	
  7191  00F2  00DA               	movwf	??___fladd
  7192  00F3  085A               	movf	??___fladd,w
  7193  00F4  00E5               	movwf	___fladd@grs
  7194  00F5  3000               	movlw	0
  7195  00F6  00D5               	movwf	___fladd@b+3
  7196  00F7  3000               	movlw	0
  7197  00F8  00D4               	movwf	___fladd@b+2
  7198  00F9  3000               	movlw	0
  7199  00FA  00D3               	movwf	___fladd@b+1
  7200  00FB  3000               	movlw	0
  7201  00FC  00D2               	movwf	___fladd@b
  7202  00FD  0863               	movf	___fladd@aexp,w
  7203  00FE  00DA               	movwf	??___fladd
  7204  00FF  085A               	movf	??___fladd,w
  7205  0100  00E4               	movwf	___fladd@bexp
  7206  0101  292B               	goto	l646
  7207  0102                     l648:	
  7208  0102  1C65               	btfss	___fladd@grs,0
  7209  0103  2905               	goto	u3581
  7210  0104  2906               	goto	u3580
  7211  0105                     u3581:	
  7212  0105  290F               	goto	l2600
  7213  0106                     u3580:	
  7214  0106                     l2598:	
  7215  0106  0865               	movf	___fladd@grs,w
  7216  0107  00DA               	movwf	??___fladd
  7217  0108  1003               	clrc
  7218  0109  0C5A               	rrf	??___fladd,w
  7219  010A  3801               	iorlw	1
  7220  010B  00DB               	movwf	??___fladd+1
  7221  010C  085B               	movf	??___fladd+1,w
  7222  010D  00E5               	movwf	___fladd@grs
  7223  010E  2911               	goto	l2602
  7224  010F                     l2600:	
  7225  010F  1003               	clrc
  7226  0110  0CE5               	rrf	___fladd@grs,f
  7227  0111                     l2602:	
  7228  0111  1C52               	btfss	___fladd@b,0
  7229  0112  2914               	goto	u3591
  7230  0113  2915               	goto	u3590
  7231  0114                     u3591:	
  7232  0114  2916               	goto	l2606
  7233  0115                     u3590:	
  7234  0115                     l2604:	
  7235  0115  17E5               	bsf	___fladd@grs,7
  7236  0116                     l2606:	
  7237  0116  3001               	movlw	1
  7238  0117  00DA               	movwf	??___fladd
  7239  0118                     u3605:	
  7240  0118  0D55               	rlf	___fladd@b+3,w
  7241  0119  0CD5               	rrf	___fladd@b+3,f
  7242  011A  0CD4               	rrf	___fladd@b+2,f
  7243  011B  0CD3               	rrf	___fladd@b+1,f
  7244  011C  0CD2               	rrf	___fladd@b,f
  7245  011D  0BDA               	decfsz	??___fladd& (0+127),f
  7246  011E  2918               	goto	u3605
  7247  011F                     l2608:	
  7248  011F  3001               	movlw	1
  7249  0120  00DA               	movwf	??___fladd
  7250  0121  085A               	movf	??___fladd,w
  7251  0122  07E4               	addwf	___fladd@bexp,f
  7252  0123                     l2610:	
  7253  0123  1283               	bcf	3,5	;RP0=0, select bank0
  7254  0124  1303               	bcf	3,6	;RP1=0, select bank0
  7255  0125  0863               	movf	___fladd@aexp,w
  7256  0126  0264               	subwf	___fladd@bexp,w
  7257  0127  1C03               	skipc
  7258  0128  292A               	goto	u3611
  7259  0129  292B               	goto	u3610
  7260  012A                     u3611:	
  7261  012A  2902               	goto	l648
  7262  012B                     u3610:	
  7263  012B                     l646:	
  7264  012B  1B62               	btfsc	___fladd@signs,6
  7265  012C  292E               	goto	u3621
  7266  012D  292F               	goto	u3620
  7267  012E                     u3621:	
  7268  012E  297A               	goto	l2636
  7269  012F                     u3620:	
  7270  012F                     l2612:	
  7271  012F  0864               	movf	___fladd@bexp,w
  7272  0130  1D03               	btfss	3,2
  7273  0131  2933               	goto	u3631
  7274  0132  2934               	goto	u3630
  7275  0133                     u3631:	
  7276  0133  293D               	goto	l2618
  7277  0134                     u3630:	
  7278  0134                     l2614:	
  7279  0134  3000               	movlw	0
  7280  0135  00D5               	movwf	?___fladd+3
  7281  0136  3000               	movlw	0
  7282  0137  00D4               	movwf	?___fladd+2
  7283  0138  3000               	movlw	0
  7284  0139  00D3               	movwf	?___fladd+1
  7285  013A  3000               	movlw	0
  7286  013B  00D2               	movwf	?___fladd
  7287  013C  2AA8               	goto	l655
  7288  013D                     l2618:	
  7289  013D  0856               	movf	___fladd@a,w
  7290  013E  07D2               	addwf	___fladd@b,f
  7291  013F  0857               	movf	___fladd@a+1,w
  7292  0140  1103               	clrz
  7293  0141  1803               	skipnc
  7294  0142  3E01               	addlw	1
  7295  0143  1903               	skipnz
  7296  0144  2946               	goto	u3641
  7297  0145  07D3               	addwf	___fladd@b+1,f
  7298  0146                     u3641:	
  7299  0146  0858               	movf	___fladd@a+2,w
  7300  0147  1103               	clrz
  7301  0148  1803               	skipnc
  7302  0149  3E01               	addlw	1
  7303  014A  1903               	skipnz
  7304  014B  294D               	goto	u3642
  7305  014C  07D4               	addwf	___fladd@b+2,f
  7306  014D                     u3642:	
  7307  014D  0859               	movf	___fladd@a+3,w
  7308  014E  1103               	clrz
  7309  014F  1803               	skipnc
  7310  0150  3E01               	addlw	1
  7311  0151  1903               	skipnz
  7312  0152  2954               	goto	u3643
  7313  0153  07D5               	addwf	___fladd@b+3,f
  7314  0154                     u3643:	
  7315  0154                     l2620:	
  7316  0154  1C55               	btfss	___fladd@b+3,0
  7317  0155  2957               	goto	u3651
  7318  0156  2958               	goto	u3650
  7319  0157                     u3651:	
  7320  0157  2A2E               	goto	l2670
  7321  0158                     u3650:	
  7322  0158                     l2622:	
  7323  0158  1C65               	btfss	___fladd@grs,0
  7324  0159  295B               	goto	u3661
  7325  015A  295C               	goto	u3660
  7326  015B                     u3661:	
  7327  015B  2965               	goto	l2626
  7328  015C                     u3660:	
  7329  015C                     l2624:	
  7330  015C  0865               	movf	___fladd@grs,w
  7331  015D  00DA               	movwf	??___fladd
  7332  015E  1003               	clrc
  7333  015F  0C5A               	rrf	??___fladd,w
  7334  0160  3801               	iorlw	1
  7335  0161  00DB               	movwf	??___fladd+1
  7336  0162  085B               	movf	??___fladd+1,w
  7337  0163  00E5               	movwf	___fladd@grs
  7338  0164  2967               	goto	l2628
  7339  0165                     l2626:	
  7340  0165  1003               	clrc
  7341  0166  0CE5               	rrf	___fladd@grs,f
  7342  0167                     l2628:	
  7343  0167  1C52               	btfss	___fladd@b,0
  7344  0168  296A               	goto	u3671
  7345  0169  296B               	goto	u3670
  7346  016A                     u3671:	
  7347  016A  296C               	goto	l2632
  7348  016B                     u3670:	
  7349  016B                     l2630:	
  7350  016B  17E5               	bsf	___fladd@grs,7
  7351  016C                     l2632:	
  7352  016C  3001               	movlw	1
  7353  016D  00DA               	movwf	??___fladd
  7354  016E                     u3685:	
  7355  016E  0D55               	rlf	___fladd@b+3,w
  7356  016F  0CD5               	rrf	___fladd@b+3,f
  7357  0170  0CD4               	rrf	___fladd@b+2,f
  7358  0171  0CD3               	rrf	___fladd@b+1,f
  7359  0172  0CD2               	rrf	___fladd@b,f
  7360  0173  0BDA               	decfsz	??___fladd& (0+127),f
  7361  0174  296E               	goto	u3685
  7362  0175                     l2634:	
  7363  0175  3001               	movlw	1
  7364  0176  00DA               	movwf	??___fladd
  7365  0177  085A               	movf	??___fladd,w
  7366  0178  07E4               	addwf	___fladd@bexp,f
  7367  0179  2A2E               	goto	l2670
  7368  017A                     l2636:	
  7369  017A  0855               	movf	___fladd@b+3,w
  7370  017B  3A80               	xorlw	128
  7371  017C  00FF               	movwf	btemp+1
  7372  017D  0859               	movf	___fladd@a+3,w
  7373  017E  3A80               	xorlw	128
  7374  017F  027F               	subwf	btemp+1,w
  7375  0180  1D03               	skipz
  7376  0181  298C               	goto	u3693
  7377  0182  0858               	movf	___fladd@a+2,w
  7378  0183  0254               	subwf	___fladd@b+2,w
  7379  0184  1D03               	skipz
  7380  0185  298C               	goto	u3693
  7381  0186  0857               	movf	___fladd@a+1,w
  7382  0187  0253               	subwf	___fladd@b+1,w
  7383  0188  1D03               	skipz
  7384  0189  298C               	goto	u3693
  7385  018A  0856               	movf	___fladd@a,w
  7386  018B  0252               	subwf	___fladd@b,w
  7387  018C                     u3693:	
  7388  018C  1803               	skipnc
  7389  018D  298F               	goto	u3691
  7390  018E  2990               	goto	u3690
  7391  018F                     u3691:	
  7392  018F  29E8               	goto	l2646
  7393  0190                     u3690:	
  7394  0190                     l2638:	
  7395  0190  30FF               	movlw	255
  7396  0191  00DA               	movwf	??___fladd
  7397  0192  30FF               	movlw	255
  7398  0193  00DB               	movwf	??___fladd+1
  7399  0194  30FF               	movlw	255
  7400  0195  00DC               	movwf	??___fladd+2
  7401  0196  30FF               	movlw	255
  7402  0197  00DD               	movwf	??___fladd+3
  7403  0198  0856               	movf	___fladd@a,w
  7404  0199  00DE               	movwf	??___fladd+4
  7405  019A  0857               	movf	___fladd@a+1,w
  7406  019B  00DF               	movwf	??___fladd+5
  7407  019C  0858               	movf	___fladd@a+2,w
  7408  019D  00E0               	movwf	??___fladd+6
  7409  019E  0859               	movf	___fladd@a+3,w
  7410  019F  00E1               	movwf	??___fladd+7
  7411  01A0  0852               	movf	___fladd@b,w
  7412  01A1  02DE               	subwf	??___fladd+4,f
  7413  01A2  0853               	movf	___fladd@b+1,w
  7414  01A3  1C03               	skipc
  7415  01A4  0F53               	incfsz	___fladd@b+1,w
  7416  01A5  29A7               	goto	u3701
  7417  01A6  29A8               	goto	u3702
  7418  01A7                     u3701:	
  7419  01A7  02DF               	subwf	??___fladd+5,f
  7420  01A8                     u3702:	
  7421  01A8  0854               	movf	___fladd@b+2,w
  7422  01A9  1C03               	skipc
  7423  01AA  0F54               	incfsz	___fladd@b+2,w
  7424  01AB  29AD               	goto	u3703
  7425  01AC  29AE               	goto	u3704
  7426  01AD                     u3703:	
  7427  01AD  02E0               	subwf	??___fladd+6,f
  7428  01AE                     u3704:	
  7429  01AE  0855               	movf	___fladd@b+3,w
  7430  01AF  1C03               	skipc
  7431  01B0  0F55               	incfsz	___fladd@b+3,w
  7432  01B1  29B3               	goto	u3705
  7433  01B2  29B4               	goto	u3706
  7434  01B3                     u3705:	
  7435  01B3  02E1               	subwf	??___fladd+7,f
  7436  01B4                     u3706:	
  7437  01B4  085E               	movf	??___fladd+4,w
  7438  01B5  07DA               	addwf	??___fladd,f
  7439  01B6  085F               	movf	??___fladd+5,w
  7440  01B7  1803               	skipnc
  7441  01B8  0F5F               	incfsz	??___fladd+5,w
  7442  01B9  29BB               	goto	u3710
  7443  01BA  29BC               	goto	u3711
  7444  01BB                     u3710:	
  7445  01BB  07DB               	addwf	??___fladd+1,f
  7446  01BC                     u3711:	
  7447  01BC  0860               	movf	??___fladd+6,w
  7448  01BD  1803               	skipnc
  7449  01BE  0F60               	incfsz	??___fladd+6,w
  7450  01BF  29C1               	goto	u3712
  7451  01C0  29C2               	goto	u3713
  7452  01C1                     u3712:	
  7453  01C1  07DC               	addwf	??___fladd+2,f
  7454  01C2                     u3713:	
  7455  01C2  0861               	movf	??___fladd+7,w
  7456  01C3  1803               	skipnc
  7457  01C4  0A61               	incf	??___fladd+7,w
  7458  01C5  07DD               	addwf	??___fladd+3,f
  7459  01C6  085D               	movf	??___fladd+3,w
  7460  01C7  00D5               	movwf	___fladd@b+3
  7461  01C8  085C               	movf	??___fladd+2,w
  7462  01C9  00D4               	movwf	___fladd@b+2
  7463  01CA  085B               	movf	??___fladd+1,w
  7464  01CB  00D3               	movwf	___fladd@b+1
  7465  01CC  085A               	movf	??___fladd,w
  7466  01CD  00D2               	movwf	___fladd@b
  7467  01CE                     l2640:	
  7468  01CE  3080               	movlw	128
  7469  01CF  00DA               	movwf	??___fladd
  7470  01D0  085A               	movf	??___fladd,w
  7471  01D1  06E2               	xorwf	___fladd@signs,f
  7472  01D2  09E5               	comf	___fladd@grs,f
  7473  01D3  0AE5               	incf	___fladd@grs,f
  7474  01D4                     l2642:	
  7475  01D4  0865               	movf	___fladd@grs,w
  7476  01D5  1D03               	btfss	3,2
  7477  01D6  29D8               	goto	u3721
  7478  01D7  29D9               	goto	u3720
  7479  01D8                     u3721:	
  7480  01D8  29F6               	goto	l663
  7481  01D9                     u3720:	
  7482  01D9                     l2644:	
  7483  01D9  3001               	movlw	1
  7484  01DA  07D2               	addwf	___fladd@b,f
  7485  01DB  3000               	movlw	0
  7486  01DC  1803               	skipnc
  7487  01DD  3001               	movlw	1
  7488  01DE  07D3               	addwf	___fladd@b+1,f
  7489  01DF  3000               	movlw	0
  7490  01E0  1803               	skipnc
  7491  01E1  3001               	movlw	1
  7492  01E2  07D4               	addwf	___fladd@b+2,f
  7493  01E3  3000               	movlw	0
  7494  01E4  1803               	skipnc
  7495  01E5  3001               	movlw	1
  7496  01E6  07D5               	addwf	___fladd@b+3,f
  7497  01E7  29F6               	goto	l663
  7498  01E8                     l2646:	
  7499  01E8  0856               	movf	___fladd@a,w
  7500  01E9  02D2               	subwf	___fladd@b,f
  7501  01EA  0857               	movf	___fladd@a+1,w
  7502  01EB  1C03               	skipc
  7503  01EC  0F57               	incfsz	___fladd@a+1,w
  7504  01ED  02D3               	subwf	___fladd@b+1,f
  7505  01EE  0858               	movf	___fladd@a+2,w
  7506  01EF  1C03               	skipc
  7507  01F0  0F58               	incfsz	___fladd@a+2,w
  7508  01F1  02D4               	subwf	___fladd@b+2,f
  7509  01F2  0859               	movf	___fladd@a+3,w
  7510  01F3  1C03               	skipc
  7511  01F4  0F59               	incfsz	___fladd@a+3,w
  7512  01F5  02D5               	subwf	___fladd@b+3,f
  7513  01F6                     l663:	
  7514  01F6  0855               	movf	___fladd@b+3,w
  7515  01F7  0454               	iorwf	___fladd@b+2,w
  7516  01F8  0453               	iorwf	___fladd@b+1,w
  7517  01F9  0452               	iorwf	___fladd@b,w
  7518  01FA  1D03               	skipz
  7519  01FB  29FD               	goto	u3731
  7520  01FC  29FE               	goto	u3730
  7521  01FD                     u3731:	
  7522  01FD  2A2A               	goto	l2668
  7523  01FE                     u3730:	
  7524  01FE                     l2648:	
  7525  01FE  0865               	movf	___fladd@grs,w
  7526  01FF  1D03               	btfss	3,2
  7527  0200  2A02               	goto	u3741
  7528  0201  2A03               	goto	u3740
  7529  0202                     u3741:	
  7530  0202  2A2A               	goto	l2668
  7531  0203                     u3740:	
  7532  0203                     l2650:	
  7533  0203  3000               	movlw	0
  7534  0204  00D5               	movwf	?___fladd+3
  7535  0205  3000               	movlw	0
  7536  0206  00D4               	movwf	?___fladd+2
  7537  0207  3000               	movlw	0
  7538  0208  00D3               	movwf	?___fladd+1
  7539  0209  3000               	movlw	0
  7540  020A  00D2               	movwf	?___fladd
  7541  020B  2AA8               	goto	l655
  7542  020C                     l2654:	
  7543  020C  3001               	movlw	1
  7544  020D  00DA               	movwf	??___fladd
  7545  020E                     u3755:	
  7546  020E  1003               	clrc
  7547  020F  0DD2               	rlf	___fladd@b,f
  7548  0210  0DD3               	rlf	___fladd@b+1,f
  7549  0211  0DD4               	rlf	___fladd@b+2,f
  7550  0212  0DD5               	rlf	___fladd@b+3,f
  7551  0213  0BDA               	decfsz	??___fladd,f
  7552  0214  2A0E               	goto	u3755
  7553  0215                     l2656:	
  7554  0215  1FE5               	btfss	___fladd@grs,7
  7555  0216  2A18               	goto	u3761
  7556  0217  2A19               	goto	u3760
  7557  0218                     u3761:	
  7558  0218  2A1A               	goto	l667
  7559  0219                     u3760:	
  7560  0219                     l2658:	
  7561  0219  1452               	bsf	___fladd@b,0
  7562  021A                     l667:	
  7563  021A  1C65               	btfss	___fladd@grs,0
  7564  021B  2A1D               	goto	u3771
  7565  021C  2A1E               	goto	u3770
  7566  021D                     u3771:	
  7567  021D  2A21               	goto	l2662
  7568  021E                     u3770:	
  7569  021E                     l2660:	
  7570  021E  1403               	setc
  7571  021F  0DE5               	rlf	___fladd@grs,f
  7572  0220  2A23               	goto	l2664
  7573  0221                     l2662:	
  7574  0221  1003               	clrc
  7575  0222  0DE5               	rlf	___fladd@grs,f
  7576  0223                     l2664:	
  7577  0223  0864               	movf	___fladd@bexp,w
  7578  0224  1903               	btfsc	3,2
  7579  0225  2A27               	goto	u3781
  7580  0226  2A28               	goto	u3780
  7581  0227                     u3781:	
  7582  0227  2A2A               	goto	l2668
  7583  0228                     u3780:	
  7584  0228                     l2666:	
  7585  0228  3001               	movlw	1
  7586  0229  02E4               	subwf	___fladd@bexp,f
  7587  022A                     l2668:	
  7588  022A  1FD4               	btfss	___fladd@b+2,7
  7589  022B  2A2D               	goto	u3791
  7590  022C  2A2E               	goto	u3790
  7591  022D                     u3791:	
  7592  022D  2A0C               	goto	l2654
  7593  022E                     u3790:	
  7594  022E                     l2670:	
  7595  022E  01E3               	clrf	___fladd@aexp
  7596  022F                     l2672:	
  7597  022F  1FE5               	btfss	___fladd@grs,7
  7598  0230  2A32               	goto	u3801
  7599  0231  2A33               	goto	u3800
  7600  0232                     u3801:	
  7601  0232  2A41               	goto	l2680
  7602  0233                     u3800:	
  7603  0233                     l2674:	
  7604  0233  0865               	movf	___fladd@grs,w
  7605  0234  397F               	andlw	127
  7606  0235  1903               	btfsc	3,2
  7607  0236  2A38               	goto	u3811
  7608  0237  2A39               	goto	u3810
  7609  0238                     u3811:	
  7610  0238  2A3C               	goto	l673
  7611  0239                     u3810:	
  7612  0239                     l2676:	
  7613  0239  01E3               	clrf	___fladd@aexp
  7614  023A  0AE3               	incf	___fladd@aexp,f
  7615  023B  2A41               	goto	l2680
  7616  023C                     l673:	
  7617  023C  1C52               	btfss	___fladd@b,0
  7618  023D  2A3F               	goto	u3821
  7619  023E  2A40               	goto	u3820
  7620  023F                     u3821:	
  7621  023F  2A41               	goto	l2680
  7622  0240                     u3820:	
  7623  0240  2A39               	goto	l2676
  7624  0241                     l2680:	
  7625  0241  0863               	movf	___fladd@aexp,w
  7626  0242  1903               	btfsc	3,2
  7627  0243  2A45               	goto	u3831
  7628  0244  2A46               	goto	u3830
  7629  0245                     u3831:	
  7630  0245  2A7A               	goto	l676
  7631  0246                     u3830:	
  7632  0246                     l2682:	
  7633  0246  3001               	movlw	1
  7634  0247  07D2               	addwf	___fladd@b,f
  7635  0248  3000               	movlw	0
  7636  0249  1803               	skipnc
  7637  024A  3001               	movlw	1
  7638  024B  07D3               	addwf	___fladd@b+1,f
  7639  024C  3000               	movlw	0
  7640  024D  1803               	skipnc
  7641  024E  3001               	movlw	1
  7642  024F  07D4               	addwf	___fladd@b+2,f
  7643  0250  3000               	movlw	0
  7644  0251  1803               	skipnc
  7645  0252  3001               	movlw	1
  7646  0253  07D5               	addwf	___fladd@b+3,f
  7647  0254                     l2684:	
  7648  0254  1C55               	btfss	___fladd@b+3,0
  7649  0255  2A57               	goto	u3841
  7650  0256  2A58               	goto	u3840
  7651  0257                     u3841:	
  7652  0257  2A7A               	goto	l676
  7653  0258                     u3840:	
  7654  0258                     l2686:	
  7655  0258  0852               	movf	___fladd@b,w
  7656  0259  00DA               	movwf	??___fladd
  7657  025A  0853               	movf	___fladd@b+1,w
  7658  025B  00DB               	movwf	??___fladd+1
  7659  025C  0854               	movf	___fladd@b+2,w
  7660  025D  00DC               	movwf	??___fladd+2
  7661  025E  0855               	movf	___fladd@b+3,w
  7662  025F  00DD               	movwf	??___fladd+3
  7663  0260  3001               	movlw	1
  7664  0261  00DE               	movwf	??___fladd+4
  7665  0262                     u3855:	
  7666  0262  0D5D               	rlf	??___fladd+3,w
  7667  0263  0CDD               	rrf	??___fladd+3,f
  7668  0264  0CDC               	rrf	??___fladd+2,f
  7669  0265  0CDB               	rrf	??___fladd+1,f
  7670  0266  0CDA               	rrf	??___fladd,f
  7671  0267                     u3850:	
  7672  0267  0BDE               	decfsz	??___fladd+4,f
  7673  0268  2A62               	goto	u3855
  7674  0269  085D               	movf	??___fladd+3,w
  7675  026A  00D5               	movwf	___fladd@b+3
  7676  026B  085C               	movf	??___fladd+2,w
  7677  026C  00D4               	movwf	___fladd@b+2
  7678  026D  085B               	movf	??___fladd+1,w
  7679  026E  00D3               	movwf	___fladd@b+1
  7680  026F  085A               	movf	??___fladd,w
  7681  0270  00D2               	movwf	___fladd@b
  7682  0271  0A64               	incf	___fladd@bexp,w
  7683  0272  1903               	btfsc	3,2
  7684  0273  2A75               	goto	u3861
  7685  0274  2A76               	goto	u3860
  7686  0275                     u3861:	
  7687  0275  2A7A               	goto	l676
  7688  0276                     u3860:	
  7689  0276                     l2688:	
  7690  0276  3001               	movlw	1
  7691  0277  00DA               	movwf	??___fladd
  7692  0278  085A               	movf	??___fladd,w
  7693  0279  07E4               	addwf	___fladd@bexp,f
  7694  027A                     l676:	
  7695  027A  0A64               	incf	___fladd@bexp,w
  7696  027B  1903               	btfsc	3,2
  7697  027C  2A7E               	goto	u3871
  7698  027D  2A7F               	goto	u3870
  7699  027E                     u3871:	
  7700  027E  2A84               	goto	l2692
  7701  027F                     u3870:	
  7702  027F                     l2690:	
  7703  027F  0864               	movf	___fladd@bexp,w
  7704  0280  1D03               	btfss	3,2
  7705  0281  2A83               	goto	u3881
  7706  0282  2A84               	goto	u3880
  7707  0283                     u3881:	
  7708  0283  2A92               	goto	l2698
  7709  0284                     u3880:	
  7710  0284                     l2692:	
  7711  0284  3000               	movlw	0
  7712  0285  00D5               	movwf	___fladd@b+3
  7713  0286  3000               	movlw	0
  7714  0287  00D4               	movwf	___fladd@b+2
  7715  0288  3000               	movlw	0
  7716  0289  00D3               	movwf	___fladd@b+1
  7717  028A  3000               	movlw	0
  7718  028B  00D2               	movwf	___fladd@b
  7719  028C                     l2694:	
  7720  028C  0864               	movf	___fladd@bexp,w
  7721  028D  1D03               	btfss	3,2
  7722  028E  2A90               	goto	u3891
  7723  028F  2A91               	goto	u3890
  7724  0290                     u3891:	
  7725  0290  2A92               	goto	l2698
  7726  0291                     u3890:	
  7727  0291                     l2696:	
  7728  0291  01E2               	clrf	___fladd@signs
  7729  0292                     l2698:	
  7730  0292  1C64               	btfss	___fladd@bexp,0
  7731  0293  2A95               	goto	u3901
  7732  0294  2A96               	goto	u3900
  7733  0295                     u3901:	
  7734  0295  2A98               	goto	l2702
  7735  0296                     u3900:	
  7736  0296                     l2700:	
  7737  0296  17D4               	bsf	___fladd@b+2,7
  7738  0297  2A9C               	goto	l684
  7739  0298                     l2702:	
  7740  0298  307F               	movlw	127
  7741  0299  00DA               	movwf	??___fladd
  7742  029A  085A               	movf	??___fladd,w
  7743  029B  05D4               	andwf	___fladd@b+2,f
  7744  029C                     l684:	
  7745  029C  0864               	movf	___fladd@bexp,w
  7746  029D  00DA               	movwf	??___fladd
  7747  029E  1003               	clrc
  7748  029F  0C5A               	rrf	??___fladd,w
  7749  02A0  00DB               	movwf	??___fladd+1
  7750  02A1  085B               	movf	??___fladd+1,w
  7751  02A2  00D5               	movwf	___fladd@b+3
  7752  02A3                     l2704:	
  7753  02A3  1FE2               	btfss	___fladd@signs,7
  7754  02A4  2AA6               	goto	u3911
  7755  02A5  2AA7               	goto	u3910
  7756  02A6                     u3911:	
  7757  02A6  2AA8               	goto	l685
  7758  02A7                     u3910:	
  7759  02A7                     l2706:	
  7760  02A7  17D5               	bsf	___fladd@b+3,7
  7761  02A8                     l685:	
  7762  02A8                     l655:	
  7763  02A8  0008               	return
  7764  02A9                     __end_of___fladd:	
  7765                           
  7766                           	psect	text21
  7767  0004                     __ptext21:	
  7768 ;; *************** function ___flneg *****************
  7769 ;; Defined at:
  7770 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  f1              4    0[COMMON] unsigned char 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  4    0[COMMON] unsigned char 
  7777 ;; Registers used:
  7778 ;;		wreg
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7784 ;;      Params:         4       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0
  7787 ;;      Totals:         4       0       0       0       0
  7788 ;;Total ram usage:        4 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_sprintf
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function ___flneg
  7799  0004                     ___flneg:	
  7800  0004                     l3102:	
  7801                           ;incstack = 0
  7802                           ; Regs used in ___flneg: [wreg]
  7803                           
  7804  0004  0873               	movf	___flneg@f1+3,w
  7805  0005  0472               	iorwf	___flneg@f1+2,w
  7806  0006  0471               	iorwf	___flneg@f1+1,w
  7807  0007  0470               	iorwf	___flneg@f1,w
  7808  0008  1903               	skipnz
  7809  0009  280B               	goto	u5031
  7810  000A  280C               	goto	u5030
  7811  000B                     u5031:	
  7812  000B  280E               	goto	l3106
  7813  000C                     u5030:	
  7814  000C                     l3104:	
  7815  000C  3080               	movlw	128
  7816  000D  06F3               	xorwf	___flneg@f1+3,f
  7817  000E                     l3106:	
  7818  000E                     l514:	
  7819  000E  0008               	return
  7820  000F                     __end_of___flneg:	
  7821                           
  7822                           	psect	text22
  7823  1DE7                     __ptext22:	
  7824 ;; *************** function ___flge *****************
  7825 ;; Defined at:
  7826 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  ff1             4    0[COMMON] unsigned char 
  7829 ;;  ff2             4    4[COMMON] unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;		None               void
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         8       0       0       0       0
  7842 ;;      Locals:         0       0       0       0       0
  7843 ;;      Temps:          4       0       0       0       0
  7844 ;;      Totals:        12       0       0       0       0
  7845 ;;Total ram usage:       12 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_sprintf
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function ___flge
  7856  1DE7                     ___flge:	
  7857  1DE7                     l3082:	
  7858                           ;incstack = 0
  7859                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7860                           
  7861  1DE7  3000               	movlw	0
  7862  1DE8  0570               	andwf	___flge@ff1,w
  7863  1DE9  00F8               	movwf	??___flge
  7864  1DEA  3000               	movlw	0
  7865  1DEB  0571               	andwf	___flge@ff1+1,w
  7866  1DEC  00F9               	movwf	??___flge+1
  7867  1DED  3080               	movlw	128
  7868  1DEE  0572               	andwf	___flge@ff1+2,w
  7869  1DEF  00FA               	movwf	??___flge+2
  7870  1DF0  307F               	movlw	127
  7871  1DF1  0573               	andwf	___flge@ff1+3,w
  7872  1DF2  00FB               	movwf	??___flge+3
  7873  1DF3  087B               	movf	??___flge+3,w
  7874  1DF4  047A               	iorwf	??___flge+2,w
  7875  1DF5  0479               	iorwf	??___flge+1,w
  7876  1DF6  0478               	iorwf	??___flge,w
  7877  1DF7  1D03               	skipz
  7878  1DF8  2DFA               	goto	u4961
  7879  1DF9  2DFB               	goto	u4960
  7880  1DFA                     u4961:	
  7881  1DFA  2E03               	goto	l506
  7882  1DFB                     u4960:	
  7883  1DFB                     l3084:	
  7884  1DFB  3000               	movlw	0
  7885  1DFC  00F3               	movwf	___flge@ff1+3
  7886  1DFD  3000               	movlw	0
  7887  1DFE  00F2               	movwf	___flge@ff1+2
  7888  1DFF  3000               	movlw	0
  7889  1E00  00F1               	movwf	___flge@ff1+1
  7890  1E01  3000               	movlw	0
  7891  1E02  00F0               	movwf	___flge@ff1
  7892  1E03                     l506:	
  7893  1E03  3000               	movlw	0
  7894  1E04  0574               	andwf	___flge@ff2,w
  7895  1E05  00F8               	movwf	??___flge
  7896  1E06  3000               	movlw	0
  7897  1E07  0575               	andwf	___flge@ff2+1,w
  7898  1E08  00F9               	movwf	??___flge+1
  7899  1E09  3080               	movlw	128
  7900  1E0A  0576               	andwf	___flge@ff2+2,w
  7901  1E0B  00FA               	movwf	??___flge+2
  7902  1E0C  307F               	movlw	127
  7903  1E0D  0577               	andwf	___flge@ff2+3,w
  7904  1E0E  00FB               	movwf	??___flge+3
  7905  1E0F  087B               	movf	??___flge+3,w
  7906  1E10  047A               	iorwf	??___flge+2,w
  7907  1E11  0479               	iorwf	??___flge+1,w
  7908  1E12  0478               	iorwf	??___flge,w
  7909  1E13  1D03               	skipz
  7910  1E14  2E16               	goto	u4971
  7911  1E15  2E17               	goto	u4970
  7912  1E16                     u4971:	
  7913  1E16  2E1F               	goto	l3088
  7914  1E17                     u4970:	
  7915  1E17                     l3086:	
  7916  1E17  3000               	movlw	0
  7917  1E18  00F7               	movwf	___flge@ff2+3
  7918  1E19  3000               	movlw	0
  7919  1E1A  00F6               	movwf	___flge@ff2+2
  7920  1E1B  3000               	movlw	0
  7921  1E1C  00F5               	movwf	___flge@ff2+1
  7922  1E1D  3000               	movlw	0
  7923  1E1E  00F4               	movwf	___flge@ff2
  7924  1E1F                     l3088:	
  7925  1E1F  1FF3               	btfss	___flge@ff1+3,7
  7926  1E20  2E22               	goto	u4981
  7927  1E21  2E23               	goto	u4980
  7928  1E22                     u4981:	
  7929  1E22  2E47               	goto	l3092
  7930  1E23                     u4980:	
  7931  1E23                     l3090:	
  7932  1E23  3000               	movlw	0
  7933  1E24  00F8               	movwf	??___flge
  7934  1E25  3000               	movlw	0
  7935  1E26  00F9               	movwf	??___flge+1
  7936  1E27  3000               	movlw	0
  7937  1E28  00FA               	movwf	??___flge+2
  7938  1E29  3080               	movlw	128
  7939  1E2A  00FB               	movwf	??___flge+3
  7940  1E2B  0870               	movf	___flge@ff1,w
  7941  1E2C  02F8               	subwf	??___flge,f
  7942  1E2D  0871               	movf	___flge@ff1+1,w
  7943  1E2E  1C03               	skipc
  7944  1E2F  0F71               	incfsz	___flge@ff1+1,w
  7945  1E30  2E32               	goto	u4991
  7946  1E31  2E33               	goto	u4992
  7947  1E32                     u4991:	
  7948  1E32  02F9               	subwf	??___flge+1,f
  7949  1E33                     u4992:	
  7950  1E33  0872               	movf	___flge@ff1+2,w
  7951  1E34  1C03               	skipc
  7952  1E35  0F72               	incfsz	___flge@ff1+2,w
  7953  1E36  2E38               	goto	u4993
  7954  1E37  2E39               	goto	u4994
  7955  1E38                     u4993:	
  7956  1E38  02FA               	subwf	??___flge+2,f
  7957  1E39                     u4994:	
  7958  1E39  0873               	movf	___flge@ff1+3,w
  7959  1E3A  1C03               	skipc
  7960  1E3B  0F73               	incfsz	___flge@ff1+3,w
  7961  1E3C  2E3E               	goto	u4995
  7962  1E3D  2E3F               	goto	u4996
  7963  1E3E                     u4995:	
  7964  1E3E  02FB               	subwf	??___flge+3,f
  7965  1E3F                     u4996:	
  7966  1E3F  087B               	movf	??___flge+3,w
  7967  1E40  00F3               	movwf	___flge@ff1+3
  7968  1E41  087A               	movf	??___flge+2,w
  7969  1E42  00F2               	movwf	___flge@ff1+2
  7970  1E43  0879               	movf	??___flge+1,w
  7971  1E44  00F1               	movwf	___flge@ff1+1
  7972  1E45  0878               	movf	??___flge,w
  7973  1E46  00F0               	movwf	___flge@ff1
  7974  1E47                     l3092:	
  7975  1E47  1FF7               	btfss	___flge@ff2+3,7
  7976  1E48  2E4A               	goto	u5001
  7977  1E49  2E4B               	goto	u5000
  7978  1E4A                     u5001:	
  7979  1E4A  2E6F               	goto	l509
  7980  1E4B                     u5000:	
  7981  1E4B                     l3094:	
  7982  1E4B  3000               	movlw	0
  7983  1E4C  00F8               	movwf	??___flge
  7984  1E4D  3000               	movlw	0
  7985  1E4E  00F9               	movwf	??___flge+1
  7986  1E4F  3000               	movlw	0
  7987  1E50  00FA               	movwf	??___flge+2
  7988  1E51  3080               	movlw	128
  7989  1E52  00FB               	movwf	??___flge+3
  7990  1E53  0874               	movf	___flge@ff2,w
  7991  1E54  02F8               	subwf	??___flge,f
  7992  1E55  0875               	movf	___flge@ff2+1,w
  7993  1E56  1C03               	skipc
  7994  1E57  0F75               	incfsz	___flge@ff2+1,w
  7995  1E58  2E5A               	goto	u5011
  7996  1E59  2E5B               	goto	u5012
  7997  1E5A                     u5011:	
  7998  1E5A  02F9               	subwf	??___flge+1,f
  7999  1E5B                     u5012:	
  8000  1E5B  0876               	movf	___flge@ff2+2,w
  8001  1E5C  1C03               	skipc
  8002  1E5D  0F76               	incfsz	___flge@ff2+2,w
  8003  1E5E  2E60               	goto	u5013
  8004  1E5F  2E61               	goto	u5014
  8005  1E60                     u5013:	
  8006  1E60  02FA               	subwf	??___flge+2,f
  8007  1E61                     u5014:	
  8008  1E61  0877               	movf	___flge@ff2+3,w
  8009  1E62  1C03               	skipc
  8010  1E63  0F77               	incfsz	___flge@ff2+3,w
  8011  1E64  2E66               	goto	u5015
  8012  1E65  2E67               	goto	u5016
  8013  1E66                     u5015:	
  8014  1E66  02FB               	subwf	??___flge+3,f
  8015  1E67                     u5016:	
  8016  1E67  087B               	movf	??___flge+3,w
  8017  1E68  00F7               	movwf	___flge@ff2+3
  8018  1E69  087A               	movf	??___flge+2,w
  8019  1E6A  00F6               	movwf	___flge@ff2+2
  8020  1E6B  0879               	movf	??___flge+1,w
  8021  1E6C  00F5               	movwf	___flge@ff2+1
  8022  1E6D  0878               	movf	??___flge,w
  8023  1E6E  00F4               	movwf	___flge@ff2
  8024  1E6F                     l509:	
  8025  1E6F  3080               	movlw	128
  8026  1E70  06F3               	xorwf	___flge@ff1+3,f
  8027  1E71  3080               	movlw	128
  8028  1E72  06F7               	xorwf	___flge@ff2+3,f
  8029  1E73  0877               	movf	___flge@ff2+3,w
  8030  1E74  0273               	subwf	___flge@ff1+3,w
  8031  1E75  1D03               	skipz
  8032  1E76  2E81               	goto	u5025
  8033  1E77  0876               	movf	___flge@ff2+2,w
  8034  1E78  0272               	subwf	___flge@ff1+2,w
  8035  1E79  1D03               	skipz
  8036  1E7A  2E81               	goto	u5025
  8037  1E7B  0875               	movf	___flge@ff2+1,w
  8038  1E7C  0271               	subwf	___flge@ff1+1,w
  8039  1E7D  1D03               	skipz
  8040  1E7E  2E81               	goto	u5025
  8041  1E7F  0874               	movf	___flge@ff2,w
  8042  1E80  0270               	subwf	___flge@ff1,w
  8043  1E81                     u5025:	
  8044  1E81  1803               	skipnc
  8045  1E82  2E84               	goto	u5021
  8046  1E83  2E85               	goto	u5020
  8047  1E84                     u5021:	
  8048  1E84  2E87               	goto	l3098
  8049  1E85                     u5020:	
  8050  1E85                     l3096:	
  8051  1E85  1003               	clrc
  8052  1E86  2E88               	goto	l510
  8053  1E87                     l3098:	
  8054  1E87  1403               	setc
  8055  1E88                     l510:	
  8056  1E88  0008               	return
  8057  1E89                     __end_of___flge:	
  8058                           
  8059                           	psect	text23
  8060  1C76                     __ptext23:	
  8061 ;; *************** function ___fleq *****************
  8062 ;; Defined at:
  8063 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  ff1             4    0[COMMON] unsigned char 
  8066 ;;  ff2             4    4[COMMON] unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;		None               void
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8078 ;;      Params:         8       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0
  8080 ;;      Temps:          4       0       0       0       0
  8081 ;;      Totals:        12       0       0       0       0
  8082 ;;Total ram usage:       12 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_sprintf
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           
  8092                           ;psect for function ___fleq
  8093  1C76                     ___fleq:	
  8094  1C76                     l3070:	
  8095                           ;incstack = 0
  8096                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8097                           
  8098  1C76  3000               	movlw	0
  8099  1C77  0570               	andwf	___fleq@ff1,w
  8100  1C78  00F8               	movwf	??___fleq
  8101  1C79  3000               	movlw	0
  8102  1C7A  0571               	andwf	___fleq@ff1+1,w
  8103  1C7B  00F9               	movwf	??___fleq+1
  8104  1C7C  3080               	movlw	128
  8105  1C7D  0572               	andwf	___fleq@ff1+2,w
  8106  1C7E  00FA               	movwf	??___fleq+2
  8107  1C7F  307F               	movlw	127
  8108  1C80  0573               	andwf	___fleq@ff1+3,w
  8109  1C81  00FB               	movwf	??___fleq+3
  8110  1C82  087B               	movf	??___fleq+3,w
  8111  1C83  047A               	iorwf	??___fleq+2,w
  8112  1C84  0479               	iorwf	??___fleq+1,w
  8113  1C85  0478               	iorwf	??___fleq,w
  8114  1C86  1D03               	skipz
  8115  1C87  2C89               	goto	u4931
  8116  1C88  2C8A               	goto	u4930
  8117  1C89                     u4931:	
  8118  1C89  2C92               	goto	l501
  8119  1C8A                     u4930:	
  8120  1C8A                     l3072:	
  8121  1C8A  3000               	movlw	0
  8122  1C8B  00F3               	movwf	___fleq@ff1+3
  8123  1C8C  3000               	movlw	0
  8124  1C8D  00F2               	movwf	___fleq@ff1+2
  8125  1C8E  3000               	movlw	0
  8126  1C8F  00F1               	movwf	___fleq@ff1+1
  8127  1C90  3000               	movlw	0
  8128  1C91  00F0               	movwf	___fleq@ff1
  8129  1C92                     l501:	
  8130  1C92  3000               	movlw	0
  8131  1C93  0574               	andwf	___fleq@ff2,w
  8132  1C94  00F8               	movwf	??___fleq
  8133  1C95  3000               	movlw	0
  8134  1C96  0575               	andwf	___fleq@ff2+1,w
  8135  1C97  00F9               	movwf	??___fleq+1
  8136  1C98  3080               	movlw	128
  8137  1C99  0576               	andwf	___fleq@ff2+2,w
  8138  1C9A  00FA               	movwf	??___fleq+2
  8139  1C9B  307F               	movlw	127
  8140  1C9C  0577               	andwf	___fleq@ff2+3,w
  8141  1C9D  00FB               	movwf	??___fleq+3
  8142  1C9E  087B               	movf	??___fleq+3,w
  8143  1C9F  047A               	iorwf	??___fleq+2,w
  8144  1CA0  0479               	iorwf	??___fleq+1,w
  8145  1CA1  0478               	iorwf	??___fleq,w
  8146  1CA2  1D03               	skipz
  8147  1CA3  2CA5               	goto	u4941
  8148  1CA4  2CA6               	goto	u4940
  8149  1CA5                     u4941:	
  8150  1CA5  2CAE               	goto	l502
  8151  1CA6                     u4940:	
  8152  1CA6                     l3074:	
  8153  1CA6  3000               	movlw	0
  8154  1CA7  00F7               	movwf	___fleq@ff2+3
  8155  1CA8  3000               	movlw	0
  8156  1CA9  00F6               	movwf	___fleq@ff2+2
  8157  1CAA  3000               	movlw	0
  8158  1CAB  00F5               	movwf	___fleq@ff2+1
  8159  1CAC  3000               	movlw	0
  8160  1CAD  00F4               	movwf	___fleq@ff2
  8161  1CAE                     l502:	
  8162  1CAE  0877               	movf	___fleq@ff2+3,w
  8163  1CAF  0673               	xorwf	___fleq@ff1+3,w
  8164  1CB0  1D03               	skipz
  8165  1CB1  2CBC               	goto	u4955
  8166  1CB2  0876               	movf	___fleq@ff2+2,w
  8167  1CB3  0672               	xorwf	___fleq@ff1+2,w
  8168  1CB4  1D03               	skipz
  8169  1CB5  2CBC               	goto	u4955
  8170  1CB6  0875               	movf	___fleq@ff2+1,w
  8171  1CB7  0671               	xorwf	___fleq@ff1+1,w
  8172  1CB8  1D03               	skipz
  8173  1CB9  2CBC               	goto	u4955
  8174  1CBA  0874               	movf	___fleq@ff2,w
  8175  1CBB  0670               	xorwf	___fleq@ff1,w
  8176  1CBC                     u4955:	
  8177  1CBC  1903               	skipnz
  8178  1CBD  2CBF               	goto	u4951
  8179  1CBE  2CC0               	goto	u4950
  8180  1CBF                     u4951:	
  8181  1CBF  2CC2               	goto	l3078
  8182  1CC0                     u4950:	
  8183  1CC0                     l3076:	
  8184  1CC0  1003               	clrc
  8185  1CC1  2CC3               	goto	l503
  8186  1CC2                     l3078:	
  8187  1CC2  1403               	setc
  8188  1CC3                     l503:	
  8189  1CC3  0008               	return
  8190  1CC4                     __end_of___fleq:	
  8191                           
  8192                           	psect	text24
  8193  1B46                     __ptext24:	
  8194 ;; *************** function _lcd_msg *****************
  8195 ;; Defined at:
  8196 ;;		line 126 in file "Lab3.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  c               2    3[COMMON] PTR unsigned char 
  8199 ;;		 -> buffer(16), STR_1(6), 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8211 ;;      Params:         2       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0
  8214 ;;      Totals:         2       0       0       0       0
  8215 ;;Total ram usage:        2 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    2
  8218 ;; This function calls:
  8219 ;;		_lcd_dwr
  8220 ;; This function is called by:
  8221 ;;		_voltaje1
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           
  8226                           ;psect for function _lcd_msg
  8227  1B46                     _lcd_msg:	
  8228  1B46                     l3226:	
  8229                           ;incstack = 0
  8230                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8231                           
  8232                           
  8233                           ;Lab3.c: 127:     while(*c != 0)
  8234  1B46  2B5B               	goto	l3232
  8235  1B47                     l3228:	
  8236                           
  8237                           ;Lab3.c: 128:         lcd_dwr(*c++);
  8238  1B47  0874               	movf	lcd_msg@c+1,w
  8239  1B48  00FF               	movwf	btemp+1
  8240  1B49  0873               	movf	lcd_msg@c,w
  8241  1B4A  0084               	movwf	4
  8242  1B4B  160A  158A  2000  160A  158A  	fcall	stringtab
  8243  1B50  160A  158A  22CC  160A  158A  	fcall	_lcd_dwr
  8244  1B55                     l3230:	
  8245  1B55  3001               	movlw	1
  8246  1B56  07F3               	addwf	lcd_msg@c,f
  8247  1B57  1803               	skipnc
  8248  1B58  0AF4               	incf	lcd_msg@c+1,f
  8249  1B59  3000               	movlw	0
  8250  1B5A  07F4               	addwf	lcd_msg@c+1,f
  8251  1B5B                     l3232:	
  8252                           
  8253                           ;Lab3.c: 127:     while(*c != 0)
  8254  1B5B  0874               	movf	lcd_msg@c+1,w
  8255  1B5C  1283               	bcf	3,5	;RP0=0, select bank0
  8256  1B5D  1303               	bcf	3,6	;RP1=0, select bank0
  8257  1B5E  00FF               	movwf	btemp+1
  8258  1B5F  0873               	movf	lcd_msg@c,w
  8259  1B60  0084               	movwf	4
  8260  1B61  160A  158A  2000  160A  158A  	fcall	stringtab
  8261  1B66  3A00               	xorlw	0
  8262  1B67  1D03               	skipz
  8263  1B68  2B6A               	goto	u5341
  8264  1B69  2B6B               	goto	u5340
  8265  1B6A                     u5341:	
  8266  1B6A  2B47               	goto	l3228
  8267  1B6B                     u5340:	
  8268  1B6B                     l91:	
  8269  1B6B  0008               	return
  8270  1B6C                     __end_of_lcd_msg:	
  8271                           
  8272                           	psect	text25
  8273  1ACC                     __ptext25:	
  8274 ;; *************** function _lcd_dwr *****************
  8275 ;; Defined at:
  8276 ;;		line 118 in file "Lab3.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  x               1    wreg     unsigned char 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  x               1    2[COMMON] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, pclath, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8290 ;;      Params:         0       0       0       0       0
  8291 ;;      Locals:         1       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0
  8293 ;;      Totals:         1       0       0       0       0
  8294 ;;Total ram usage:        1 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    1
  8297 ;; This function calls:
  8298 ;;		_lcd_lat
  8299 ;;		_lcd_ready
  8300 ;; This function is called by:
  8301 ;;		_lcd_msg
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function _lcd_dwr
  8307  1ACC                     _lcd_dwr:	
  8308                           
  8309                           ;incstack = 0
  8310                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  8311                           ;lcd_dwr@x stored from wreg
  8312  1ACC  00F2               	movwf	lcd_dwr@x
  8313  1ACD                     l2848:	
  8314                           
  8315                           ;Lab3.c: 119:     lcd_ready();
  8316  1ACD  160A  158A  2393  160A  158A  	fcall	_lcd_ready
  8317  1AD2                     l2850:	
  8318                           
  8319                           ;Lab3.c: 120:     PORTB = x;
  8320  1AD2  0872               	movf	lcd_dwr@x,w
  8321  1AD3  1283               	bcf	3,5	;RP0=0, select bank0
  8322  1AD4  1303               	bcf	3,6	;RP1=0, select bank0
  8323  1AD5  0086               	movwf	6	;volatile
  8324  1AD6                     l2852:	
  8325                           
  8326                           ;Lab3.c: 121:     RC4 = 1;
  8327  1AD6  1607               	bsf	7,4	;volatile
  8328  1AD7                     l2854:	
  8329                           
  8330                           ;Lab3.c: 122:     RC5 = 0;
  8331  1AD7  1287               	bcf	7,5	;volatile
  8332  1AD8                     l2856:	
  8333                           
  8334                           ;Lab3.c: 123:     lcd_lat();
  8335  1AD8  160A  158A  22AB  160A  158A  	fcall	_lcd_lat
  8336  1ADD                     l85:	
  8337  1ADD  0008               	return
  8338  1ADE                     __end_of_lcd_dwr:	
  8339                           
  8340                           	psect	text26
  8341  1143                     __ptext26:	
  8342 ;; *************** function ___fldiv *****************
  8343 ;; Defined at:
  8344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  a               4   30[BANK0 ] void 
  8347 ;;  b               4   34[BANK0 ] void 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  grs             4   50[BANK0 ] unsigned long 
  8350 ;;  rem             4   43[BANK0 ] unsigned long 
  8351 ;;  new_exp         2   48[BANK0 ] int 
  8352 ;;  aexp            1   55[BANK0 ] unsigned char 
  8353 ;;  bexp            1   54[BANK0 ] unsigned char 
  8354 ;;  sign            1   47[BANK0 ] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  4   30[BANK0 ] unsigned char 
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0, btemp+1
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8364 ;;      Params:         0       8       0       0       0
  8365 ;;      Locals:         0      13       0       0       0
  8366 ;;      Temps:          0       5       0       0       0
  8367 ;;      Totals:         0      26       0       0       0
  8368 ;;Total ram usage:       26 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_voltaje1
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function ___fldiv
  8379  1143                     ___fldiv:	
  8380  1143                     l3540:	
  8381                           ;incstack = 0
  8382                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8383                           
  8384  1143  1283               	bcf	3,5	;RP0=0, select bank0
  8385  1144  1303               	bcf	3,6	;RP1=0, select bank0
  8386  1145  0845               	movf	___fldiv@b+3,w
  8387  1146  3980               	andlw	128
  8388  1147  00C6               	movwf	??___fldiv
  8389  1148  0846               	movf	??___fldiv,w
  8390  1149  00CF               	movwf	___fldiv@sign
  8391  114A                     l3542:	
  8392  114A  0845               	movf	___fldiv@b+3,w
  8393  114B  00C6               	movwf	??___fldiv
  8394  114C  0746               	addwf	??___fldiv,w
  8395  114D  00C7               	movwf	??___fldiv+1
  8396  114E  0847               	movf	??___fldiv+1,w
  8397  114F  00D6               	movwf	___fldiv@bexp
  8398  1150                     l3544:	
  8399  1150  1FC4               	btfss	___fldiv@b+2,7
  8400  1151  2953               	goto	u5891
  8401  1152  2954               	goto	u5890
  8402  1153                     u5891:	
  8403  1153  2955               	goto	l3548
  8404  1154                     u5890:	
  8405  1154                     l3546:	
  8406  1154  1456               	bsf	___fldiv@bexp,0
  8407  1155                     l3548:	
  8408  1155  0856               	movf	___fldiv@bexp,w
  8409  1156  1903               	btfsc	3,2
  8410  1157  2959               	goto	u5901
  8411  1158  295A               	goto	u5900
  8412  1159                     u5901:	
  8413  1159  296A               	goto	l3558
  8414  115A                     u5900:	
  8415  115A                     l3550:	
  8416  115A  0A56               	incf	___fldiv@bexp,w
  8417  115B  1D03               	btfss	3,2
  8418  115C  295E               	goto	u5911
  8419  115D  295F               	goto	u5910
  8420  115E                     u5911:	
  8421  115E  2967               	goto	l3554
  8422  115F                     u5910:	
  8423  115F                     l3552:	
  8424  115F  3000               	movlw	0
  8425  1160  00C5               	movwf	___fldiv@b+3
  8426  1161  3000               	movlw	0
  8427  1162  00C4               	movwf	___fldiv@b+2
  8428  1163  3000               	movlw	0
  8429  1164  00C3               	movwf	___fldiv@b+1
  8430  1165  3000               	movlw	0
  8431  1166  00C2               	movwf	___fldiv@b
  8432  1167                     l3554:	
  8433  1167  17C4               	bsf	___fldiv@b+2,7
  8434  1168                     l3556:	
  8435  1168  01C5               	clrf	___fldiv@b+3
  8436  1169  2972               	goto	l3560
  8437  116A                     l3558:	
  8438  116A  3000               	movlw	0
  8439  116B  00C5               	movwf	___fldiv@b+3
  8440  116C  3000               	movlw	0
  8441  116D  00C4               	movwf	___fldiv@b+2
  8442  116E  3000               	movlw	0
  8443  116F  00C3               	movwf	___fldiv@b+1
  8444  1170  3000               	movlw	0
  8445  1171  00C2               	movwf	___fldiv@b
  8446  1172                     l3560:	
  8447  1172  0841               	movf	___fldiv@a+3,w
  8448  1173  3980               	andlw	128
  8449  1174  00C6               	movwf	??___fldiv
  8450  1175  0846               	movf	??___fldiv,w
  8451  1176  06CF               	xorwf	___fldiv@sign,f
  8452  1177                     l3562:	
  8453  1177  0841               	movf	___fldiv@a+3,w
  8454  1178  00C6               	movwf	??___fldiv
  8455  1179  0746               	addwf	??___fldiv,w
  8456  117A  00C7               	movwf	??___fldiv+1
  8457  117B  0847               	movf	??___fldiv+1,w
  8458  117C  00D7               	movwf	___fldiv@aexp
  8459  117D                     l3564:	
  8460  117D  1FC0               	btfss	___fldiv@a+2,7
  8461  117E  2980               	goto	u5921
  8462  117F  2981               	goto	u5920
  8463  1180                     u5921:	
  8464  1180  2982               	goto	l3568
  8465  1181                     u5920:	
  8466  1181                     l3566:	
  8467  1181  1457               	bsf	___fldiv@aexp,0
  8468  1182                     l3568:	
  8469  1182  0857               	movf	___fldiv@aexp,w
  8470  1183  1903               	btfsc	3,2
  8471  1184  2986               	goto	u5931
  8472  1185  2987               	goto	u5930
  8473  1186                     u5931:	
  8474  1186  2997               	goto	l3578
  8475  1187                     u5930:	
  8476  1187                     l3570:	
  8477  1187  0A57               	incf	___fldiv@aexp,w
  8478  1188  1D03               	btfss	3,2
  8479  1189  298B               	goto	u5941
  8480  118A  298C               	goto	u5940
  8481  118B                     u5941:	
  8482  118B  2994               	goto	l3574
  8483  118C                     u5940:	
  8484  118C                     l3572:	
  8485  118C  3000               	movlw	0
  8486  118D  00C1               	movwf	___fldiv@a+3
  8487  118E  3000               	movlw	0
  8488  118F  00C0               	movwf	___fldiv@a+2
  8489  1190  3000               	movlw	0
  8490  1191  00BF               	movwf	___fldiv@a+1
  8491  1192  3000               	movlw	0
  8492  1193  00BE               	movwf	___fldiv@a
  8493  1194                     l3574:	
  8494  1194  17C0               	bsf	___fldiv@a+2,7
  8495  1195                     l3576:	
  8496  1195  01C1               	clrf	___fldiv@a+3
  8497  1196  299F               	goto	l698
  8498  1197                     l3578:	
  8499  1197  3000               	movlw	0
  8500  1198  00C1               	movwf	___fldiv@a+3
  8501  1199  3000               	movlw	0
  8502  119A  00C0               	movwf	___fldiv@a+2
  8503  119B  3000               	movlw	0
  8504  119C  00BF               	movwf	___fldiv@a+1
  8505  119D  3000               	movlw	0
  8506  119E  00BE               	movwf	___fldiv@a
  8507  119F                     l698:	
  8508  119F  0841               	movf	___fldiv@a+3,w
  8509  11A0  0440               	iorwf	___fldiv@a+2,w
  8510  11A1  043F               	iorwf	___fldiv@a+1,w
  8511  11A2  043E               	iorwf	___fldiv@a,w
  8512  11A3  1D03               	skipz
  8513  11A4  29A6               	goto	u5951
  8514  11A5  29A7               	goto	u5950
  8515  11A6                     u5951:	
  8516  11A6  29C0               	goto	l3588
  8517  11A7                     u5950:	
  8518  11A7                     l3580:	
  8519  11A7  3000               	movlw	0
  8520  11A8  00C5               	movwf	___fldiv@b+3
  8521  11A9  3000               	movlw	0
  8522  11AA  00C4               	movwf	___fldiv@b+2
  8523  11AB  3000               	movlw	0
  8524  11AC  00C3               	movwf	___fldiv@b+1
  8525  11AD  3000               	movlw	0
  8526  11AE  00C2               	movwf	___fldiv@b
  8527  11AF  3080               	movlw	128
  8528  11B0  04C4               	iorwf	___fldiv@b+2,f
  8529  11B1  307F               	movlw	127
  8530  11B2  04C5               	iorwf	___fldiv@b+3,f
  8531  11B3                     l3582:	
  8532  11B3  084F               	movf	___fldiv@sign,w
  8533  11B4  00C6               	movwf	??___fldiv
  8534  11B5  0846               	movf	??___fldiv,w
  8535  11B6  04C5               	iorwf	___fldiv@b+3,f
  8536  11B7                     l3584:	
  8537  11B7  0845               	movf	___fldiv@b+3,w
  8538  11B8  00C1               	movwf	?___fldiv+3
  8539  11B9  0844               	movf	___fldiv@b+2,w
  8540  11BA  00C0               	movwf	?___fldiv+2
  8541  11BB  0843               	movf	___fldiv@b+1,w
  8542  11BC  00BF               	movwf	?___fldiv+1
  8543  11BD  0842               	movf	___fldiv@b,w
  8544  11BE  00BE               	movwf	?___fldiv
  8545  11BF  2B1F               	goto	l700
  8546  11C0                     l3588:	
  8547  11C0  0856               	movf	___fldiv@bexp,w
  8548  11C1  1D03               	btfss	3,2
  8549  11C2  29C4               	goto	u5961
  8550  11C3  29C5               	goto	u5960
  8551  11C4                     u5961:	
  8552  11C4  29CE               	goto	l3594
  8553  11C5                     u5960:	
  8554  11C5                     l3590:	
  8555  11C5  3000               	movlw	0
  8556  11C6  00C1               	movwf	?___fldiv+3
  8557  11C7  3000               	movlw	0
  8558  11C8  00C0               	movwf	?___fldiv+2
  8559  11C9  3000               	movlw	0
  8560  11CA  00BF               	movwf	?___fldiv+1
  8561  11CB  3000               	movlw	0
  8562  11CC  00BE               	movwf	?___fldiv
  8563  11CD  2B1F               	goto	l700
  8564  11CE                     l3594:	
  8565  11CE  0856               	movf	___fldiv@bexp,w
  8566  11CF  00C6               	movwf	??___fldiv
  8567  11D0  01C7               	clrf	??___fldiv+1
  8568  11D1  0847               	movf	??___fldiv+1,w
  8569  11D2  00C9               	movwf	??___fldiv+3
  8570  11D3  0857               	movf	___fldiv@aexp,w
  8571  11D4  0246               	subwf	??___fldiv,w
  8572  11D5  00C8               	movwf	??___fldiv+2
  8573  11D6  1C03               	skipc
  8574  11D7  03C9               	decf	??___fldiv+3,f
  8575  11D8  0848               	movf	??___fldiv+2,w
  8576  11D9  3E7F               	addlw	127
  8577  11DA  00D0               	movwf	___fldiv@new_exp
  8578  11DB  0849               	movf	??___fldiv+3,w
  8579  11DC  1803               	skipnc
  8580  11DD  3E01               	addlw	1
  8581  11DE  3E00               	addlw	0
  8582  11DF  00D1               	movwf	___fldiv@new_exp+1
  8583  11E0                     l3596:	
  8584  11E0  0845               	movf	___fldiv@b+3,w
  8585  11E1  00CE               	movwf	___fldiv@rem+3
  8586  11E2  0844               	movf	___fldiv@b+2,w
  8587  11E3  00CD               	movwf	___fldiv@rem+2
  8588  11E4  0843               	movf	___fldiv@b+1,w
  8589  11E5  00CC               	movwf	___fldiv@rem+1
  8590  11E6  0842               	movf	___fldiv@b,w
  8591  11E7  00CB               	movwf	___fldiv@rem
  8592  11E8                     l3598:	
  8593  11E8  3000               	movlw	0
  8594  11E9  00C5               	movwf	___fldiv@b+3
  8595  11EA  3000               	movlw	0
  8596  11EB  00C4               	movwf	___fldiv@b+2
  8597  11EC  3000               	movlw	0
  8598  11ED  00C3               	movwf	___fldiv@b+1
  8599  11EE  3000               	movlw	0
  8600  11EF  00C2               	movwf	___fldiv@b
  8601  11F0                     l3600:	
  8602  11F0  3000               	movlw	0
  8603  11F1  00D5               	movwf	___fldiv@grs+3
  8604  11F2  3000               	movlw	0
  8605  11F3  00D4               	movwf	___fldiv@grs+2
  8606  11F4  3000               	movlw	0
  8607  11F5  00D3               	movwf	___fldiv@grs+1
  8608  11F6  3000               	movlw	0
  8609  11F7  00D2               	movwf	___fldiv@grs
  8610  11F8                     l3602:	
  8611  11F8  01D7               	clrf	___fldiv@aexp
  8612  11F9  2A44               	goto	l3622
  8613  11FA                     l3604:	
  8614  11FA  0857               	movf	___fldiv@aexp,w
  8615  11FB  1903               	btfsc	3,2
  8616  11FC  29FE               	goto	u5971
  8617  11FD  29FF               	goto	u5970
  8618  11FE                     u5971:	
  8619  11FE  2A1F               	goto	l3614
  8620  11FF                     u5970:	
  8621  11FF                     l3606:	
  8622  11FF  3001               	movlw	1
  8623  1200  00C6               	movwf	??___fldiv
  8624  1201                     u5985:	
  8625  1201  1003               	clrc
  8626  1202  0DCB               	rlf	___fldiv@rem,f
  8627  1203  0DCC               	rlf	___fldiv@rem+1,f
  8628  1204  0DCD               	rlf	___fldiv@rem+2,f
  8629  1205  0DCE               	rlf	___fldiv@rem+3,f
  8630  1206  0BC6               	decfsz	??___fldiv,f
  8631  1207  2A01               	goto	u5985
  8632  1208  3001               	movlw	1
  8633  1209  00C6               	movwf	??___fldiv
  8634  120A                     u5995:	
  8635  120A  1003               	clrc
  8636  120B  0DC2               	rlf	___fldiv@b,f
  8637  120C  0DC3               	rlf	___fldiv@b+1,f
  8638  120D  0DC4               	rlf	___fldiv@b+2,f
  8639  120E  0DC5               	rlf	___fldiv@b+3,f
  8640  120F  0BC6               	decfsz	??___fldiv,f
  8641  1210  2A0A               	goto	u5995
  8642  1211                     l3608:	
  8643  1211  1FD5               	btfss	___fldiv@grs+3,7
  8644  1212  2A14               	goto	u6001
  8645  1213  2A15               	goto	u6000
  8646  1214                     u6001:	
  8647  1214  2A16               	goto	l3612
  8648  1215                     u6000:	
  8649  1215                     l3610:	
  8650  1215  1442               	bsf	___fldiv@b,0
  8651  1216                     l3612:	
  8652  1216  3001               	movlw	1
  8653  1217  00C6               	movwf	??___fldiv
  8654  1218                     u6015:	
  8655  1218  1003               	clrc
  8656  1219  0DD2               	rlf	___fldiv@grs,f
  8657  121A  0DD3               	rlf	___fldiv@grs+1,f
  8658  121B  0DD4               	rlf	___fldiv@grs+2,f
  8659  121C  0DD5               	rlf	___fldiv@grs+3,f
  8660  121D  0BC6               	decfsz	??___fldiv,f
  8661  121E  2A18               	goto	u6015
  8662  121F                     l3614:	
  8663  121F  0841               	movf	___fldiv@a+3,w
  8664  1220  024E               	subwf	___fldiv@rem+3,w
  8665  1221  1D03               	skipz
  8666  1222  2A2D               	goto	u6025
  8667  1223  0840               	movf	___fldiv@a+2,w
  8668  1224  024D               	subwf	___fldiv@rem+2,w
  8669  1225  1D03               	skipz
  8670  1226  2A2D               	goto	u6025
  8671  1227  083F               	movf	___fldiv@a+1,w
  8672  1228  024C               	subwf	___fldiv@rem+1,w
  8673  1229  1D03               	skipz
  8674  122A  2A2D               	goto	u6025
  8675  122B  083E               	movf	___fldiv@a,w
  8676  122C  024B               	subwf	___fldiv@rem,w
  8677  122D                     u6025:	
  8678  122D  1C03               	skipc
  8679  122E  2A30               	goto	u6021
  8680  122F  2A31               	goto	u6020
  8681  1230                     u6021:	
  8682  1230  2A40               	goto	l3620
  8683  1231                     u6020:	
  8684  1231                     l3616:	
  8685  1231  1755               	bsf	___fldiv@grs+3,6
  8686  1232                     l3618:	
  8687  1232  083E               	movf	___fldiv@a,w
  8688  1233  02CB               	subwf	___fldiv@rem,f
  8689  1234  083F               	movf	___fldiv@a+1,w
  8690  1235  1C03               	skipc
  8691  1236  0F3F               	incfsz	___fldiv@a+1,w
  8692  1237  02CC               	subwf	___fldiv@rem+1,f
  8693  1238  0840               	movf	___fldiv@a+2,w
  8694  1239  1C03               	skipc
  8695  123A  0F40               	incfsz	___fldiv@a+2,w
  8696  123B  02CD               	subwf	___fldiv@rem+2,f
  8697  123C  0841               	movf	___fldiv@a+3,w
  8698  123D  1C03               	skipc
  8699  123E  0F41               	incfsz	___fldiv@a+3,w
  8700  123F  02CE               	subwf	___fldiv@rem+3,f
  8701  1240                     l3620:	
  8702  1240  3001               	movlw	1
  8703  1241  00C6               	movwf	??___fldiv
  8704  1242  0846               	movf	??___fldiv,w
  8705  1243  07D7               	addwf	___fldiv@aexp,f
  8706  1244                     l3622:	
  8707  1244  301A               	movlw	26
  8708  1245  0257               	subwf	___fldiv@aexp,w
  8709  1246  1C03               	skipc
  8710  1247  2A49               	goto	u6031
  8711  1248  2A4A               	goto	u6030
  8712  1249                     u6031:	
  8713  1249  29FA               	goto	l3604
  8714  124A                     u6030:	
  8715  124A                     l3624:	
  8716  124A  084E               	movf	___fldiv@rem+3,w
  8717  124B  044D               	iorwf	___fldiv@rem+2,w
  8718  124C  044C               	iorwf	___fldiv@rem+1,w
  8719  124D  044B               	iorwf	___fldiv@rem,w
  8720  124E  1903               	skipnz
  8721  124F  2A51               	goto	u6041
  8722  1250  2A52               	goto	u6040
  8723  1251                     u6041:	
  8724  1251  2A71               	goto	l3638
  8725  1252                     u6040:	
  8726  1252                     l3626:	
  8727  1252  1452               	bsf	___fldiv@grs,0
  8728  1253  2A71               	goto	l3638
  8729  1254                     l3628:	
  8730  1254  3001               	movlw	1
  8731  1255  00C6               	movwf	??___fldiv
  8732  1256                     u6055:	
  8733  1256  1003               	clrc
  8734  1257  0DC2               	rlf	___fldiv@b,f
  8735  1258  0DC3               	rlf	___fldiv@b+1,f
  8736  1259  0DC4               	rlf	___fldiv@b+2,f
  8737  125A  0DC5               	rlf	___fldiv@b+3,f
  8738  125B  0BC6               	decfsz	??___fldiv,f
  8739  125C  2A56               	goto	u6055
  8740  125D                     l3630:	
  8741  125D  1FD5               	btfss	___fldiv@grs+3,7
  8742  125E  2A60               	goto	u6061
  8743  125F  2A61               	goto	u6060
  8744  1260                     u6061:	
  8745  1260  2A62               	goto	l3634
  8746  1261                     u6060:	
  8747  1261                     l3632:	
  8748  1261  1442               	bsf	___fldiv@b,0
  8749  1262                     l3634:	
  8750  1262  3001               	movlw	1
  8751  1263  00C6               	movwf	??___fldiv
  8752  1264                     u6075:	
  8753  1264  1003               	clrc
  8754  1265  0DD2               	rlf	___fldiv@grs,f
  8755  1266  0DD3               	rlf	___fldiv@grs+1,f
  8756  1267  0DD4               	rlf	___fldiv@grs+2,f
  8757  1268  0DD5               	rlf	___fldiv@grs+3,f
  8758  1269  0BC6               	decfsz	??___fldiv,f
  8759  126A  2A64               	goto	u6075
  8760  126B                     l3636:	
  8761  126B  30FF               	movlw	255
  8762  126C  07D0               	addwf	___fldiv@new_exp,f
  8763  126D  1803               	skipnc
  8764  126E  0AD1               	incf	___fldiv@new_exp+1,f
  8765  126F  30FF               	movlw	255
  8766  1270  07D1               	addwf	___fldiv@new_exp+1,f
  8767  1271                     l3638:	
  8768  1271  1FC4               	btfss	___fldiv@b+2,7
  8769  1272  2A74               	goto	u6081
  8770  1273  2A75               	goto	u6080
  8771  1274                     u6081:	
  8772  1274  2A54               	goto	l3628
  8773  1275                     u6080:	
  8774  1275                     l3640:	
  8775  1275  01D7               	clrf	___fldiv@aexp
  8776  1276                     l3642:	
  8777  1276  1FD5               	btfss	___fldiv@grs+3,7
  8778  1277  2A79               	goto	u6091
  8779  1278  2A7A               	goto	u6090
  8780  1279                     u6091:	
  8781  1279  2A96               	goto	l3650
  8782  127A                     u6090:	
  8783  127A                     l3644:	
  8784  127A  30FF               	movlw	255
  8785  127B  0552               	andwf	___fldiv@grs,w
  8786  127C  00C6               	movwf	??___fldiv
  8787  127D  30FF               	movlw	255
  8788  127E  0553               	andwf	___fldiv@grs+1,w
  8789  127F  00C7               	movwf	??___fldiv+1
  8790  1280  30FF               	movlw	255
  8791  1281  0554               	andwf	___fldiv@grs+2,w
  8792  1282  00C8               	movwf	??___fldiv+2
  8793  1283  307F               	movlw	127
  8794  1284  0555               	andwf	___fldiv@grs+3,w
  8795  1285  00C9               	movwf	??___fldiv+3
  8796  1286  0849               	movf	??___fldiv+3,w
  8797  1287  0448               	iorwf	??___fldiv+2,w
  8798  1288  0447               	iorwf	??___fldiv+1,w
  8799  1289  0446               	iorwf	??___fldiv,w
  8800  128A  1903               	skipnz
  8801  128B  2A8D               	goto	u6101
  8802  128C  2A8E               	goto	u6100
  8803  128D                     u6101:	
  8804  128D  2A91               	goto	l714
  8805  128E                     u6100:	
  8806  128E                     l3646:	
  8807  128E  01D7               	clrf	___fldiv@aexp
  8808  128F  0AD7               	incf	___fldiv@aexp,f
  8809  1290  2A96               	goto	l3650
  8810  1291                     l714:	
  8811  1291  1C42               	btfss	___fldiv@b,0
  8812  1292  2A94               	goto	u6111
  8813  1293  2A95               	goto	u6110
  8814  1294                     u6111:	
  8815  1294  2A96               	goto	l3650
  8816  1295                     u6110:	
  8817  1295  2A8E               	goto	l3646
  8818  1296                     l3650:	
  8819  1296  0857               	movf	___fldiv@aexp,w
  8820  1297  1903               	btfsc	3,2
  8821  1298  2A9A               	goto	u6121
  8822  1299  2A9B               	goto	u6120
  8823  129A                     u6121:	
  8824  129A  2ACC               	goto	l3660
  8825  129B                     u6120:	
  8826  129B                     l3652:	
  8827  129B  3001               	movlw	1
  8828  129C  07C2               	addwf	___fldiv@b,f
  8829  129D  3000               	movlw	0
  8830  129E  1803               	skipnc
  8831  129F  3001               	movlw	1
  8832  12A0  07C3               	addwf	___fldiv@b+1,f
  8833  12A1  3000               	movlw	0
  8834  12A2  1803               	skipnc
  8835  12A3  3001               	movlw	1
  8836  12A4  07C4               	addwf	___fldiv@b+2,f
  8837  12A5  3000               	movlw	0
  8838  12A6  1803               	skipnc
  8839  12A7  3001               	movlw	1
  8840  12A8  07C5               	addwf	___fldiv@b+3,f
  8841  12A9                     l3654:	
  8842  12A9  1C45               	btfss	___fldiv@b+3,0
  8843  12AA  2AAC               	goto	u6131
  8844  12AB  2AAD               	goto	u6130
  8845  12AC                     u6131:	
  8846  12AC  2ACC               	goto	l3660
  8847  12AD                     u6130:	
  8848  12AD                     l3656:	
  8849  12AD  0842               	movf	___fldiv@b,w
  8850  12AE  00C6               	movwf	??___fldiv
  8851  12AF  0843               	movf	___fldiv@b+1,w
  8852  12B0  00C7               	movwf	??___fldiv+1
  8853  12B1  0844               	movf	___fldiv@b+2,w
  8854  12B2  00C8               	movwf	??___fldiv+2
  8855  12B3  0845               	movf	___fldiv@b+3,w
  8856  12B4  00C9               	movwf	??___fldiv+3
  8857  12B5  3001               	movlw	1
  8858  12B6  00CA               	movwf	??___fldiv+4
  8859  12B7                     u6145:	
  8860  12B7  0D49               	rlf	??___fldiv+3,w
  8861  12B8  0CC9               	rrf	??___fldiv+3,f
  8862  12B9  0CC8               	rrf	??___fldiv+2,f
  8863  12BA  0CC7               	rrf	??___fldiv+1,f
  8864  12BB  0CC6               	rrf	??___fldiv,f
  8865  12BC                     u6140:	
  8866  12BC  0BCA               	decfsz	??___fldiv+4,f
  8867  12BD  2AB7               	goto	u6145
  8868  12BE  0849               	movf	??___fldiv+3,w
  8869  12BF  00C5               	movwf	___fldiv@b+3
  8870  12C0  0848               	movf	??___fldiv+2,w
  8871  12C1  00C4               	movwf	___fldiv@b+2
  8872  12C2  0847               	movf	??___fldiv+1,w
  8873  12C3  00C3               	movwf	___fldiv@b+1
  8874  12C4  0846               	movf	??___fldiv,w
  8875  12C5  00C2               	movwf	___fldiv@b
  8876  12C6                     l3658:	
  8877  12C6  3001               	movlw	1
  8878  12C7  07D0               	addwf	___fldiv@new_exp,f
  8879  12C8  1803               	skipnc
  8880  12C9  0AD1               	incf	___fldiv@new_exp+1,f
  8881  12CA  3000               	movlw	0
  8882  12CB  07D1               	addwf	___fldiv@new_exp+1,f
  8883  12CC                     l3660:	
  8884  12CC  0851               	movf	___fldiv@new_exp+1,w
  8885  12CD  3A80               	xorlw	128
  8886  12CE  00FF               	movwf	btemp+1
  8887  12CF  3080               	movlw	128
  8888  12D0  027F               	subwf	btemp+1,w
  8889  12D1  1D03               	skipz
  8890  12D2  2AD5               	goto	u6155
  8891  12D3  30FF               	movlw	255
  8892  12D4  0250               	subwf	___fldiv@new_exp,w
  8893  12D5                     u6155:	
  8894  12D5  1C03               	skipc
  8895  12D6  2AD8               	goto	u6151
  8896  12D7  2AD9               	goto	u6150
  8897  12D8                     u6151:	
  8898  12D8  2AE7               	goto	l3664
  8899  12D9                     u6150:	
  8900  12D9                     l3662:	
  8901  12D9  30FF               	movlw	255
  8902  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  8903  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  8904  12DC  00D0               	movwf	___fldiv@new_exp
  8905  12DD  3000               	movlw	0
  8906  12DE  00D1               	movwf	___fldiv@new_exp+1
  8907  12DF  3000               	movlw	0
  8908  12E0  00C5               	movwf	___fldiv@b+3
  8909  12E1  3000               	movlw	0
  8910  12E2  00C4               	movwf	___fldiv@b+2
  8911  12E3  3000               	movlw	0
  8912  12E4  00C3               	movwf	___fldiv@b+1
  8913  12E5  3000               	movlw	0
  8914  12E6  00C2               	movwf	___fldiv@b
  8915  12E7                     l3664:	
  8916  12E7  1283               	bcf	3,5	;RP0=0, select bank0
  8917  12E8  1303               	bcf	3,6	;RP1=0, select bank0
  8918  12E9  0851               	movf	___fldiv@new_exp+1,w
  8919  12EA  3A80               	xorlw	128
  8920  12EB  00FF               	movwf	btemp+1
  8921  12EC  3080               	movlw	128
  8922  12ED  027F               	subwf	btemp+1,w
  8923  12EE  1D03               	skipz
  8924  12EF  2AF2               	goto	u6165
  8925  12F0  3001               	movlw	1
  8926  12F1  0250               	subwf	___fldiv@new_exp,w
  8927  12F2                     u6165:	
  8928  12F2  1803               	skipnc
  8929  12F3  2AF5               	goto	u6161
  8930  12F4  2AF6               	goto	u6160
  8931  12F5                     u6161:	
  8932  12F5  2B03               	goto	l720
  8933  12F6                     u6160:	
  8934  12F6                     l3666:	
  8935  12F6  1283               	bcf	3,5	;RP0=0, select bank0
  8936  12F7  1303               	bcf	3,6	;RP1=0, select bank0
  8937  12F8  01D0               	clrf	___fldiv@new_exp
  8938  12F9  01D1               	clrf	___fldiv@new_exp+1
  8939  12FA                     l3668:	
  8940  12FA  3000               	movlw	0
  8941  12FB  00C5               	movwf	___fldiv@b+3
  8942  12FC  3000               	movlw	0
  8943  12FD  00C4               	movwf	___fldiv@b+2
  8944  12FE  3000               	movlw	0
  8945  12FF  00C3               	movwf	___fldiv@b+1
  8946  1300  3000               	movlw	0
  8947  1301  00C2               	movwf	___fldiv@b
  8948  1302                     l3670:	
  8949  1302  01CF               	clrf	___fldiv@sign
  8950  1303                     l720:	
  8951  1303  1283               	bcf	3,5	;RP0=0, select bank0
  8952  1304  1303               	bcf	3,6	;RP1=0, select bank0
  8953  1305  0850               	movf	___fldiv@new_exp,w
  8954  1306  00C6               	movwf	??___fldiv
  8955  1307  0846               	movf	??___fldiv,w
  8956  1308  00D6               	movwf	___fldiv@bexp
  8957  1309                     l3672:	
  8958  1309  1C56               	btfss	___fldiv@bexp,0
  8959  130A  2B0C               	goto	u6171
  8960  130B  2B0D               	goto	u6170
  8961  130C                     u6171:	
  8962  130C  2B0F               	goto	l3676
  8963  130D                     u6170:	
  8964  130D                     l3674:	
  8965  130D  17C4               	bsf	___fldiv@b+2,7
  8966  130E  2B13               	goto	l722
  8967  130F                     l3676:	
  8968  130F  307F               	movlw	127
  8969  1310  00C6               	movwf	??___fldiv
  8970  1311  0846               	movf	??___fldiv,w
  8971  1312  05C4               	andwf	___fldiv@b+2,f
  8972  1313                     l722:	
  8973  1313  0856               	movf	___fldiv@bexp,w
  8974  1314  00C6               	movwf	??___fldiv
  8975  1315  1003               	clrc
  8976  1316  0C46               	rrf	??___fldiv,w
  8977  1317  00C7               	movwf	??___fldiv+1
  8978  1318  0847               	movf	??___fldiv+1,w
  8979  1319  00C5               	movwf	___fldiv@b+3
  8980  131A  084F               	movf	___fldiv@sign,w
  8981  131B  00C6               	movwf	??___fldiv
  8982  131C  0846               	movf	??___fldiv,w
  8983  131D  04C5               	iorwf	___fldiv@b+3,f
  8984  131E  29B7               	goto	l3584
  8985  131F                     l700:	
  8986  131F  0008               	return
  8987  1320                     __end_of___fldiv:	
  8988                           
  8989                           	psect	text27
  8990  1ADE                     __ptext27:	
  8991 ;; *************** function _lcd_init *****************
  8992 ;; Defined at:
  8993 ;;		line 131 in file "Lab3.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0, pclath, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9007 ;;      Params:         0       0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0
  9010 ;;      Totals:         0       0       0       0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    2
  9014 ;; This function calls:
  9015 ;;		_lcd_cmd
  9016 ;; This function is called by:
  9017 ;;		_main
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _lcd_init
  9023  1ADE                     _lcd_init:	
  9024  1ADE                     l3682:	
  9025                           ;incstack = 0
  9026                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  9027                           
  9028                           
  9029                           ;Lab3.c: 132:     lcd_cmd(0x38);
  9030  1ADE  3038               	movlw	56
  9031  1ADF  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  9032                           
  9033                           ;Lab3.c: 133:     lcd_cmd(0x0C);
  9034  1AE4  300C               	movlw	12
  9035  1AE5  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  9036                           
  9037                           ;Lab3.c: 134:     lcd_cmd(0x01);
  9038  1AEA  3001               	movlw	1
  9039  1AEB  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  9040                           
  9041                           ;Lab3.c: 135:     lcd_cmd(0x06);
  9042  1AF0  3006               	movlw	6
  9043  1AF1  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  9044                           
  9045                           ;Lab3.c: 136:     lcd_cmd(0x80);
  9046  1AF6  3080               	movlw	128
  9047  1AF7  160A  158A  22BA  160A  158A  	fcall	_lcd_cmd
  9048  1AFC                     l94:	
  9049  1AFC  0008               	return
  9050  1AFD                     __end_of_lcd_init:	
  9051                           
  9052                           	psect	text28
  9053  1ABA                     __ptext28:	
  9054 ;; *************** function _lcd_cmd *****************
  9055 ;; Defined at:
  9056 ;;		line 88 in file "Lab3.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  x               1    wreg     unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  x               1    2[COMMON] unsigned char 
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, status,2, status,0, pclath, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9070 ;;      Params:         0       0       0       0       0
  9071 ;;      Locals:         1       0       0       0       0
  9072 ;;      Temps:          0       0       0       0       0
  9073 ;;      Totals:         1       0       0       0       0
  9074 ;;Total ram usage:        1 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:    1
  9077 ;; This function calls:
  9078 ;;		_lcd_lat
  9079 ;;		_lcd_ready
  9080 ;; This function is called by:
  9081 ;;		_main
  9082 ;;		_lcd_init
  9083 ;;		_voltaje1
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           
  9088                           ;psect for function _lcd_cmd
  9089  1ABA                     _lcd_cmd:	
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  9093                           ;lcd_cmd@x stored from wreg
  9094  1ABA  00F2               	movwf	lcd_cmd@x
  9095  1ABB                     l3216:	
  9096                           
  9097                           ;Lab3.c: 89:     lcd_ready();
  9098  1ABB  160A  158A  2393  160A  158A  	fcall	_lcd_ready
  9099  1AC0                     l3218:	
  9100                           
  9101                           ;Lab3.c: 90:     PORTB = x;
  9102  1AC0  0872               	movf	lcd_cmd@x,w
  9103  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
  9104  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
  9105  1AC3  0086               	movwf	6	;volatile
  9106  1AC4                     l3220:	
  9107                           
  9108                           ;Lab3.c: 91:     RC4 = 0;
  9109  1AC4  1207               	bcf	7,4	;volatile
  9110  1AC5                     l3222:	
  9111                           
  9112                           ;Lab3.c: 92:     RC5 = 0;
  9113  1AC5  1287               	bcf	7,5	;volatile
  9114  1AC6                     l3224:	
  9115                           
  9116                           ;Lab3.c: 93:     lcd_lat();
  9117  1AC6  160A  158A  22AB  160A  158A  	fcall	_lcd_lat
  9118  1ACB                     l74:	
  9119  1ACB  0008               	return
  9120  1ACC                     __end_of_lcd_cmd:	
  9121                           
  9122                           	psect	text29
  9123  1B93                     __ptext29:	
  9124 ;; *************** function _lcd_ready *****************
  9125 ;; Defined at:
  9126 ;;		line 101 in file "Lab3.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9140 ;;      Params:         0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0
  9142 ;;      Temps:          2       0       0       0       0
  9143 ;;      Totals:         2       0       0       0       0
  9144 ;;Total ram usage:        2 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_lcd_cmd
  9150 ;;		_lcd_dwr
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _lcd_ready
  9156  1B93                     _lcd_ready:	
  9157  1B93                     l2358:	
  9158                           ;incstack = 0
  9159                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  9160                           
  9161                           
  9162                           ;Lab3.c: 102:     PORTB = 0xFF;
  9163  1B93  30FF               	movlw	255
  9164  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  9165  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  9166  1B96  0086               	movwf	6	;volatile
  9167  1B97                     l2360:	
  9168                           
  9169                           ;Lab3.c: 103:     PORTB &= 0x80;
  9170  1B97  3080               	movlw	128
  9171  1B98  00F0               	movwf	??_lcd_ready
  9172  1B99  0870               	movf	??_lcd_ready,w
  9173  1B9A  0586               	andwf	6,f	;volatile
  9174  1B9B                     l2362:	
  9175                           
  9176                           ;Lab3.c: 104:     RC4 = 0;
  9177  1B9B  1207               	bcf	7,4	;volatile
  9178  1B9C                     l2364:	
  9179                           
  9180                           ;Lab3.c: 105:     RC5 = 1;
  9181  1B9C  1687               	bsf	7,5	;volatile
  9182  1B9D                     l2366:	
  9183                           
  9184                           ;Lab3.c: 106:     RC6 = 0;
  9185  1B9D  1307               	bcf	7,6	;volatile
  9186  1B9E                     l2368:	
  9187                           
  9188                           ;Lab3.c: 107:     _delay((unsigned long)((30)*(4000000/4000.0)));
  9189  1B9E  3027               	movlw	39
  9190  1B9F  00F1               	movwf	??_lcd_ready+1
  9191  1BA0  30F5               	movlw	245
  9192  1BA1  00F0               	movwf	??_lcd_ready
  9193  1BA2                     u6217:	
  9194  1BA2  0BF0               	decfsz	??_lcd_ready,f
  9195  1BA3  2BA2               	goto	u6217
  9196  1BA4  0BF1               	decfsz	??_lcd_ready+1,f
  9197  1BA5  2BA2               	goto	u6217
  9198  1BA6                     l2370:	
  9199                           
  9200                           ;Lab3.c: 108:     RC6 = 1;
  9201  1BA6  1283               	bcf	3,5	;RP0=0, select bank0
  9202  1BA7  1303               	bcf	3,6	;RP1=0, select bank0
  9203  1BA8  1707               	bsf	7,6	;volatile
  9204                           
  9205                           ;Lab3.c: 109:     if (PORTB == 0x80){
  9206  1BA9  3080               	movlw	128
  9207  1BAA  0606               	xorwf	6,w	;volatile
  9208  1BAB  1D03               	btfss	3,2
  9209  1BAC  2BAE               	goto	u3131
  9210  1BAD  2BAF               	goto	u3130
  9211  1BAE                     u3131:	
  9212  1BAE  2BBB               	goto	l82
  9213  1BAF                     u3130:	
  9214  1BAF                     l2372:	
  9215                           
  9216                           ;Lab3.c: 110:     RC6 = 0;
  9217  1BAF  1307               	bcf	7,6	;volatile
  9218  1BB0                     l2374:	
  9219                           
  9220                           ;Lab3.c: 111:     _delay((unsigned long)((30)*(4000000/4000.0)));
  9221  1BB0  3027               	movlw	39
  9222  1BB1  00F1               	movwf	??_lcd_ready+1
  9223  1BB2  30F5               	movlw	245
  9224  1BB3  00F0               	movwf	??_lcd_ready
  9225  1BB4                     u6227:	
  9226  1BB4  0BF0               	decfsz	??_lcd_ready,f
  9227  1BB5  2BB4               	goto	u6227
  9228  1BB6  0BF1               	decfsz	??_lcd_ready+1,f
  9229  1BB7  2BB4               	goto	u6227
  9230  1BB8                     l2376:	
  9231                           
  9232                           ;Lab3.c: 112:     RC6 = 1;
  9233  1BB8  1283               	bcf	3,5	;RP0=0, select bank0
  9234  1BB9  1303               	bcf	3,6	;RP1=0, select bank0
  9235  1BBA  1707               	bsf	7,6	;volatile
  9236  1BBB                     l82:	
  9237                           ;Lab3.c: 113:     }
  9238                           
  9239  1BBB  0008               	return
  9240  1BBC                     __end_of_lcd_ready:	
  9241                           
  9242                           	psect	text30
  9243  1AAB                     __ptext30:	
  9244 ;; *************** function _lcd_lat *****************
  9245 ;; Defined at:
  9246 ;;		line 96 in file "Lab3.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;		None
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      void 
  9253 ;; Registers used:
  9254 ;;		wreg
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9260 ;;      Params:         0       0       0       0       0
  9261 ;;      Locals:         0       0       0       0       0
  9262 ;;      Temps:          2       0       0       0       0
  9263 ;;      Totals:         2       0       0       0       0
  9264 ;;Total ram usage:        2 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_lcd_cmd
  9270 ;;		_lcd_dwr
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           
  9275                           ;psect for function _lcd_lat
  9276  1AAB                     _lcd_lat:	
  9277  1AAB                     l2378:	
  9278                           ;incstack = 0
  9279                           ; Regs used in _lcd_lat: [wreg]
  9280                           
  9281                           
  9282                           ;Lab3.c: 97:     RC6 = 1;
  9283  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  9284  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  9285  1AAD  1707               	bsf	7,6	;volatile
  9286  1AAE                     l2380:	
  9287                           
  9288                           ;Lab3.c: 98:    _delay((unsigned long)((30)*(4000000/4000.0)));
  9289  1AAE  3027               	movlw	39
  9290  1AAF  00F1               	movwf	??_lcd_lat+1
  9291  1AB0  30F5               	movlw	245
  9292  1AB1  00F0               	movwf	??_lcd_lat
  9293  1AB2                     u6237:	
  9294  1AB2  0BF0               	decfsz	??_lcd_lat,f
  9295  1AB3  2AB2               	goto	u6237
  9296  1AB4  0BF1               	decfsz	??_lcd_lat+1,f
  9297  1AB5  2AB2               	goto	u6237
  9298  1AB6                     l2382:	
  9299                           
  9300                           ;Lab3.c: 99:    RC6 = 0;
  9301  1AB6  1283               	bcf	3,5	;RP0=0, select bank0
  9302  1AB7  1303               	bcf	3,6	;RP1=0, select bank0
  9303  1AB8  1307               	bcf	7,6	;volatile
  9304  1AB9                     l77:	
  9305  1AB9  0008               	return
  9306  1ABA                     __end_of_lcd_lat:	
  9307  007E                     btemp	set	126	;btemp
  9308  007E                     wtemp0	set	126
  9309                           
  9310                           	psect	text2_split_1
  9311  02A9                     u5480:	
  9312  02A9                     l3336:	
  9313  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  9314  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  9315  02AB  0840               	movf	(sprintf@fval+3)^(0+128),w
  9316  02AC  00F3               	movwf	___fleq@ff1+3
  9317  02AD  083F               	movf	(sprintf@fval+2)^(0+128),w
  9318  02AE  00F2               	movwf	___fleq@ff1+2
  9319  02AF  083E               	movf	(sprintf@fval+1)^(0+128),w
  9320  02B0  00F1               	movwf	___fleq@ff1+1
  9321  02B1  083D               	movf	sprintf@fval^(0+128),w
  9322  02B2  00F0               	movwf	___fleq@ff1
  9323  02B3  3000               	movlw	0
  9324  02B4  00F7               	movwf	___fleq@ff2+3
  9325  02B5  3000               	movlw	0
  9326  02B6  00F6               	movwf	___fleq@ff2+2
  9327  02B7  3000               	movlw	0
  9328  02B8  00F5               	movwf	___fleq@ff2+1
  9329  02B9  3000               	movlw	0
  9330  02BA  00F4               	movwf	___fleq@ff2
  9331  02BB  160A  158A  2476  120A  118A  	fcall	___fleq
  9332  02C0  1803               	btfsc	3,0
  9333  02C1  2AC3               	goto	u5491
  9334  02C2  2AC4               	goto	u5490
  9335  02C3                     u5491:	
  9336  02C3  2B6C               	goto	l3356
  9337  02C4                     u5490:	
  9338  02C4                     l3338:	
  9339  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  9340  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  9341  02C6  0840               	movf	(sprintf@fval+3)^(0+128),w
  9342  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  9343  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  9344  02C9  00D4               	movwf	___fltol@f1+3
  9345  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  9346  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  9347  02CC  083F               	movf	(sprintf@fval+2)^(0+128),w
  9348  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  9349  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  9350  02CF  00D3               	movwf	___fltol@f1+2
  9351  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  9352  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  9353  02D2  083E               	movf	(sprintf@fval+1)^(0+128),w
  9354  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  9355  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  9356  02D5  00D2               	movwf	___fltol@f1+1
  9357  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  9358  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  9359  02D8  083D               	movf	sprintf@fval^(0+128),w
  9360  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  9361  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  9362  02DB  00D1               	movwf	___fltol@f1
  9363  02DC  160A  118A  2009  120A  118A  	fcall	___fltol
  9364  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  9365  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  9366  02E3  0854               	movf	?___fltol+3,w
  9367  02E4  0453               	iorwf	?___fltol+2,w
  9368  02E5  0452               	iorwf	?___fltol+1,w
  9369  02E6  0451               	iorwf	?___fltol,w
  9370  02E7  1D03               	skipz
  9371  02E8  2AEA               	goto	u5501
  9372  02E9  2AEB               	goto	u5500
  9373  02EA                     u5501:	
  9374  02EA  2B6C               	goto	l3356
  9375  02EB                     u5500:	
  9376  02EB                     l3340:	
  9377  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  9378  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  9379  02ED  0838               	movf	(sprintf@eexp+1)^(0+128),w
  9380  02EE  3A80               	xorlw	128
  9381  02EF  00FF               	movwf	btemp+1
  9382  02F0  3080               	movlw	128
  9383  02F1  027F               	subwf	btemp+1,w
  9384  02F2  1D03               	skipz
  9385  02F3  2AF6               	goto	u5515
  9386  02F4  3002               	movlw	2
  9387  02F5  0237               	subwf	sprintf@eexp^(0+128),w
  9388  02F6                     u5515:	
  9389  02F6  1C03               	skipc
  9390  02F7  2AF9               	goto	u5511
  9391  02F8  2AFA               	goto	u5510
  9392  02F9                     u5511:	
  9393  02F9  2B6C               	goto	l3356
  9394  02FA                     u5510:	
  9395  02FA                     l3342:	
  9396                           
  9397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  9398  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  9399  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  9400  02FC  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  9401  02FD  00F3               	movwf	___flge@ff1+3
  9402  02FE  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  9403  02FF  00F2               	movwf	___flge@ff1+2
  9404  0300  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  9405  0301  00F1               	movwf	___flge@ff1+1
  9406  0302  0833               	movf	sprintf@tmpval^(0+128),w
  9407  0303  00F0               	movwf	___flge@ff1
  9408  0304  3040               	movlw	64
  9409  0305  00F7               	movwf	___flge@ff2+3
  9410  0306  3089               	movlw	137
  9411  0307  00F6               	movwf	___flge@ff2+2
  9412  0308  3070               	movlw	112
  9413  0309  00F5               	movwf	___flge@ff2+1
  9414  030A  305F               	movlw	95
  9415  030B  00F4               	movwf	___flge@ff2
  9416  030C  160A  158A  25E7  120A  118A  	fcall	___flge
  9417  0311  1803               	btfsc	3,0
  9418  0312  2B14               	goto	u5521
  9419  0313  2B15               	goto	u5520
  9420  0314                     u5521:	
  9421  0314  2B1E               	goto	l3346
  9422  0315                     u5520:	
  9423  0315                     l3344:	
  9424                           
  9425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9426  0315  30F7               	movlw	247
  9427  0316  1683               	bsf	3,5	;RP0=1, select bank1
  9428  0317  1303               	bcf	3,6	;RP1=0, select bank1
  9429  0318  07B7               	addwf	sprintf@eexp^(0+128),f
  9430  0319  1803               	skipnc
  9431  031A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  9432  031B  30FF               	movlw	255
  9433  031C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  9436  031D  2B26               	goto	l3348
  9437  031E                     l3346:	
  9438                           
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9440  031E  30F8               	movlw	248
  9441  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9442  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9443  0321  07B7               	addwf	sprintf@eexp^(0+128),f
  9444  0322  1803               	skipnc
  9445  0323  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  9446  0324  30FF               	movlw	255
  9447  0325  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  9448  0326                     l3348:	
  9449                           
  9450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  9451  0326  0837               	movf	sprintf@eexp^(0+128),w
  9452  0327  120A  158A  2140  120A  118A  	fcall	_scale
  9453  032C  1283               	bcf	3,5	;RP0=0, select bank0
  9454  032D  1303               	bcf	3,6	;RP1=0, select bank0
  9455  032E  0841               	movf	?_scale+3,w
  9456  032F  1683               	bsf	3,5	;RP0=1, select bank1
  9457  0330  1303               	bcf	3,6	;RP1=0, select bank1
  9458  0331  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  9459  0332  1283               	bcf	3,5	;RP0=0, select bank0
  9460  0333  1303               	bcf	3,6	;RP1=0, select bank0
  9461  0334  0840               	movf	?_scale+2,w
  9462  0335  1683               	bsf	3,5	;RP0=1, select bank1
  9463  0336  1303               	bcf	3,6	;RP1=0, select bank1
  9464  0337  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  9465  0338  1283               	bcf	3,5	;RP0=0, select bank0
  9466  0339  1303               	bcf	3,6	;RP1=0, select bank0
  9467  033A  083F               	movf	?_scale+1,w
  9468  033B  1683               	bsf	3,5	;RP0=1, select bank1
  9469  033C  1303               	bcf	3,6	;RP1=0, select bank1
  9470  033D  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  9471  033E  1283               	bcf	3,5	;RP0=0, select bank0
  9472  033F  1303               	bcf	3,6	;RP1=0, select bank0
  9473  0340  083E               	movf	?_scale,w
  9474  0341  1683               	bsf	3,5	;RP0=1, select bank1
  9475  0342  1303               	bcf	3,6	;RP1=0, select bank1
  9476  0343  00B3               	movwf	sprintf@tmpval^(0+128)
  9477  0344                     l3350:	
  9478  0344  0840               	movf	(sprintf@fval+3)^(0+128),w
  9479  0345  00F3               	movwf	__div_to_l_@f1+3
  9480  0346  083F               	movf	(sprintf@fval+2)^(0+128),w
  9481  0347  00F2               	movwf	__div_to_l_@f1+2
  9482  0348  083E               	movf	(sprintf@fval+1)^(0+128),w
  9483  0349  00F1               	movwf	__div_to_l_@f1+1
  9484  034A  083D               	movf	sprintf@fval^(0+128),w
  9485  034B  00F0               	movwf	__div_to_l_@f1
  9486  034C  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  9487  034D  00F7               	movwf	__div_to_l_@f2+3
  9488  034E  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  9489  034F  00F6               	movwf	__div_to_l_@f2+2
  9490  0350  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  9491  0351  00F5               	movwf	__div_to_l_@f2+1
  9492  0352  0833               	movf	sprintf@tmpval^(0+128),w
  9493  0353  00F4               	movwf	__div_to_l_@f2
  9494  0354  160A  118A  2085  120A  118A  	fcall	__div_to_l_
  9495  0359  0873               	movf	?__div_to_l_+3,w
  9496  035A  1683               	bsf	3,5	;RP0=1, select bank1
  9497  035B  1303               	bcf	3,6	;RP1=0, select bank1
  9498  035C  00B2               	movwf	(sprintf@val+3)^(0+128)
  9499  035D  0872               	movf	?__div_to_l_+2,w
  9500  035E  00B1               	movwf	(sprintf@val+2)^(0+128)
  9501  035F  0871               	movf	?__div_to_l_+1,w
  9502  0360  00B0               	movwf	(sprintf@val+1)^(0+128)
  9503  0361  0870               	movf	?__div_to_l_,w
  9504  0362  00AF               	movwf	sprintf@val^(0+128)
  9505  0363                     l3354:	
  9506                           
  9507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  9508  0363  3000               	movlw	0
  9509  0364  00C0               	movwf	(sprintf@fval+3)^(0+128)
  9510  0365  3000               	movlw	0
  9511  0366  00BF               	movwf	(sprintf@fval+2)^(0+128)
  9512  0367  3000               	movlw	0
  9513  0368  00BE               	movwf	(sprintf@fval+1)^(0+128)
  9514  0369  3000               	movlw	0
  9515  036A  00BD               	movwf	sprintf@fval^(0+128)
  9516                           
  9517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  9518  036B  2BF0               	goto	l3362
  9519  036C                     l3356:	
  9520                           
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  9522  036C  1683               	bsf	3,5	;RP0=1, select bank1
  9523  036D  1303               	bcf	3,6	;RP1=0, select bank1
  9524  036E  0840               	movf	(sprintf@fval+3)^(0+128),w
  9525  036F  1283               	bcf	3,5	;RP0=0, select bank0
  9526  0370  1303               	bcf	3,6	;RP1=0, select bank0
  9527  0371  00D4               	movwf	___fltol@f1+3
  9528  0372  1683               	bsf	3,5	;RP0=1, select bank1
  9529  0373  1303               	bcf	3,6	;RP1=0, select bank1
  9530  0374  083F               	movf	(sprintf@fval+2)^(0+128),w
  9531  0375  1283               	bcf	3,5	;RP0=0, select bank0
  9532  0376  1303               	bcf	3,6	;RP1=0, select bank0
  9533  0377  00D3               	movwf	___fltol@f1+2
  9534  0378  1683               	bsf	3,5	;RP0=1, select bank1
  9535  0379  1303               	bcf	3,6	;RP1=0, select bank1
  9536  037A  083E               	movf	(sprintf@fval+1)^(0+128),w
  9537  037B  1283               	bcf	3,5	;RP0=0, select bank0
  9538  037C  1303               	bcf	3,6	;RP1=0, select bank0
  9539  037D  00D2               	movwf	___fltol@f1+1
  9540  037E  1683               	bsf	3,5	;RP0=1, select bank1
  9541  037F  1303               	bcf	3,6	;RP1=0, select bank1
  9542  0380  083D               	movf	sprintf@fval^(0+128),w
  9543  0381  1283               	bcf	3,5	;RP0=0, select bank0
  9544  0382  1303               	bcf	3,6	;RP1=0, select bank0
  9545  0383  00D1               	movwf	___fltol@f1
  9546  0384  160A  118A  2009  120A  118A  	fcall	___fltol
  9547  0389  1283               	bcf	3,5	;RP0=0, select bank0
  9548  038A  1303               	bcf	3,6	;RP1=0, select bank0
  9549  038B  0854               	movf	?___fltol+3,w
  9550  038C  1683               	bsf	3,5	;RP0=1, select bank1
  9551  038D  1303               	bcf	3,6	;RP1=0, select bank1
  9552  038E  00B2               	movwf	(sprintf@val+3)^(0+128)
  9553  038F  1283               	bcf	3,5	;RP0=0, select bank0
  9554  0390  1303               	bcf	3,6	;RP1=0, select bank0
  9555  0391  0853               	movf	?___fltol+2,w
  9556  0392  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0393  1303               	bcf	3,6	;RP1=0, select bank1
  9558  0394  00B1               	movwf	(sprintf@val+2)^(0+128)
  9559  0395  1283               	bcf	3,5	;RP0=0, select bank0
  9560  0396  1303               	bcf	3,6	;RP1=0, select bank0
  9561  0397  0852               	movf	?___fltol+1,w
  9562  0398  1683               	bsf	3,5	;RP0=1, select bank1
  9563  0399  1303               	bcf	3,6	;RP1=0, select bank1
  9564  039A  00B0               	movwf	(sprintf@val+1)^(0+128)
  9565  039B  1283               	bcf	3,5	;RP0=0, select bank0
  9566  039C  1303               	bcf	3,6	;RP1=0, select bank0
  9567  039D  0851               	movf	?___fltol,w
  9568  039E  1683               	bsf	3,5	;RP0=1, select bank1
  9569  039F  1303               	bcf	3,6	;RP1=0, select bank1
  9570  03A0  00AF               	movwf	sprintf@val^(0+128)
  9571  03A1                     l3358:	
  9572                           
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  9574  03A1  0832               	movf	(sprintf@val+3)^(0+128),w
  9575  03A2  00F3               	movwf	___xxtofl@val+3
  9576  03A3  0831               	movf	(sprintf@val+2)^(0+128),w
  9577  03A4  00F2               	movwf	___xxtofl@val+2
  9578  03A5  0830               	movf	(sprintf@val+1)^(0+128),w
  9579  03A6  00F1               	movwf	___xxtofl@val+1
  9580  03A7  082F               	movf	sprintf@val^(0+128),w
  9581  03A8  00F0               	movwf	___xxtofl@val
  9582  03A9  3000               	movlw	0
  9583  03AA  160A  158A  2689  120A  118A  	fcall	___xxtofl
  9584  03AF  0873               	movf	?___xxtofl+3,w
  9585  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  9586  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  9587  03B2  00E9               	movwf	___flsub@a+3
  9588  03B3  0872               	movf	?___xxtofl+2,w
  9589  03B4  00E8               	movwf	___flsub@a+2
  9590  03B5  0871               	movf	?___xxtofl+1,w
  9591  03B6  00E7               	movwf	___flsub@a+1
  9592  03B7  0870               	movf	?___xxtofl,w
  9593  03B8  00E6               	movwf	___flsub@a
  9594  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  9595  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  9596  03BB  0840               	movf	(sprintf@fval+3)^(0+128),w
  9597  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  9598  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  9599  03BE  00ED               	movwf	___flsub@b+3
  9600  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  9601  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  9602  03C1  083F               	movf	(sprintf@fval+2)^(0+128),w
  9603  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  9604  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  9605  03C4  00EC               	movwf	___flsub@b+2
  9606  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  9607  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  9608  03C7  083E               	movf	(sprintf@fval+1)^(0+128),w
  9609  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  9610  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  9611  03CA  00EB               	movwf	___flsub@b+1
  9612  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  9613  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  9614  03CD  083D               	movf	sprintf@fval^(0+128),w
  9615  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  9616  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  9617  03D0  00EA               	movwf	___flsub@b
  9618  03D1  160A  158A  22FD  120A  118A  	fcall	___flsub
  9619  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  9620  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  9621  03D8  0869               	movf	?___flsub+3,w
  9622  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  9623  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  9624  03DB  00C0               	movwf	(sprintf@fval+3)^(0+128)
  9625  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  9626  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  9627  03DE  0868               	movf	?___flsub+2,w
  9628  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  9629  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  9630  03E1  00BF               	movwf	(sprintf@fval+2)^(0+128)
  9631  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  9632  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  9633  03E4  0867               	movf	?___flsub+1,w
  9634  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  9635  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  9636  03E7  00BE               	movwf	(sprintf@fval+1)^(0+128)
  9637  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  9638  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  9639  03EA  0866               	movf	?___flsub,w
  9640  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  9641  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  9642  03ED  00BD               	movwf	sprintf@fval^(0+128)
  9643  03EE                     l3360:	
  9644                           
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  9646  03EE  01B7               	clrf	sprintf@eexp^(0+128)
  9647  03EF  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  9648  03F0                     l3362:	
  9649                           
  9650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9651  03F0  01C4               	clrf	sprintf@c^(0+128)
  9652  03F1  0AC4               	incf	sprintf@c^(0+128),f
  9653  03F2                     l3368:	
  9654                           
  9655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  9656  03F2  0844               	movf	sprintf@c^(0+128),w
  9657  03F3  00A5               	movwf	??_sprintf^(0+128)
  9658  03F4  3001               	movlw	1
  9659  03F5                     u5535:	
  9660  03F5  1003               	clrc
  9661  03F6  0DA5               	rlf	??_sprintf^(0+128),f
  9662  03F7  3EFF               	addlw	-1
  9663  03F8  1D03               	skipz
  9664  03F9  2BF5               	goto	u5535
  9665  03FA  1003               	clrc
  9666  03FB  0D25               	rlf	??_sprintf^(0+128),w
  9667  03FC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9668  03FD  0084               	movwf	4
  9669  03FE  160A  158A  200A  120A  118A  	fcall	stringdir
  9670  0403  00A6               	movwf	(??_sprintf+1)^(0+128)
  9671  0404  160A  158A  200A  120A  118A  	fcall	stringdir
  9672  0409  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  9673  040A  160A  158A  200A  120A  118A  	fcall	stringdir
  9674  040F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  9675  0410  160A  158A  200A  120A  118A  	fcall	stringdir
  9676  0415  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  9677  0416  0829               	movf	(??_sprintf+4)^(0+128),w
  9678  0417  0232               	subwf	(sprintf@val+3)^(0+128),w
  9679  0418  1D03               	skipz
  9680  0419  2C24               	goto	u5545
  9681  041A  0828               	movf	(??_sprintf+3)^(0+128),w
  9682  041B  0231               	subwf	(sprintf@val+2)^(0+128),w
  9683  041C  1D03               	skipz
  9684  041D  2C24               	goto	u5545
  9685  041E  0827               	movf	(??_sprintf+2)^(0+128),w
  9686  041F  0230               	subwf	(sprintf@val+1)^(0+128),w
  9687  0420  1D03               	skipz
  9688  0421  2C24               	goto	u5545
  9689  0422  0826               	movf	(??_sprintf+1)^(0+128),w
  9690  0423  022F               	subwf	sprintf@val^(0+128),w
  9691  0424                     u5545:	
  9692  0424  1803               	skipnc
  9693  0425  2C27               	goto	u5541
  9694  0426  2C28               	goto	u5540
  9695  0427                     u5541:	
  9696  0427  2C29               	goto	l3372
  9697  0428                     u5540:	
  9698  0428  2C33               	goto	l3374
  9699  0429                     l3372:	
  9700  0429  3001               	movlw	1
  9701  042A  00A5               	movwf	??_sprintf^(0+128)
  9702  042B  0825               	movf	??_sprintf^(0+128),w
  9703  042C  07C4               	addwf	sprintf@c^(0+128),f
  9704  042D  300A               	movlw	10
  9705  042E  0644               	xorwf	sprintf@c^(0+128),w
  9706  042F  1D03               	btfss	3,2
  9707  0430  2C32               	goto	u5551
  9708  0431  2C33               	goto	u5550
  9709  0432                     u5551:	
  9710  0432  2BF2               	goto	l3368
  9711  0433                     u5550:	
  9712  0433                     l3374:	
  9713                           
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
  9715  0433  0844               	movf	sprintf@c^(0+128),w
  9716  0434  0741               	addwf	sprintf@prec^(0+128),w
  9717  0435  00A5               	movwf	??_sprintf^(0+128)
  9718  0436  0842               	movf	(sprintf@prec+1)^(0+128),w
  9719  0437  1803               	skipnc
  9720  0438  0A42               	incf	(sprintf@prec+1)^(0+128),w
  9721  0439  00A6               	movwf	(??_sprintf^(0+128)+1)
  9722  043A  0837               	movf	sprintf@eexp^(0+128),w
  9723  043B  0725               	addwf	??_sprintf^(0+128),w
  9724  043C  00A7               	movwf	(??_sprintf+2)^(0+128)
  9725  043D  0838               	movf	(sprintf@eexp+1)^(0+128),w
  9726  043E  1803               	skipnc
  9727  043F  0A38               	incf	(sprintf@eexp+1)^(0+128),w
  9728  0440  0726               	addwf	(??_sprintf+1)^(0+128),w
  9729  0441  00A8               	movwf	(??_sprintf+3)^(0+128)
  9730  0442  0827               	movf	(??_sprintf+2)^(0+128),w
  9731  0443  02BB               	subwf	sprintf@width^(0+128),f
  9732  0444  0828               	movf	(??_sprintf+3)^(0+128),w
  9733  0445  1C03               	skipc
  9734  0446  03BC               	decf	(sprintf@width+1)^(0+128),f
  9735  0447  02BC               	subwf	(sprintf@width+1)^(0+128),f
  9736                           
  9737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
  9738  0448  0841               	movf	sprintf@prec^(0+128),w
  9739  0449  0442               	iorwf	(sprintf@prec+1)^(0+128),w
  9740  044A  1903               	btfsc	3,2
  9741  044B  2C4D               	goto	u5561
  9742  044C  2C4E               	goto	u5560
  9743  044D                     u5561:	
  9744  044D  2C54               	goto	l3378
  9745  044E                     u5560:	
  9746  044E                     l3376:	
  9747                           
  9748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
  9749  044E  30FF               	movlw	255
  9750  044F  07BB               	addwf	sprintf@width^(0+128),f
  9751  0450  1803               	skipnc
  9752  0451  0ABC               	incf	(sprintf@width+1)^(0+128),f
  9753  0452  30FF               	movlw	255
  9754  0453  07BC               	addwf	(sprintf@width+1)^(0+128),f
  9755  0454                     l3378:	
  9756                           
  9757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
  9758  0454  3003               	movlw	3
  9759  0455  0539               	andwf	sprintf@flag^(0+128),w
  9760  0456  00A5               	movwf	??_sprintf^(0+128)
  9761  0457  3000               	movlw	0
  9762  0458  053A               	andwf	(sprintf@flag+1)^(0+128),w
  9763  0459  00A6               	movwf	(??_sprintf+1)^(0+128)
  9764  045A  0825               	movf	??_sprintf^(0+128),w
  9765  045B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  9766  045C  1903               	btfsc	3,2
  9767  045D  2C5F               	goto	u5571
  9768  045E  2C60               	goto	u5570
  9769  045F                     u5571:	
  9770  045F  2C66               	goto	l3382
  9771  0460                     u5570:	
  9772  0460                     l3380:	
  9773                           
  9774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
  9775  0460  30FF               	movlw	255
  9776  0461  07BB               	addwf	sprintf@width^(0+128),f
  9777  0462  1803               	skipnc
  9778  0463  0ABC               	incf	(sprintf@width+1)^(0+128),f
  9779  0464  30FF               	movlw	255
  9780  0465  07BC               	addwf	(sprintf@width+1)^(0+128),f
  9781  0466                     l3382:	
  9782                           
  9783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1179:     i
      +                          f(flag & 0x04) {
  9784  0466  1D39               	btfss	sprintf@flag^(0+128),2
  9785  0467  2C69               	goto	u5581
  9786  0468  2C6A               	goto	u5580
  9787  0469                     u5581:	
  9788  0469  2CB6               	goto	l3404
  9789  046A                     u5580:	
  9790  046A                     l3384:	
  9791                           
  9792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1183:      
      +                          if(flag & 0x03)
  9793  046A  3003               	movlw	3
  9794  046B  0539               	andwf	sprintf@flag^(0+128),w
  9795  046C  00A5               	movwf	??_sprintf^(0+128)
  9796  046D  3000               	movlw	0
  9797  046E  053A               	andwf	(sprintf@flag+1)^(0+128),w
  9798  046F  00A6               	movwf	(??_sprintf+1)^(0+128)
  9799  0470  0825               	movf	??_sprintf^(0+128),w
  9800  0471  0426               	iorwf	(??_sprintf^(0+128)+1),w
  9801  0472  1903               	btfsc	3,2
  9802  0473  2C75               	goto	u5591
  9803  0474  2C76               	goto	u5590
  9804  0475                     u5591:	
  9805  0475  2C95               	goto	l3396
  9806  0476                     u5590:	
  9807  0476                     l3386:	
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1185:      
      +                           ((*sp++ = ('-')));
  9810  0476  302D               	movlw	45
  9811  0477  00A5               	movwf	??_sprintf^(0+128)
  9812  0478  0843               	movf	sprintf@sp^(0+128),w
  9813  0479  0084               	movwf	4
  9814  047A  0825               	movf	??_sprintf^(0+128),w
  9815  047B  1383               	bcf	3,7	;select IRP bank0
  9816  047C  0080               	movwf	0
  9817  047D                     l3388:	
  9818  047D  3001               	movlw	1
  9819  047E  00A5               	movwf	??_sprintf^(0+128)
  9820  047F  0825               	movf	??_sprintf^(0+128),w
  9821  0480  07C3               	addwf	sprintf@sp^(0+128),f
  9822  0481  2C95               	goto	l3396
  9823  0482                     l3390:	
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1195:      
      +                           ((*sp++ = ('0')));
  9826  0482  3030               	movlw	48
  9827  0483  1683               	bsf	3,5	;RP0=1, select bank1
  9828  0484  1303               	bcf	3,6	;RP1=0, select bank1
  9829  0485  00A5               	movwf	??_sprintf^(0+128)
  9830  0486  0843               	movf	sprintf@sp^(0+128),w
  9831  0487  0084               	movwf	4
  9832  0488  0825               	movf	??_sprintf^(0+128),w
  9833  0489  1383               	bcf	3,7	;select IRP bank0
  9834  048A  0080               	movwf	0
  9835  048B                     l3392:	
  9836  048B  3001               	movlw	1
  9837  048C  00A5               	movwf	??_sprintf^(0+128)
  9838  048D  0825               	movf	??_sprintf^(0+128),w
  9839  048E  07C3               	addwf	sprintf@sp^(0+128),f
  9840  048F                     l3394:	
  9841                           
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1196:      
      +                           width--;
  9843  048F  30FF               	movlw	255
  9844  0490  07BB               	addwf	sprintf@width^(0+128),f
  9845  0491  1803               	skipnc
  9846  0492  0ABC               	incf	(sprintf@width+1)^(0+128),f
  9847  0493  30FF               	movlw	255
  9848  0494  07BC               	addwf	(sprintf@width+1)^(0+128),f
  9849  0495                     l3396:	
  9850                           
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1194:      
      +                          while(width > 0) {
  9852  0495  083C               	movf	(sprintf@width+1)^(0+128),w
  9853  0496  3A80               	xorlw	128
  9854  0497  00FF               	movwf	btemp+1
  9855  0498  3080               	movlw	128
  9856  0499  027F               	subwf	btemp+1,w
  9857  049A  1D03               	skipz
  9858  049B  2C9E               	goto	u5605
  9859  049C  3001               	movlw	1
  9860  049D  023B               	subwf	sprintf@width^(0+128),w
  9861  049E                     u5605:	
  9862  049E  1803               	skipnc
  9863  049F  2CA1               	goto	u5601
  9864  04A0  2CA2               	goto	u5600
  9865  04A1                     u5601:	
  9866  04A1  2C82               	goto	l3390
  9867  04A2                     u5600:	
  9868  04A2  2D43               	goto	l275
  9869  04A3                     l3398:	
  9870                           
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
  9872  04A3  3020               	movlw	32
  9873  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  9874  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  9875  04A6  00A5               	movwf	??_sprintf^(0+128)
  9876  04A7  0843               	movf	sprintf@sp^(0+128),w
  9877  04A8  0084               	movwf	4
  9878  04A9  0825               	movf	??_sprintf^(0+128),w
  9879  04AA  1383               	bcf	3,7	;select IRP bank0
  9880  04AB  0080               	movwf	0
  9881  04AC                     l3400:	
  9882  04AC  3001               	movlw	1
  9883  04AD  00A5               	movwf	??_sprintf^(0+128)
  9884  04AE  0825               	movf	??_sprintf^(0+128),w
  9885  04AF  07C3               	addwf	sprintf@sp^(0+128),f
  9886  04B0                     l3402:	
  9887                           
  9888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1208:      
      +                           width--;
  9889  04B0  30FF               	movlw	255
  9890  04B1  07BB               	addwf	sprintf@width^(0+128),f
  9891  04B2  1803               	skipnc
  9892  04B3  0ABC               	incf	(sprintf@width+1)^(0+128),f
  9893  04B4  30FF               	movlw	255
  9894  04B5  07BC               	addwf	(sprintf@width+1)^(0+128),f
  9895  04B6                     l3404:	
  9896                           
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
  9898  04B6  083C               	movf	(sprintf@width+1)^(0+128),w
  9899  04B7  3A80               	xorlw	128
  9900  04B8  00FF               	movwf	btemp+1
  9901  04B9  3080               	movlw	128
  9902  04BA  027F               	subwf	btemp+1,w
  9903  04BB  1D03               	skipz
  9904  04BC  2CBF               	goto	u5615
  9905  04BD  3001               	movlw	1
  9906  04BE  023B               	subwf	sprintf@width^(0+128),w
  9907  04BF                     u5615:	
  9908  04BF  1803               	skipnc
  9909  04C0  2CC2               	goto	u5611
  9910  04C1  2CC3               	goto	u5610
  9911  04C2                     u5611:	
  9912  04C2  2CA3               	goto	l3398
  9913  04C3                     u5610:	
  9914  04C3                     l3406:	
  9915                           
  9916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  9917  04C3  3003               	movlw	3
  9918  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  9919  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  9920  04C6  0539               	andwf	sprintf@flag^(0+128),w
  9921  04C7  00A5               	movwf	??_sprintf^(0+128)
  9922  04C8  3000               	movlw	0
  9923  04C9  053A               	andwf	(sprintf@flag+1)^(0+128),w
  9924  04CA  00A6               	movwf	(??_sprintf+1)^(0+128)
  9925  04CB  0825               	movf	??_sprintf^(0+128),w
  9926  04CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  9927  04CD  1903               	btfsc	3,2
  9928  04CE  2CD0               	goto	u5621
  9929  04CF  2CD1               	goto	u5620
  9930  04D0                     u5621:	
  9931  04D0  2D43               	goto	l275
  9932  04D1                     u5620:	
  9933  04D1                     l3408:	
  9934                           
  9935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  9936  04D1  302D               	movlw	45
  9937  04D2  00A5               	movwf	??_sprintf^(0+128)
  9938  04D3  0843               	movf	sprintf@sp^(0+128),w
  9939  04D4  0084               	movwf	4
  9940  04D5  0825               	movf	??_sprintf^(0+128),w
  9941  04D6  1383               	bcf	3,7	;select IRP bank0
  9942  04D7  0080               	movwf	0
  9943  04D8                     l3410:	
  9944  04D8  3001               	movlw	1
  9945  04D9  00A5               	movwf	??_sprintf^(0+128)
  9946  04DA  0825               	movf	??_sprintf^(0+128),w
  9947  04DB  07C3               	addwf	sprintf@sp^(0+128),f
  9948  04DC  2D43               	goto	l275
  9949  04DD                     l3412:	
  9950                           
  9951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  9952  04DD  0844               	movf	sprintf@c^(0+128),w
  9953  04DE  00A5               	movwf	??_sprintf^(0+128)
  9954  04DF  3001               	movlw	1
  9955  04E0                     u5635:	
  9956  04E0  1003               	clrc
  9957  04E1  0DA5               	rlf	??_sprintf^(0+128),f
  9958  04E2  3EFF               	addlw	-1
  9959  04E3  1D03               	skipz
  9960  04E4  2CE0               	goto	u5635
  9961  04E5  1003               	clrc
  9962  04E6  0D25               	rlf	??_sprintf^(0+128),w
  9963  04E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9964  04E8  0084               	movwf	4
  9965  04E9  160A  158A  200A  120A  118A  	fcall	stringdir
  9966  04EE  00F0               	movwf	___lldiv@divisor
  9967  04EF  160A  158A  200A  120A  118A  	fcall	stringdir
  9968  04F4  00F1               	movwf	___lldiv@divisor+1
  9969  04F5  160A  158A  200A  120A  118A  	fcall	stringdir
  9970  04FA  00F2               	movwf	___lldiv@divisor+2
  9971  04FB  160A  158A  200A  120A  118A  	fcall	stringdir
  9972  0500  00F3               	movwf	___lldiv@divisor+3
  9973  0501  0832               	movf	(sprintf@val+3)^(0+128),w
  9974  0502  00F7               	movwf	___lldiv@dividend+3
  9975  0503  0831               	movf	(sprintf@val+2)^(0+128),w
  9976  0504  00F6               	movwf	___lldiv@dividend+2
  9977  0505  0830               	movf	(sprintf@val+1)^(0+128),w
  9978  0506  00F5               	movwf	___lldiv@dividend+1
  9979  0507  082F               	movf	sprintf@val^(0+128),w
  9980  0508  00F4               	movwf	___lldiv@dividend
  9981  0509  160A  158A  2518  120A  118A  	fcall	___lldiv
  9982  050E  0873               	movf	?___lldiv+3,w
  9983  050F  1683               	bsf	3,5	;RP0=1, select bank1
  9984  0510  1303               	bcf	3,6	;RP1=0, select bank1
  9985  0511  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  9986  0512  0872               	movf	?___lldiv+2,w
  9987  0513  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  9988  0514  0871               	movf	?___lldiv+1,w
  9989  0515  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  9990  0516  0870               	movf	?___lldiv,w
  9991  0517  00B3               	movwf	sprintf@tmpval^(0+128)
  9992  0518                     l3414:	
  9993                           
  9994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  9995  0518  3000               	movlw	0
  9996  0519  00F3               	movwf	___llmod@divisor+3
  9997  051A  3000               	movlw	0
  9998  051B  00F2               	movwf	___llmod@divisor+2
  9999  051C  3000               	movlw	0
 10000  051D  00F1               	movwf	___llmod@divisor+1
 10001  051E  300A               	movlw	10
 10002  051F  00F0               	movwf	___llmod@divisor
 10003  0520  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 10004  0521  00F7               	movwf	___llmod@dividend+3
 10005  0522  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 10006  0523  00F6               	movwf	___llmod@dividend+2
 10007  0524  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 10008  0525  00F5               	movwf	___llmod@dividend+1
 10009  0526  0833               	movf	sprintf@tmpval^(0+128),w
 10010  0527  00F4               	movwf	___llmod@dividend
 10011  0528  160A  158A  24C4  120A  118A  	fcall	___llmod
 10012  052D  0873               	movf	?___llmod+3,w
 10013  052E  1683               	bsf	3,5	;RP0=1, select bank1
 10014  052F  1303               	bcf	3,6	;RP1=0, select bank1
 10015  0530  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10016  0531  0872               	movf	?___llmod+2,w
 10017  0532  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10018  0533  0871               	movf	?___llmod+1,w
 10019  0534  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10020  0535  0870               	movf	?___llmod,w
 10021  0536  00B3               	movwf	sprintf@tmpval^(0+128)
 10022  0537                     l3416:	
 10023                           
 10024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
 10025  0537  0833               	movf	sprintf@tmpval^(0+128),w
 10026  0538  3E30               	addlw	48
 10027  0539  00A5               	movwf	??_sprintf^(0+128)
 10028  053A  0843               	movf	sprintf@sp^(0+128),w
 10029  053B  0084               	movwf	4
 10030  053C  0825               	movf	??_sprintf^(0+128),w
 10031  053D  1383               	bcf	3,7	;select IRP bank0
 10032  053E  0080               	movwf	0
 10033  053F  3001               	movlw	1
 10034  0540  00A5               	movwf	??_sprintf^(0+128)
 10035  0541  0825               	movf	??_sprintf^(0+128),w
 10036  0542  07C3               	addwf	sprintf@sp^(0+128),f
 10037  0543                     l275:	
 10038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
 10039                           
 10040                           
 10041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
 10042  0543  3001               	movlw	1
 10043  0544  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0545  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0546  02C4               	subwf	sprintf@c^(0+128),f
 10046  0547  0A44               	incf	sprintf@c^(0+128),w
 10047  0548  1D03               	btfss	3,2
 10048  0549  2D4B               	goto	u5641
 10049  054A  2D4C               	goto	u5640
 10050  054B                     u5641:	
 10051  054B  2CDD               	goto	l3412
 10052  054C                     u5640:	
 10053  054C  2D60               	goto	l3424
 10054  054D                     l3418:	
 10055                           
 10056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
 10057  054D  3030               	movlw	48
 10058  054E  1683               	bsf	3,5	;RP0=1, select bank1
 10059  054F  1303               	bcf	3,6	;RP1=0, select bank1
 10060  0550  00A5               	movwf	??_sprintf^(0+128)
 10061  0551  0843               	movf	sprintf@sp^(0+128),w
 10062  0552  0084               	movwf	4
 10063  0553  0825               	movf	??_sprintf^(0+128),w
 10064  0554  1383               	bcf	3,7	;select IRP bank0
 10065  0555  0080               	movwf	0
 10066  0556                     l3420:	
 10067  0556  3001               	movlw	1
 10068  0557  00A5               	movwf	??_sprintf^(0+128)
 10069  0558  0825               	movf	??_sprintf^(0+128),w
 10070  0559  07C3               	addwf	sprintf@sp^(0+128),f
 10071  055A                     l3422:	
 10072                           
 10073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
 10074  055A  30FF               	movlw	255
 10075  055B  07B7               	addwf	sprintf@eexp^(0+128),f
 10076  055C  1803               	skipnc
 10077  055D  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
 10078  055E  30FF               	movlw	255
 10079  055F  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
 10080  0560                     l3424:	
 10081                           
 10082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
 10083  0560  0838               	movf	(sprintf@eexp+1)^(0+128),w
 10084  0561  3A80               	xorlw	128
 10085  0562  00FF               	movwf	btemp+1
 10086  0563  3080               	movlw	128
 10087  0564  027F               	subwf	btemp+1,w
 10088  0565  1D03               	skipz
 10089  0566  2D69               	goto	u5655
 10090  0567  3001               	movlw	1
 10091  0568  0237               	subwf	sprintf@eexp^(0+128),w
 10092  0569                     u5655:	
 10093  0569  1803               	skipnc
 10094  056A  2D6C               	goto	u5651
 10095  056B  2D6D               	goto	u5650
 10096  056C                     u5651:	
 10097  056C  2D4D               	goto	l3418
 10098  056D                     u5650:	
 10099  056D                     l3426:	
 10100                           
 10101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10102  056D  1683               	bsf	3,5	;RP0=1, select bank1
 10103  056E  1303               	bcf	3,6	;RP1=0, select bank1
 10104  056F  0842               	movf	(sprintf@prec+1)^(0+128),w
 10105  0570  3A80               	xorlw	128
 10106  0571  00FF               	movwf	btemp+1
 10107  0572  3080               	movlw	128
 10108  0573  027F               	subwf	btemp+1,w
 10109  0574  1D03               	skipz
 10110  0575  2D78               	goto	u5665
 10111  0576  3009               	movlw	9
 10112  0577  0241               	subwf	sprintf@prec^(0+128),w
 10113  0578                     u5665:	
 10114  0578  1C03               	skipc
 10115  0579  2D7B               	goto	u5661
 10116  057A  2D7C               	goto	u5660
 10117  057B                     u5661:	
 10118  057B  2D83               	goto	l3430
 10119  057C                     u5660:	
 10120  057C                     l3428:	
 10121                           
 10122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
 10123  057C  3008               	movlw	8
 10124  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10125  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10126  057F  00A5               	movwf	??_sprintf^(0+128)
 10127  0580  0825               	movf	??_sprintf^(0+128),w
 10128  0581  00C4               	movwf	sprintf@c^(0+128)
 10129  0582  2D89               	goto	l282
 10130  0583                     l3430:	
 10131                           
 10132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
 10133  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10134  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10135  0585  0841               	movf	sprintf@prec^(0+128),w
 10136  0586  00A5               	movwf	??_sprintf^(0+128)
 10137  0587  0825               	movf	??_sprintf^(0+128),w
 10138  0588  00C4               	movwf	sprintf@c^(0+128)
 10139  0589                     l282:	
 10140                           
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
 10142  0589  0844               	movf	sprintf@c^(0+128),w
 10143  058A  00A5               	movwf	??_sprintf^(0+128)
 10144  058B  01A6               	clrf	(??_sprintf^(0+128)+1)
 10145  058C  0825               	movf	??_sprintf^(0+128),w
 10146  058D  02C1               	subwf	sprintf@prec^(0+128),f
 10147  058E  0826               	movf	(??_sprintf+1)^(0+128),w
 10148  058F  1C03               	skipc
 10149  0590  03C2               	decf	(sprintf@prec+1)^(0+128),f
 10150  0591  02C2               	subwf	(sprintf@prec+1)^(0+128),f
 10151  0592                     l3432:	
 10152                           
 10153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
 10154  0592  0844               	movf	sprintf@c^(0+128),w
 10155  0593  1903               	btfsc	3,2
 10156  0594  2D96               	goto	u5671
 10157  0595  2D97               	goto	u5670
 10158  0596                     u5671:	
 10159  0596  2DA2               	goto	l3438
 10160  0597                     u5670:	
 10161  0597                     l3434:	
 10162                           
 10163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
 10164  0597  302E               	movlw	46
 10165  0598  00A5               	movwf	??_sprintf^(0+128)
 10166  0599  0843               	movf	sprintf@sp^(0+128),w
 10167  059A  0084               	movwf	4
 10168  059B  0825               	movf	??_sprintf^(0+128),w
 10169  059C  1383               	bcf	3,7	;select IRP bank0
 10170  059D  0080               	movwf	0
 10171  059E                     l3436:	
 10172  059E  3001               	movlw	1
 10173  059F  00A5               	movwf	??_sprintf^(0+128)
 10174  05A0  0825               	movf	??_sprintf^(0+128),w
 10175  05A1  07C3               	addwf	sprintf@sp^(0+128),f
 10176  05A2                     l3438:	
 10177                           
 10178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10179  05A2  0844               	movf	sprintf@c^(0+128),w
 10180  05A3  120A  158A  2140  120A  118A  	fcall	_scale
 10181  05A8  1283               	bcf	3,5	;RP0=0, select bank0
 10182  05A9  1303               	bcf	3,6	;RP1=0, select bank0
 10183  05AA  0841               	movf	?_scale+3,w
 10184  05AB  1683               	bsf	3,5	;RP0=1, select bank1
 10185  05AC  1303               	bcf	3,6	;RP1=0, select bank1
 10186  05AD  00AD               	movwf	(_sprintf$888+3)^(0+128)
 10187  05AE  1283               	bcf	3,5	;RP0=0, select bank0
 10188  05AF  1303               	bcf	3,6	;RP1=0, select bank0
 10189  05B0  0840               	movf	?_scale+2,w
 10190  05B1  1683               	bsf	3,5	;RP0=1, select bank1
 10191  05B2  1303               	bcf	3,6	;RP1=0, select bank1
 10192  05B3  00AC               	movwf	(_sprintf$888+2)^(0+128)
 10193  05B4  1283               	bcf	3,5	;RP0=0, select bank0
 10194  05B5  1303               	bcf	3,6	;RP1=0, select bank0
 10195  05B6  083F               	movf	?_scale+1,w
 10196  05B7  1683               	bsf	3,5	;RP0=1, select bank1
 10197  05B8  1303               	bcf	3,6	;RP1=0, select bank1
 10198  05B9  00AB               	movwf	(_sprintf$888+1)^(0+128)
 10199  05BA  1283               	bcf	3,5	;RP0=0, select bank0
 10200  05BB  1303               	bcf	3,6	;RP1=0, select bank0
 10201  05BC  083E               	movf	?_scale,w
 10202  05BD  1683               	bsf	3,5	;RP0=1, select bank1
 10203  05BE  1303               	bcf	3,6	;RP1=0, select bank1
 10204  05BF  00AA               	movwf	_sprintf$888^(0+128)
 10205  05C0                     l3440:	
 10206                           
 10207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10208  05C0  082D               	movf	(_sprintf$888+3)^(0+128),w
 10209  05C1  1283               	bcf	3,5	;RP0=0, select bank0
 10210  05C2  1303               	bcf	3,6	;RP1=0, select bank0
 10211  05C3  00AB               	movwf	___flmul@a+3
 10212  05C4  1683               	bsf	3,5	;RP0=1, select bank1
 10213  05C5  1303               	bcf	3,6	;RP1=0, select bank1
 10214  05C6  082C               	movf	(_sprintf$888+2)^(0+128),w
 10215  05C7  1283               	bcf	3,5	;RP0=0, select bank0
 10216  05C8  1303               	bcf	3,6	;RP1=0, select bank0
 10217  05C9  00AA               	movwf	___flmul@a+2
 10218  05CA  1683               	bsf	3,5	;RP0=1, select bank1
 10219  05CB  1303               	bcf	3,6	;RP1=0, select bank1
 10220  05CC  082B               	movf	(_sprintf$888+1)^(0+128),w
 10221  05CD  1283               	bcf	3,5	;RP0=0, select bank0
 10222  05CE  1303               	bcf	3,6	;RP1=0, select bank0
 10223  05CF  00A9               	movwf	___flmul@a+1
 10224  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 10225  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 10226  05D2  082A               	movf	_sprintf$888^(0+128),w
 10227  05D3  1283               	bcf	3,5	;RP0=0, select bank0
 10228  05D4  1303               	bcf	3,6	;RP1=0, select bank0
 10229  05D5  00A8               	movwf	___flmul@a
 10230  05D6  1683               	bsf	3,5	;RP0=1, select bank1
 10231  05D7  1303               	bcf	3,6	;RP1=0, select bank1
 10232  05D8  0840               	movf	(sprintf@fval+3)^(0+128),w
 10233  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 10234  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 10235  05DB  00A7               	movwf	___flmul@b+3
 10236  05DC  1683               	bsf	3,5	;RP0=1, select bank1
 10237  05DD  1303               	bcf	3,6	;RP1=0, select bank1
 10238  05DE  083F               	movf	(sprintf@fval+2)^(0+128),w
 10239  05DF  1283               	bcf	3,5	;RP0=0, select bank0
 10240  05E0  1303               	bcf	3,6	;RP1=0, select bank0
 10241  05E1  00A6               	movwf	___flmul@b+2
 10242  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 10243  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 10244  05E4  083E               	movf	(sprintf@fval+1)^(0+128),w
 10245  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10246  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10247  05E7  00A5               	movwf	___flmul@b+1
 10248  05E8  1683               	bsf	3,5	;RP0=1, select bank1
 10249  05E9  1303               	bcf	3,6	;RP1=0, select bank1
 10250  05EA  083D               	movf	sprintf@fval^(0+128),w
 10251  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 10252  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 10253  05ED  00A4               	movwf	___flmul@b
 10254  05EE  120A  158A  249F  120A  118A  	fcall	___flmul
 10255  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 10256  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 10257  05F5  0827               	movf	?___flmul+3,w
 10258  05F6  00D4               	movwf	___fltol@f1+3
 10259  05F7  0826               	movf	?___flmul+2,w
 10260  05F8  00D3               	movwf	___fltol@f1+2
 10261  05F9  0825               	movf	?___flmul+1,w
 10262  05FA  00D2               	movwf	___fltol@f1+1
 10263  05FB  0824               	movf	?___flmul,w
 10264  05FC  00D1               	movwf	___fltol@f1
 10265  05FD  160A  118A  2009  120A  118A  	fcall	___fltol
 10266  0602  1283               	bcf	3,5	;RP0=0, select bank0
 10267  0603  1303               	bcf	3,6	;RP1=0, select bank0
 10268  0604  0854               	movf	?___fltol+3,w
 10269  0605  1683               	bsf	3,5	;RP0=1, select bank1
 10270  0606  1303               	bcf	3,6	;RP1=0, select bank1
 10271  0607  00B2               	movwf	(sprintf@val+3)^(0+128)
 10272  0608  1283               	bcf	3,5	;RP0=0, select bank0
 10273  0609  1303               	bcf	3,6	;RP1=0, select bank0
 10274  060A  0853               	movf	?___fltol+2,w
 10275  060B  1683               	bsf	3,5	;RP0=1, select bank1
 10276  060C  1303               	bcf	3,6	;RP1=0, select bank1
 10277  060D  00B1               	movwf	(sprintf@val+2)^(0+128)
 10278  060E  1283               	bcf	3,5	;RP0=0, select bank0
 10279  060F  1303               	bcf	3,6	;RP1=0, select bank0
 10280  0610  0852               	movf	?___fltol+1,w
 10281  0611  1683               	bsf	3,5	;RP0=1, select bank1
 10282  0612  1303               	bcf	3,6	;RP1=0, select bank1
 10283  0613  00B0               	movwf	(sprintf@val+1)^(0+128)
 10284  0614  1283               	bcf	3,5	;RP0=0, select bank0
 10285  0615  1303               	bcf	3,6	;RP1=0, select bank0
 10286  0616  0851               	movf	?___fltol,w
 10287  0617  1683               	bsf	3,5	;RP0=1, select bank1
 10288  0618  1303               	bcf	3,6	;RP1=0, select bank1
 10289  0619  00AF               	movwf	sprintf@val^(0+128)
 10290                           
 10291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 10292  061A  2EBC               	goto	l3450
 10293  061B                     l3442:	
 10294                           
 10295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
 10296  061B  0844               	movf	sprintf@c^(0+128),w
 10297  061C  00A5               	movwf	??_sprintf^(0+128)
 10298  061D  3001               	movlw	1
 10299  061E                     u5685:	
 10300  061E  1003               	clrc
 10301  061F  0DA5               	rlf	??_sprintf^(0+128),f
 10302  0620  3EFF               	addlw	-1
 10303  0621  1D03               	skipz
 10304  0622  2E1E               	goto	u5685
 10305  0623  1003               	clrc
 10306  0624  0D25               	rlf	??_sprintf^(0+128),w
 10307  0625  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10308  0626  0084               	movwf	4
 10309  0627  160A  158A  200A  120A  118A  	fcall	stringdir
 10310  062C  00F0               	movwf	___lldiv@divisor
 10311  062D  160A  158A  200A  120A  118A  	fcall	stringdir
 10312  0632  00F1               	movwf	___lldiv@divisor+1
 10313  0633  160A  158A  200A  120A  118A  	fcall	stringdir
 10314  0638  00F2               	movwf	___lldiv@divisor+2
 10315  0639  160A  158A  200A  120A  118A  	fcall	stringdir
 10316  063E  00F3               	movwf	___lldiv@divisor+3
 10317  063F  0832               	movf	(sprintf@val+3)^(0+128),w
 10318  0640  00F7               	movwf	___lldiv@dividend+3
 10319  0641  0831               	movf	(sprintf@val+2)^(0+128),w
 10320  0642  00F6               	movwf	___lldiv@dividend+2
 10321  0643  0830               	movf	(sprintf@val+1)^(0+128),w
 10322  0644  00F5               	movwf	___lldiv@dividend+1
 10323  0645  082F               	movf	sprintf@val^(0+128),w
 10324  0646  00F4               	movwf	___lldiv@dividend
 10325  0647  160A  158A  2518  120A  118A  	fcall	___lldiv
 10326  064C  0873               	movf	?___lldiv+3,w
 10327  064D  1683               	bsf	3,5	;RP0=1, select bank1
 10328  064E  1303               	bcf	3,6	;RP1=0, select bank1
 10329  064F  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10330  0650  0872               	movf	?___lldiv+2,w
 10331  0651  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10332  0652  0871               	movf	?___lldiv+1,w
 10333  0653  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10334  0654  0870               	movf	?___lldiv,w
 10335  0655  00B3               	movwf	sprintf@tmpval^(0+128)
 10336  0656                     l3444:	
 10337                           
 10338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
 10339  0656  3000               	movlw	0
 10340  0657  00F3               	movwf	___llmod@divisor+3
 10341  0658  3000               	movlw	0
 10342  0659  00F2               	movwf	___llmod@divisor+2
 10343  065A  3000               	movlw	0
 10344  065B  00F1               	movwf	___llmod@divisor+1
 10345  065C  300A               	movlw	10
 10346  065D  00F0               	movwf	___llmod@divisor
 10347  065E  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 10348  065F  00F7               	movwf	___llmod@dividend+3
 10349  0660  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 10350  0661  00F6               	movwf	___llmod@dividend+2
 10351  0662  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 10352  0663  00F5               	movwf	___llmod@dividend+1
 10353  0664  0833               	movf	sprintf@tmpval^(0+128),w
 10354  0665  00F4               	movwf	___llmod@dividend
 10355  0666  160A  158A  24C4  120A  118A  	fcall	___llmod
 10356  066B  0873               	movf	?___llmod+3,w
 10357  066C  1683               	bsf	3,5	;RP0=1, select bank1
 10358  066D  1303               	bcf	3,6	;RP1=0, select bank1
 10359  066E  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10360  066F  0872               	movf	?___llmod+2,w
 10361  0670  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10362  0671  0871               	movf	?___llmod+1,w
 10363  0672  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10364  0673  0870               	movf	?___llmod,w
 10365  0674  00B3               	movwf	sprintf@tmpval^(0+128)
 10366  0675                     l3446:	
 10367                           
 10368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
 10369  0675  0833               	movf	sprintf@tmpval^(0+128),w
 10370  0676  3E30               	addlw	48
 10371  0677  00A5               	movwf	??_sprintf^(0+128)
 10372  0678  0843               	movf	sprintf@sp^(0+128),w
 10373  0679  0084               	movwf	4
 10374  067A  0825               	movf	??_sprintf^(0+128),w
 10375  067B  1383               	bcf	3,7	;select IRP bank0
 10376  067C  0080               	movwf	0
 10377  067D  3001               	movlw	1
 10378  067E  00A5               	movwf	??_sprintf^(0+128)
 10379  067F  0825               	movf	??_sprintf^(0+128),w
 10380  0680  07C3               	addwf	sprintf@sp^(0+128),f
 10381  0681                     l3448:	
 10382                           
 10383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
 10384  0681  0844               	movf	sprintf@c^(0+128),w
 10385  0682  00A5               	movwf	??_sprintf^(0+128)
 10386  0683  3001               	movlw	1
 10387  0684                     u5695:	
 10388  0684  1003               	clrc
 10389  0685  0DA5               	rlf	??_sprintf^(0+128),f
 10390  0686  3EFF               	addlw	-1
 10391  0687  1D03               	skipz
 10392  0688  2E84               	goto	u5695
 10393  0689  1003               	clrc
 10394  068A  0D25               	rlf	??_sprintf^(0+128),w
 10395  068B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10396  068C  0084               	movwf	4
 10397  068D  160A  158A  200A  120A  118A  	fcall	stringdir
 10398  0692  00F0               	movwf	___llmod@divisor
 10399  0693  160A  158A  200A  120A  118A  	fcall	stringdir
 10400  0698  00F1               	movwf	___llmod@divisor+1
 10401  0699  160A  158A  200A  120A  118A  	fcall	stringdir
 10402  069E  00F2               	movwf	___llmod@divisor+2
 10403  069F  160A  158A  200A  120A  118A  	fcall	stringdir
 10404  06A4  00F3               	movwf	___llmod@divisor+3
 10405  06A5  0832               	movf	(sprintf@val+3)^(0+128),w
 10406  06A6  00F7               	movwf	___llmod@dividend+3
 10407  06A7  0831               	movf	(sprintf@val+2)^(0+128),w
 10408  06A8  00F6               	movwf	___llmod@dividend+2
 10409  06A9  0830               	movf	(sprintf@val+1)^(0+128),w
 10410  06AA  00F5               	movwf	___llmod@dividend+1
 10411  06AB  082F               	movf	sprintf@val^(0+128),w
 10412  06AC  00F4               	movwf	___llmod@dividend
 10413  06AD  160A  158A  24C4  120A  118A  	fcall	___llmod
 10414  06B2  0873               	movf	?___llmod+3,w
 10415  06B3  1683               	bsf	3,5	;RP0=1, select bank1
 10416  06B4  1303               	bcf	3,6	;RP1=0, select bank1
 10417  06B5  00B2               	movwf	(sprintf@val+3)^(0+128)
 10418  06B6  0872               	movf	?___llmod+2,w
 10419  06B7  00B1               	movwf	(sprintf@val+2)^(0+128)
 10420  06B8  0871               	movf	?___llmod+1,w
 10421  06B9  00B0               	movwf	(sprintf@val+1)^(0+128)
 10422  06BA  0870               	movf	?___llmod,w
 10423  06BB  00AF               	movwf	sprintf@val^(0+128)
 10424  06BC                     l3450:	
 10425                           
 10426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 10427  06BC  3001               	movlw	1
 10428  06BD  02C4               	subwf	sprintf@c^(0+128),f
 10429  06BE  0A44               	incf	sprintf@c^(0+128),w
 10430  06BF  1D03               	btfss	3,2
 10431  06C0  2EC2               	goto	u5701
 10432  06C1  2EC3               	goto	u5700
 10433  06C2                     u5701:	
 10434  06C2  2E1B               	goto	l3442
 10435  06C3                     u5700:	
 10436  06C3  2ED5               	goto	l3458
 10437  06C4                     l3452:	
 10438                           
 10439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
 10440  06C4  3030               	movlw	48
 10441  06C5  00A5               	movwf	??_sprintf^(0+128)
 10442  06C6  0843               	movf	sprintf@sp^(0+128),w
 10443  06C7  0084               	movwf	4
 10444  06C8  0825               	movf	??_sprintf^(0+128),w
 10445  06C9  1383               	bcf	3,7	;select IRP bank0
 10446  06CA  0080               	movwf	0
 10447  06CB                     l3454:	
 10448  06CB  3001               	movlw	1
 10449  06CC  00A5               	movwf	??_sprintf^(0+128)
 10450  06CD  0825               	movf	??_sprintf^(0+128),w
 10451  06CE  07C3               	addwf	sprintf@sp^(0+128),f
 10452  06CF                     l3456:	
 10453                           
 10454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
 10455  06CF  30FF               	movlw	255
 10456  06D0  07C1               	addwf	sprintf@prec^(0+128),f
 10457  06D1  1803               	skipnc
 10458  06D2  0AC2               	incf	(sprintf@prec+1)^(0+128),f
 10459  06D3  30FF               	movlw	255
 10460  06D4  07C2               	addwf	(sprintf@prec+1)^(0+128),f
 10461  06D5                     l3458:	
 10462                           
 10463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
 10464  06D5  0841               	movf	sprintf@prec^(0+128),w
 10465  06D6  0442               	iorwf	(sprintf@prec+1)^(0+128),w
 10466  06D7  1D03               	btfss	3,2
 10467  06D8  2EDA               	goto	u5711
 10468  06D9  2EDB               	goto	u5710
 10469  06DA                     u5711:	
 10470  06DA  2EC4               	goto	l3452
 10471  06DB                     u5710:	
 10472  06DB  2FDA               	goto	l3522
 10473  06DC                     l3460:	
 10474                           
 10475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
 10476  06DC  0841               	movf	sprintf@prec^(0+128),w
 10477  06DD  0442               	iorwf	(sprintf@prec+1)^(0+128),w
 10478  06DE  1D03               	btfss	3,2
 10479  06DF  2EE1               	goto	u5721
 10480  06E0  2EE2               	goto	u5720
 10481  06E1                     u5721:	
 10482  06E1  2EF0               	goto	l290
 10483  06E2                     u5720:	
 10484  06E2                     l3462:	
 10485  06E2  0832               	movf	(sprintf@val+3)^(0+128),w
 10486  06E3  0431               	iorwf	(sprintf@val+2)^(0+128),w
 10487  06E4  0430               	iorwf	(sprintf@val+1)^(0+128),w
 10488  06E5  042F               	iorwf	sprintf@val^(0+128),w
 10489  06E6  1D03               	skipz
 10490  06E7  2EE9               	goto	u5731
 10491  06E8  2EEA               	goto	u5730
 10492  06E9                     u5731:	
 10493  06E9  2EF0               	goto	l290
 10494  06EA                     u5730:	
 10495  06EA                     l3464:	
 10496                           
 10497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
 10498  06EA  3001               	movlw	1
 10499  06EB  07C1               	addwf	sprintf@prec^(0+128),f
 10500  06EC  1803               	skipnc
 10501  06ED  0AC2               	incf	(sprintf@prec+1)^(0+128),f
 10502  06EE  3000               	movlw	0
 10503  06EF  07C2               	addwf	(sprintf@prec+1)^(0+128),f
 10504  06F0                     l290:	
 10505                           
 10506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
 10507  06F0  0842               	movf	(sprintf@prec+1)^(0+128),w
 10508  06F1  3A80               	xorlw	128
 10509  06F2  3C80               	sublw	128
 10510  06F3  1D03               	skipz
 10511  06F4  2EF7               	goto	u5745
 10512  06F5  0841               	movf	sprintf@prec^(0+128),w
 10513  06F6  0244               	subwf	sprintf@c^(0+128),w
 10514  06F7                     u5745:	
 10515  06F7  1803               	skipnc
 10516  06F8  2EFA               	goto	u5741
 10517  06F9  2EFB               	goto	u5740
 10518  06FA                     u5741:	
 10519  06FA  2F02               	goto	l3468
 10520  06FB                     u5740:	
 10521  06FB                     l3466:	
 10522                           
 10523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
 10524  06FB  1683               	bsf	3,5	;RP0=1, select bank1
 10525  06FC  1303               	bcf	3,6	;RP1=0, select bank1
 10526  06FD  0841               	movf	sprintf@prec^(0+128),w
 10527  06FE  00A5               	movwf	??_sprintf^(0+128)
 10528  06FF  0825               	movf	??_sprintf^(0+128),w
 10529  0700  00C4               	movwf	sprintf@c^(0+128)
 10530  0701  2F1A               	goto	l3472
 10531  0702                     l3468:	
 10532  0702  1683               	bsf	3,5	;RP0=1, select bank1
 10533  0703  1303               	bcf	3,6	;RP1=0, select bank1
 10534  0704  0842               	movf	(sprintf@prec+1)^(0+128),w
 10535  0705  3A80               	xorlw	128
 10536  0706  00A5               	movwf	??_sprintf^(0+128)
 10537  0707  3080               	movlw	128
 10538  0708  0225               	subwf	??_sprintf^(0+128),w
 10539  0709  1D03               	skipz
 10540  070A  2F0D               	goto	u5755
 10541  070B  0844               	movf	sprintf@c^(0+128),w
 10542  070C  0241               	subwf	sprintf@prec^(0+128),w
 10543  070D                     u5755:	
 10544  070D  1803               	skipnc
 10545  070E  2F10               	goto	u5751
 10546  070F  2F11               	goto	u5750
 10547  0710                     u5751:	
 10548  0710  2F1A               	goto	l3472
 10549  0711                     u5750:	
 10550  0711                     l3470:	
 10551                           
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
 10553  0711  1683               	bsf	3,5	;RP0=1, select bank1
 10554  0712  1303               	bcf	3,6	;RP1=0, select bank1
 10555  0713  0844               	movf	sprintf@c^(0+128),w
 10556  0714  00A5               	movwf	??_sprintf^(0+128)
 10557  0715  01A6               	clrf	(??_sprintf^(0+128)+1)
 10558  0716  0825               	movf	??_sprintf^(0+128),w
 10559  0717  00C1               	movwf	sprintf@prec^(0+128)
 10560  0718  0826               	movf	(??_sprintf+1)^(0+128),w
 10561  0719  00C2               	movwf	(sprintf@prec+1)^(0+128)
 10562  071A                     l3472:	
 10563                           
 10564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
 10565  071A  1683               	bsf	3,5	;RP0=1, select bank1
 10566  071B  1303               	bcf	3,6	;RP1=0, select bank1
 10567  071C  083B               	movf	sprintf@width^(0+128),w
 10568  071D  043C               	iorwf	(sprintf@width+1)^(0+128),w
 10569  071E  1903               	btfsc	3,2
 10570  071F  2F21               	goto	u5761
 10571  0720  2F22               	goto	u5760
 10572  0721                     u5761:	
 10573  0721  2F34               	goto	l3478
 10574  0722                     u5760:	
 10575  0722                     l3474:	
 10576  0722  3003               	movlw	3
 10577  0723  0539               	andwf	sprintf@flag^(0+128),w
 10578  0724  00A5               	movwf	??_sprintf^(0+128)
 10579  0725  3000               	movlw	0
 10580  0726  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10581  0727  00A6               	movwf	(??_sprintf+1)^(0+128)
 10582  0728  0825               	movf	??_sprintf^(0+128),w
 10583  0729  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10584  072A  1903               	btfsc	3,2
 10585  072B  2F2D               	goto	u5771
 10586  072C  2F2E               	goto	u5770
 10587  072D                     u5771:	
 10588  072D  2F34               	goto	l3478
 10589  072E                     u5770:	
 10590  072E                     l3476:	
 10591                           
 10592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
 10593  072E  30FF               	movlw	255
 10594  072F  07BB               	addwf	sprintf@width^(0+128),f
 10595  0730  1803               	skipnc
 10596  0731  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10597  0732  30FF               	movlw	255
 10598  0733  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10599  0734                     l3478:	
 10600                           
 10601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
 10602  0734  1F3A               	btfss	(sprintf@flag+1)^(0+128),6
 10603  0735  2F37               	goto	u5781
 10604  0736  2F38               	goto	u5780
 10605  0737                     u5781:	
 10606  0737  2F53               	goto	l3486
 10607  0738                     u5780:	
 10608  0738                     l3480:	
 10609                           
 10610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
 10611  0738  0842               	movf	(sprintf@prec+1)^(0+128),w
 10612  0739  3A80               	xorlw	128
 10613  073A  00A5               	movwf	??_sprintf^(0+128)
 10614  073B  083C               	movf	(sprintf@width+1)^(0+128),w
 10615  073C  3A80               	xorlw	128
 10616  073D  0225               	subwf	??_sprintf^(0+128),w
 10617  073E  1D03               	skipz
 10618  073F  2F42               	goto	u5795
 10619  0740  083B               	movf	sprintf@width^(0+128),w
 10620  0741  0241               	subwf	sprintf@prec^(0+128),w
 10621  0742                     u5795:	
 10622  0742  1803               	skipnc
 10623  0743  2F45               	goto	u5791
 10624  0744  2F46               	goto	u5790
 10625  0745                     u5791:	
 10626  0745  2F4F               	goto	l3484
 10627  0746                     u5790:	
 10628  0746                     l3482:	
 10629                           
 10630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
 10631  0746  1683               	bsf	3,5	;RP0=1, select bank1
 10632  0747  1303               	bcf	3,6	;RP1=0, select bank1
 10633  0748  0841               	movf	sprintf@prec^(0+128),w
 10634  0749  02BB               	subwf	sprintf@width^(0+128),f
 10635  074A  0842               	movf	(sprintf@prec+1)^(0+128),w
 10636  074B  1C03               	skipc
 10637  074C  03BC               	decf	(sprintf@width+1)^(0+128),f
 10638  074D  02BC               	subwf	(sprintf@width+1)^(0+128),f
 10639  074E  2F53               	goto	l3486
 10640  074F                     l3484:	
 10641                           
 10642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
 10643  074F  1683               	bsf	3,5	;RP0=1, select bank1
 10644  0750  1303               	bcf	3,6	;RP1=0, select bank1
 10645  0751  01BB               	clrf	sprintf@width^(0+128)
 10646  0752  01BC               	clrf	(sprintf@width+1)^(0+128)
 10647  0753                     l3486:	
 10648                           
 10649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
 10650  0753  083C               	movf	(sprintf@width+1)^(0+128),w
 10651  0754  3A80               	xorlw	128
 10652  0755  3C80               	sublw	128
 10653  0756  1D03               	skipz
 10654  0757  2F5A               	goto	u5805
 10655  0758  083B               	movf	sprintf@width^(0+128),w
 10656  0759  0244               	subwf	sprintf@c^(0+128),w
 10657  075A                     u5805:	
 10658  075A  1803               	skipnc
 10659  075B  2F5D               	goto	u5801
 10660  075C  2F5E               	goto	u5800
 10661  075D                     u5801:	
 10662  075D  2F6A               	goto	l3490
 10663  075E                     u5800:	
 10664  075E                     l3488:	
 10665                           
 10666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
 10667  075E  1683               	bsf	3,5	;RP0=1, select bank1
 10668  075F  1303               	bcf	3,6	;RP1=0, select bank1
 10669  0760  0844               	movf	sprintf@c^(0+128),w
 10670  0761  00A5               	movwf	??_sprintf^(0+128)
 10671  0762  01A6               	clrf	(??_sprintf^(0+128)+1)
 10672  0763  0825               	movf	??_sprintf^(0+128),w
 10673  0764  02BB               	subwf	sprintf@width^(0+128),f
 10674  0765  0826               	movf	(??_sprintf+1)^(0+128),w
 10675  0766  1C03               	skipc
 10676  0767  03BC               	decf	(sprintf@width+1)^(0+128),f
 10677  0768  02BC               	subwf	(sprintf@width+1)^(0+128),f
 10678  0769  2F6E               	goto	l3492
 10679  076A                     l3490:	
 10680                           
 10681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
 10682  076A  1683               	bsf	3,5	;RP0=1, select bank1
 10683  076B  1303               	bcf	3,6	;RP1=0, select bank1
 10684  076C  01BB               	clrf	sprintf@width^(0+128)
 10685  076D  01BC               	clrf	(sprintf@width+1)^(0+128)
 10686  076E                     l3492:	
 10687                           
 10688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1413:   if(
      +                          flag & 0x04) {
 10689  076E  1D39               	btfss	sprintf@flag^(0+128),2
 10690  076F  2F71               	goto	u5811
 10691  0770  2F72               	goto	u5810
 10692  0771                     u5811:	
 10693  0771  2FA7               	goto	l3508
 10694  0772                     u5810:	
 10695  0772                     l3494:	
 10696                           
 10697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1418:    if
      +                          (flag & 0x03)
 10698  0772  3003               	movlw	3
 10699  0773  0539               	andwf	sprintf@flag^(0+128),w
 10700  0774  00A5               	movwf	??_sprintf^(0+128)
 10701  0775  3000               	movlw	0
 10702  0776  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10703  0777  00A6               	movwf	(??_sprintf+1)^(0+128)
 10704  0778  0825               	movf	??_sprintf^(0+128),w
 10705  0779  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10706  077A  1903               	btfsc	3,2
 10707  077B  2F7D               	goto	u5821
 10708  077C  2F7E               	goto	u5820
 10709  077D                     u5821:	
 10710  077D  2F89               	goto	l3500
 10711  077E                     u5820:	
 10712  077E                     l3496:	
 10713                           
 10714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1419:     (
      +                          (*sp++ = ('-')));
 10715  077E  302D               	movlw	45
 10716  077F  00A5               	movwf	??_sprintf^(0+128)
 10717  0780  0843               	movf	sprintf@sp^(0+128),w
 10718  0781  0084               	movwf	4
 10719  0782  0825               	movf	??_sprintf^(0+128),w
 10720  0783  1383               	bcf	3,7	;select IRP bank0
 10721  0784  0080               	movwf	0
 10722  0785                     l3498:	
 10723  0785  3001               	movlw	1
 10724  0786  00A5               	movwf	??_sprintf^(0+128)
 10725  0787  0825               	movf	??_sprintf^(0+128),w
 10726  0788  07C3               	addwf	sprintf@sp^(0+128),f
 10727  0789                     l3500:	
 10728                           
 10729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1441:    if
      +                          (width)
 10730  0789  083B               	movf	sprintf@width^(0+128),w
 10731  078A  043C               	iorwf	(sprintf@width+1)^(0+128),w
 10732  078B  1903               	btfsc	3,2
 10733  078C  2F8E               	goto	u5831
 10734  078D  2F8F               	goto	u5830
 10735  078E                     u5831:	
 10736  078E  2FDA               	goto	l3522
 10737  078F                     u5830:	
 10738  078F                     l3502:	
 10739                           
 10740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1443:      
      +                          ((*sp++ = ('0')));
 10741  078F  3030               	movlw	48
 10742  0790  00A5               	movwf	??_sprintf^(0+128)
 10743  0791  0843               	movf	sprintf@sp^(0+128),w
 10744  0792  0084               	movwf	4
 10745  0793  0825               	movf	??_sprintf^(0+128),w
 10746  0794  1383               	bcf	3,7	;select IRP bank0
 10747  0795  0080               	movwf	0
 10748  0796                     l3504:	
 10749  0796  3001               	movlw	1
 10750  0797  00A5               	movwf	??_sprintf^(0+128)
 10751  0798  0825               	movf	??_sprintf^(0+128),w
 10752  0799  07C3               	addwf	sprintf@sp^(0+128),f
 10753  079A                     l3506:	
 10754  079A  30FF               	movlw	255
 10755  079B  07BB               	addwf	sprintf@width^(0+128),f
 10756  079C  1803               	skipnc
 10757  079D  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10758  079E  30FF               	movlw	255
 10759  079F  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10760  07A0  083B               	movf	sprintf@width^(0+128),w
 10761  07A1  043C               	iorwf	(sprintf@width+1)^(0+128),w
 10762  07A2  1D03               	btfss	3,2
 10763  07A3  2FA5               	goto	u5841
 10764  07A4  2FA6               	goto	u5840
 10765  07A5                     u5841:	
 10766  07A5  2F8F               	goto	l3502
 10767  07A6                     u5840:	
 10768  07A6  2FDA               	goto	l3522
 10769  07A7                     l3508:	
 10770                           
 10771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
 10772  07A7  083B               	movf	sprintf@width^(0+128),w
 10773  07A8  043C               	iorwf	(sprintf@width+1)^(0+128),w
 10774  07A9  1903               	btfsc	3,2
 10775  07AA  2FAC               	goto	u5851
 10776  07AB  2FAD               	goto	u5850
 10777  07AC                     u5851:	
 10778  07AC  2FC4               	goto	l3516
 10779  07AD                     u5850:	
 10780  07AD                     l3510:	
 10781                           
 10782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
 10783  07AD  3020               	movlw	32
 10784  07AE  00A5               	movwf	??_sprintf^(0+128)
 10785  07AF  0843               	movf	sprintf@sp^(0+128),w
 10786  07B0  0084               	movwf	4
 10787  07B1  0825               	movf	??_sprintf^(0+128),w
 10788  07B2  1383               	bcf	3,7	;select IRP bank0
 10789  07B3  0080               	movwf	0
 10790  07B4                     l3512:	
 10791  07B4  3001               	movlw	1
 10792  07B5  00A5               	movwf	??_sprintf^(0+128)
 10793  07B6  0825               	movf	??_sprintf^(0+128),w
 10794  07B7  07C3               	addwf	sprintf@sp^(0+128),f
 10795  07B8                     l3514:	
 10796  07B8  30FF               	movlw	255
 10797  07B9  07BB               	addwf	sprintf@width^(0+128),f
 10798  07BA  1803               	skipnc
 10799  07BB  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10800  07BC  30FF               	movlw	255
 10801  07BD  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10802  07BE  083B               	movf	sprintf@width^(0+128),w
 10803  07BF  043C               	iorwf	(sprintf@width+1)^(0+128),w
 10804  07C0  1D03               	btfss	3,2
 10805  07C1  2FC3               	goto	u5861
 10806  07C2  2FC4               	goto	u5860
 10807  07C3                     u5861:	
 10808  07C3  2FAD               	goto	l3510
 10809  07C4                     u5860:	
 10810  07C4                     l3516:	
 10811                           
 10812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
 10813  07C4  3003               	movlw	3
 10814  07C5  0539               	andwf	sprintf@flag^(0+128),w
 10815  07C6  00A5               	movwf	??_sprintf^(0+128)
 10816  07C7  3000               	movlw	0
 10817  07C8  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10818  07C9  00A6               	movwf	(??_sprintf+1)^(0+128)
 10819  07CA  0825               	movf	??_sprintf^(0+128),w
 10820  07CB  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10821  07CC  1903               	btfsc	3,2
 10822  07CD  2FCF               	goto	u5871
 10823  07CE  2FD0               	goto	u5870
 10824  07CF                     u5871:	
 10825  07CF  2FDA               	goto	l3522
 10826  07D0                     u5870:	
 10827  07D0                     l3518:	
 10828                           
 10829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 10830  07D0  302D               	movlw	45
 10831  07D1  00A5               	movwf	??_sprintf^(0+128)
 10832  07D2  0843               	movf	sprintf@sp^(0+128),w
 10833  07D3  0084               	movwf	4
 10834  07D4  0825               	movf	??_sprintf^(0+128),w
 10835  07D5  1383               	bcf	3,7	;select IRP bank0
 10836  07D6  0080               	movwf	0
 10837  07D7  160A  118A  2D42   	goto	l3240
 10838  07DA                     l3522:	
 10839                           
 10840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 10841  07DA  3001               	movlw	1
 10842  07DB  07A0               	addwf	sprintf@f^(0+128),f
 10843  07DC  30FF               	movlw	-1
 10844  07DD  0720               	addwf	sprintf@f^(0+128),w
 10845  07DE  0084               	movwf	4
 10846  07DF  160A  158A  200A  120A  118A  	fcall	stringdir
 10847  07E4  00A5               	movwf	??_sprintf^(0+128)
 10848  07E5  0825               	movf	??_sprintf^(0+128),w
 10849  07E6  00C4               	movwf	sprintf@c^(0+128)
 10850  07E7  0844               	movf	sprintf@c^(0+128),w
 10851  07E8  1D03               	btfss	3,2
 10852  07E9  2FEB               	goto	u5881
 10853  07EA  2FEE               	goto	u5880
 10854  07EB                     u5881:	
 10855  07EB  160A  118A  2D35   	goto	l3236
 10856  07EE                     u5880:	
 10857  07EE                     l3524:	
 10858                           
 10859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 10860  07EE  0843               	movf	sprintf@sp^(0+128),w
 10861  07EF  0084               	movwf	4
 10862  07F0  1383               	bcf	3,7	;select IRP bank0
 10863  07F1  0180               	clrf	0
 10864  07F2                     l311:	
 10865  07F2  0008               	return
 10866  07F3                     __end_of_sprintf:	


Data Sizes:
    Strings     17
    Constant    144
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     39      61
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> buffer(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK1[16]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _voltaje1->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    ___fldiv->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready

Critical Paths under _main in BANK0

    _main->_voltaje1
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _voltaje1->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38476
                                             37 BANK1      2     2      0
                            _lcd_cmd
                           _lcd_init
                           _voltaje1
 ---------------------------------------------------------------------------------
 (1) _voltaje1                                             2     2      0   38432
                                             78 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _lcd_cmd
                            _lcd_msg
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   31899
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _lcd_msg                                              2     0      2     219
                                              3 COMMON     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (3) _lcd_dwr                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (4) _lcd_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _lcd_lat
     _lcd_ready
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _lcd_ready
   _voltaje1
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _lcd_cmd
       _lcd_lat
       _lcd_ready
     _lcd_msg
       _lcd_dwr
         _lcd_lat
         _lcd_ready
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3D       7       76.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 09 20:51:19 2020

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F               __CFG_CP$OFF 0000                        l82 1BBB  
                      l74 1ACB                        l91 1B6B                        l77 1AB9  
                      l85 1ADD                        l94 1AFC              ___awdiv@sign 0021  
                      fsr 0004       ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076  
                     l210 0C9E                       l203 152A                       l311 07F2  
                     l223 154C                       l315 1B2D                       l501 1C92  
                     l317 1B45                       l502 1CAE                       l510 1E88  
                     l238 160B                       l503 1CC3                       l351 1D7D  
                     l506 1E03                       l514 000E                       l290 06F0  
                     l282 0589                       l275 0543                       l700 131F  
                     l532 1FFF                       l509 1E6F                       l525 106F  
                     l533 1F71                       l621 1C75                       l518 1084  
                     l543 1FF2                       l631 1BF5                       l720 1303  
                     l528 1084                       l536 1FC2                       l481 085E  
                     l722 1313                       l714 1291                       l642 0084  
                     l571 1D17                       l804 1B80                       l468 1DE6  
                     l485 1142                       l646 012B                       l486 10A7  
                     l806 1B92                       l750 0FF3                       l663 01F6  
                     l655 02A8                       l648 0102                       l496 1135  
                     l744 0F6B                       l673 023C                       l489 1105  
                     l738 0FFF                       l667 021A                       l684 029C  
                     l676 027A                       l685 02A8                       l790 1F18  
                     l782 1EF0                       l688 1B20                       l776 1EAB  
                     l698 119F                       l778 1F42                       l796 0020  
                     l789 1F0C                       _RC4 003C                       _RC5 003D  
                     _RC6 003E              __CFG_CPD$OFF 0000                       _adc 00CB  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037               _sprintf$888 00AA  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            __CFG_LVP$OFF 0000              ___fltol@exp1 005B                      l3000 10CC  
                    l3010 10FF                      l3002 10D5                      l3012 1109  
                    l3020 1123                      l3004 10E7                      l3102 0004  
                    l3110 1009                      l3006 10F5                      l3104 000C  
                    l3120 1035                      l3112 1016                      l3040 1B3B  
                    l3032 1B21                      l3200 1F06                      l3008 10F6  
                    l2400 1D9B                      l3106 000E                      l3122 103D  
                    l3050 1D2B                      l3042 1B41                      l3034 1B23  
                    l3210 1F39                      l3202 1F10                      l3026 112A  
                    l3018 1111                      l2410 1DB3                      l2402 1DA1  
                    l3220 1AC4                      l3140 1064                      l3132 104B  
                    l3124 103F                      l3116 101F                      l3060 1D65  
                    l3052 1D38                      l3036 1B27                      l3212 1F3A  
                    l3204 1F1A                      l3028 113A                      l2500 1BD0  
                    l2412 1DC4                      l2404 1DA4                      l2420 1DD8  
                    l3300 1683                      l3222 1AC5                      l3230 1B55  
                    l3070 1C76                      l3142 1074                      l3126 1043  
                    l3134 105D                      l3118 1034                      l3062 1D66  
                    l3054 1D3C                      l3046 1D18                      l3150 1CCF  
                    l3038 1B34                      l3206 1F30                      l2350 1B7A  
                    l2502 1BD4                      l2510 1BF1                      l2422 1DDD  
                    l2414 1DCA                      l2406 1DAB                      l2430 0807  
                    l3310 16B5                      l3302 1687                      l2360 1B97  
                    l3224 1AC6                      l3216 1ABB                      l3232 1B5B  
                    l3072 1C8A                      l2600 010F                      l2520 0032  
                    l3144 1079                      l3064 1D6F                      l3056 1D45  
                    l3048 1D28                      l3160 1D09                      l3152 1CDC  
                    l3208 1F35                      l2352 1B89                      l2344 1B6D  
                    l2504 1BDE                      l2424 1DE2                      l2416 1DCB  
                    l2408 1DAF                      l2440 081B                      l2432 080B  
                    l3400 04AC                      l3320 1704                      l3312 16C8  
                    l3304 168B                      l3240 1542                      l2370 1BA6  
                    l2362 1B9B                      l3218 1AC0                      l3226 1B46  
                    l3074 1CA6                      l3090 1E23                      l3082 1DE7  
                    l2602 0111                      l2610 0123                      l2530 0046  
                    l2522 0033                      l2514 0021                      l3058 1D57  
                    l3066 1D75                      l3154 1CE0                      l3162 1D0F  
                    l3146 1CC4                      l2354 1B8E                      l2346 1B6F  
                    l2506 1BE4                      l2418 1DD2                      l2450 0833  
                    l2442 0821                      l2434 0810                      l3410 04D8  
                    l3402 04B0                      l3322 174F                      l3314 16DB  
                    l3306 16A4                      l3330 1794                      l3250 1564  
                    l3242 1547                      l3234 152E                      l2380 1AAE  
                    l2372 1BAF                      l2364 1B9C                      l3228 1B47  
                    l3076 1CC0                      l3092 1E47                      l3084 1DFB  
                    l2700 0296                      l2620 0154                      l2612 012F  
                    l2604 0115                      l2540 005C                      l2524 0038  
                    l2532 0048                      l2516 0028                      l3156 1CF2  
                    l3148 1CCC                      l3180 1EB3                      l3172 1E8A  
                    l2348 1B76                      l2508 1BEB                      l2460 0855  
                    l2452 083D                      l2444 0824                      l2436 0812  
                    l2428 0806                      l3500 0789                      l3420 0556  
                    l3412 04DD                      l3404 04B6                      l3340 02EB  
                    l3332 17A3                      l3324 1768                      l3316 16DF  
                    l3308 16AF                      l3260 15A4                      l3252 1574  
                    l3244 154D                      l3236 1535                      l2382 1AB6  
                    l2374 1BB0                      l2366 1B9D                      l2358 1B93  
                    l3078 1CC2                      l3094 1E4B                      l3086 1E17  
                    l2702 0298                      l2630 016B                      l2622 0158  
                    l2614 0134                      l2606 0116                      l2550 0071  
                    l2542 0062                      l2534 0050                      l2526 003D  
                    l2518 002E                      l3166 1AFD                      l3158 1D00  
                    l3190 1ED5                      l3174 1E8F                      l2710 0CA6  
                    l2470 1C3A                      l2390 1D8A                      l2462 085A  
                    l2454 0843                      l2446 082B                      l2438 0816  
                    l3510 07AD                      l3502 078F                      l3430 0583  
                    l3422 055A                      l3414 0518                      l3406 04C3  
                    l3350 0344                      l3342 02FA                      l3334 17EA  
                    l3326 1771                      l3318 16E5                      l3270 15CA  
                    l3254 1578                      l3262 15B4                      l3238 153B  
                    l2376 1BB8                      l2368 1B9E                      l3600 11F0  
                    l3096 1E85                      l3088 1E1F                      l2704 02A3  
                    l2640 01CE                      l2632 016C                      l2624 015C  
                    l2608 011F                      l2560 008E                      l2552 0079  
                    l2544 0066                      l2536 0055                      l2528 0045  
                    l3168 1B01                      l3192 1ED9                      l3184 1EBC  
                    l3176 1E93                      l2800 0F3C                      l2720 0CBB  
                    l2712 0CAC                      l2480 1C5D                      l2472 1C3D  
                    l2392 1D8C                      l2384 1D7E                      l2456 084A  
                    l2448 082F                      l3512 07B4                      l3504 0796  
                    l3440 05C0                      l3432 0592                      l3424 0560  
                    l3416 0537                      l3408 04D1                      l3360 03EE  
                    l3344 0315                      l3336 02A9                      l3328 178C  
                    l3280 1609                      l3272 15DF                      l3264 15C2  
                    l3256 158D                      l3248 1551                      l2378 1AAB  
                    l3610 1215                      l3602 11F8                      l3098 1E87  
                    l2706 02A7                      l2650 0203                      l2642 01D4  
                    l2634 0175                      l2626 0165                      l2618 013D  
                    l2570 00A2                      l2562 0092                      l2554 007A  
                    l2546 0067                      l2538 005B                      l3194 1EE7  
                    l3186 1EC1                      l3178 1EA3                      l2810 0F54  
                    l2802 0F45                      l2730 0CD8                      l2722 0CC3  
                    l2714 0CB0                      l2482 1C63                      l2474 1C44  
                    l2466 1C32                      l2394 1D90                      l2386 1D81  
                    l2458 0850                      l3514 07B8                      l3506 079A  
                    l3442 061B                      l3450 06BC                      l3434 0597  
                    l3426 056D                      l3418 054D                      l3362 03F0  
                    l3354 0363                      l3346 031E                      l3338 02C4  
                    l3290 163B                      l3274 15F2                      l3266 15C3  
                    l3258 15A0                      l3522 07DA                      l3620 1240  
                    l3612 1216                      l3604 11FA                      l3540 1143  
                    l2660 021E                      l2644 01D9                      l2628 0167  
                    l2636 017A                      l2580 00B6                      l2572 00A6  
                    l2564 0096                      l2548 006C                      l2556 007C  
                    l3196 1EF7                      l3188 1ECE                      l2820 0F83  
                    l2812 0F68                      l2804 0F4B                      l2740 0CEF  
                    l2732 0CDC                      l2724 0CC5                      l2716 0CB1  
                    l2708 0C9F                      l2484 1C64                      l2476 1C48  
                    l2468 1C34                      l2492 1BBC                      l2396 1D95  
                    l2388 1D85                      l2900 0AFB                      l3516 07C4  
                    l3508 07A7                      l3452 06C4                      l3444 0656  
                    l3436 059E                      l3428 057C                      l3380 0460  
                    l3372 0429                      l3348 0326                      l3356 036C  
                    l3292 163F                      l3460 06DC                      l3524 07EE  
                    l3284 160D                      l3276 15F6                      l3268 15C7  
                    l3700 0910                      l3630 125D                      l3606 11FF  
                    l3614 121F                      l3622 1244                      l3550 115A  
                    l3542 114A                      l2662 0221                      l2654 020C  
                    l2638 0190                      l2646 01E8                      l2670 022E  
                    l2590 00CA                      l2582 00BA                      l2574 00AA  
                    l2566 009A                      l2558 008A                      l3198 1F02  
                    l2830 0FBE                      l2822 0F87                      l2806 0F4F  
                    l2742 0CF1                      l2734 0CDD                      l2726 0CCD  
                    l2718 0CB6                      l2486 1C6B                      l2478 1C4C  
                    l2494 1BC2                      l2398 1D99                      l3518 07D0  
                    l3470 0711                      l3462 06E2                      l3454 06CB  
                    l3446 0675                      l3438 05A2                      l3390 0482  
                    l3382 0466                      l3374 0433                      l3358 03A1  
                    l3294 164D                      l3286 1629                      l3278 1607  
                    l3702 0919                      l3710 1BFA                      l3640 1275  
                    l3632 1261                      l3624 124A                      l3616 1231  
                    l3608 1211                      l3560 1172                      l3552 115F  
                    l3544 1150                      l2680 0241                      l2672 022F  
                    l2664 0223                      l2656 0215                      l2648 01FE  
                    l2584 00BE                      l2576 00AE                      l2568 009E  
                    l2592 00CE                      l2840 0FEB                      l2832 0FCD  
                    l2824 0FA0                      l2816 0F70                      l2808 0F50  
                    l2760 0D62                      l2752 0D0C                      l2744 0CF9  
                    l2736 0CE2                      l2728 0CD2                      l2488 1C71  
                    l2496 1BC5                      l2920 0017                      l2912 0C72  
                    l3480 0738                      l3472 071A                      l3464 06EA  
                    l3456 06CF                      l3448 0681                      l3392 048B  
                    l3384 046A                      l3376 044E                      l3368 03F2  
                    l3296 1651                      l3288 1637                      l3704 091F  
                    l3720 1C12                      l3712 1BFB                      l3650 1296  
                    l3642 1276                      l3634 1262                      l3626 1252  
                    l3618 1232                      l3570 1187                      l3562 1177  
                    l3554 1167                      l3546 1154                      l2850 1AD2  
                    l2690 027F                      l2682 0246                      l2674 0233  
                    l2666 0228                      l2658 0219                      l2594 00CF  
                    l2586 00C2                      l2578 00B2                      l2930 1F56  
                    l2842 0FEC                      l2834 0FD7                      l2818 0F75  
                    l2826 0FA6                      l2770 0DDF                      l2762 0D8E  
                    l2754 0D1C                      l2746 0CFE                      l2738 0CE7  
                    l2498 1BCC                      l2922 001D                      l2906 0BE3  
                    l3490 076A                      l3482 0746                      l3474 0722  
                    l3466 06FB                      l3458 06D5                      l3394 048F  
                    l3386 0476                      l3378 0454                      l3298 166A  
                    l3706 0935                      l3730 1C24                      l3722 1C13  
                    l3714 1C0A                      l3652 129B                      l3660 12CC  
                    l3644 127A                      l3636 126B                      l3628 1254  
                    l3580 11A7                      l3572 118C                      l3564 117D  
                    l3556 1168                      l3548 1155                      l2852 1AD6  
                    l2692 0284                      l2684 0254                      l2676 0239  
                    l2668 022A                      l2596 00E6                      l2588 00C6  
                    l2940 1F72                      l2844 0FF7                      l2836 0FD9  
                    l2828 0FB3                      l2780 0E5F                      l2772 0DFC  
                    l2764 0DAA                      l2756 0D29                      l2748 0D03  
                    l2860 1329                      l2924 001F                      l2916 0010  
                    l2908 0BEA                      l3492 076E                      l3484 074F  
                    l3476 072E                      l3468 0702                      l3388 047D  
                    l3396 0495                      l3724 1C14                      l3716 1C10  
                    l3708 1BF6                      l3670 1302                      l3662 12D9  
                    l3654 12A9                      l3646 128E                      l3638 1271  
                    l3590 11C5                      l3582 11B3                      l3574 1194  
                    l3566 1181                      l3558 116A                      l2854 1AD7  
                    l2694 028C                      l2686 0258                      l2598 0106  
                    l2950 1F9B                      l2942 1F78                      l2934 1F5F  
                    l2838 0FE7                      l2790 0F17                      l2782 0E8C  
                    l2774 0E0C                      l2766 0DC6                      l2758 0D46  
                    l2918 0011                      l3494 0772                      l3486 0753  
                    l3478 0734                      l3398 04A3                      l3726 1C19  
                    l3718 1C11                      l3672 1309                      l3664 12E7  
                    l3656 12AD                      l3584 11B7                      l3576 1195  
                    l3568 1182                      l2856 1AD8                      l2848 1ACD  
                    l2696 0291                      l2688 0276                      l2960 1FC6  
                    l2952 1FA9                      l2944 1F87                      l2928 1F43  
                    l2792 0F20                      l2784 0E9C                      l2776 0E29  
                    l2768 0DCF                      l2872 14E7                      l2880 0949  
                    l3496 077E                      l3488 075E                      l3728 1C1E  
                    l3682 1ADE                      l3674 130D                      l3666 12F6  
                    l3658 12C6                      l3594 11CE                      l3578 1197  
                    l2698 0292                      l2954 1FB3                      l2946 1F89  
                    l2794 0F2E                      l2786 0EC9                      l2778 0E42  
                    l2866 1436                      l2858 1323                      l2890 0A3F  
                    l2882 0950                      l3498 0785                      l3690 087B  
                    l3676 130F                      l3668 12FA                      l3596 11E0  
                    l3588 11C0                      l2980 1085                      l2956 1FB4  
                    l2948 1F92                      l2796 0F37                      l2788 0EEF  
                    l2868 143C                      l2876 0943                      l3692 087C  
                    l3684 085F                      l3598 11E8                      l2982 1092  
                    l2974 1FE7                      l2966 1FCE                      l2958 1FBC  
                    l2798 0F3B                      l2894 0AC7                      l2878 0947  
                    l3694 0889                      l3686 086D                      l2992 10A8  
                    l2976 1FF7                      l2968 1FE0                      l2888 0A38  
                    l3792 155F                      l3696 08A0                      l3688 0875  
                    l2994 10B0                      l2986 109B                      l2898 0AF4  
                    l3794 1621                      l3698 08B7                      l2996 10C1  
                    l2998 10C3                      STR_1 18AB                      STR_2 18A0  
                    u3100 1B7A                      u3101 1B79                      u3120 1B8E  
                    u3200 1DC4                      u3121 1B8D                      u4001 0D54  
                    u3201 1DC3                      u3130 1BAF                      u4002 0D5B  
                    u3131 1BAE                      u3115 1B81                      u4011 0D70  
                    u4003 0D62                      u4012 0D77                      u3220 1DD8  
                    u3140 1D85                      u4101 0EAB                      u4021 0D9C  
                    u4013 0D7E                      u3221 1DD7                      u3205 1DC0  
                    u3141 1D84                      u4110 0ED5                      u4102 0EB2  
                    u4022 0DA3                      u3230 1DDD                      u3150 1D90  
                    u3310 0850                      u4103 0EB9                      u4031 0DB8  
                    u4023 0DAA                      u3231 1DDC                      u3215 1DCC  
                    u3151 1D8F                      u3311 084F                      u5000 1E4B  
                    u4200 0F54                      u4032 0DBF                      u3400 1BC2  
                    u3160 1DA1                      u3320 0855                      u3240 080B  
                    u5001 1E4A                      u4201 0F53                      u4121 0EE1  
                    u4033 0DC6                      u3401 1BC1                      u3161 1DA0  
                    u3321 0854                      u3305 0844                      u3241 080A  
                    u4210 0F68                      u4130 0EFD                      u4122 0EE8  
                    u3330 1C3A                      u3250 0816                      u5011 1E5A  
                    u4211 0F67                      u4123 0EEF                      u4115 0ED0  
                    u4051 0DEE                      u3331 1C39                      u3251 0815  
                    u5020 1E85                      u5012 1E5B                      u3500 0066  
                    u5100 1063                      u4220 0F6F                      u4052 0DF5  
                    u3420 1BD4                      u3180 1DB3                      u3260 0821  
                    u5021 1E84                      u5013 1E60                      u3501 0065  
                    u5101 1062                      u4221 0F6E                      u4141 0F09  
                    u4061 0E1B                      u4053 0DFC                      u4045 0DC8  
                    u3421 1BD3                      u3181 1DB2                      u3261 0820  
                    u5014 1E61                      u5030 000C                      u3510 006C  
                    u4230 0F75                      u4142 0F10                      u4062 0E22  
                    u3350 1C4C                      u3430 1BDE                      u5015 1E66  
                    u5031 000B                      u3511 006B                      u4231 0F74  
                    u4143 0F17                      u4135 0EF8                      u4063 0E29  
                    u3351 1C4B                      u3431 1BDD                      u3415 1BC6  
                    u3175 1DA5                      u6000 1215                      u5016 1E67  
                    u3520 0071                      u5120 1074                      u5040 1016  
                    u5200 1E8F                      u4240 0F87                      u3280 0833  
                    u6001 1214                      u5025 1E81                      u3521 0070  
                    u5121 1073                      u5041 1015                      u5201 1E8E  
                    u4241 0F86                      u4081 0E51                      u3345 1C3E  
                    u4305 1346                      u3281 0832                      u3610 012B  
                    u3530 008A                      u5130 1079                      u5050 102D  
                    u5210 1E93                      u4250 0F96                      u4170 0F3B  
                    u4082 0E58                      u3370 1C5D                      u3450 1BF1  
                    u4330 143C                      u3290 083D                      u3611 012A  
                    u3531 0089                      u5131 1078                      u5115 1066  
                    u5211 1E92                      u4171 0F3A                      u4155 0F19  
                    u4091 0E7E                      u4083 0E5F                      u4075 0E2B  
                    u3371 1C5C                      u3451 1BF0                      u3435 1BDA  
                    u4331 143B                      u4315 13A0                      u3195 1DB4  
                    u3291 083C                      u3275 0825                      u6100 128E  
                    u6020 1231                      u3620 012F                      u3540 008E  
                    u3460 0032                      u5060 1043                      u5140 1CCC  
                    u5300 1F10                      u5220 1EB3                      u4260 0FB3  
                    u4092 0E85                      u4500 0BEA                      u4420 0A3F  
                    u6101 128D                      u6021 1230                      u3701 01A7  
                    u3621 012E                      u3605 0118                      u3541 008D  
                    u3461 0031                      u5061 1042                      u5141 1CCB  
                    u5301 1F0F                      u5221 1EB2                      u4261 0FB2  
                    u4165 0F30                      u4093 0E8C                      u3365 1C4D  
                    u3445 1BE5                      u4325 13F5                      u4501 0BE9  
                    u4421 0A3E                      u4405 09AC                      u6110 1295  
                    u6030 124A                      u3710 01BB                      u3702 01A8  
                    u3630 0134                      u3550 00E6                      u3470 0038  
                    u5070 104A                      u5310 1F25                      u4270 0FCD  
                    u4190 0F4F                      u3390 1C71                      u6111 1294  
                    u6031 1249                      u6015 1218                      u3711 01BC  
                    u3703 01AD                      u3631 0133                      u3551 00E5  
                    u3471 0037                      u5071 1049                      u5055 1028  
                    u4271 0FCC                      u4255 0F91                      u4191 0F4E  
                    u3391 1C70                      u3375 1C59                      u3295 0839  
                    u4415 09F7                      u6120 129B                      u6040 1252  
                    u3800 0233                      u3720 01D9                      u3712 01C1  
                    u3704 01AE                      u3560 00F1                      u3480 003D  
                    u5160 1CE0                      u5320 1F35                      u5240 1ED4  
                    u4280 0FEB                      u5400 1637                      u6121 129A  
                    u6041 1251                      u6025 122D                      u3801 0232  
                    u3721 01D8                      u3713 01C2                      u3705 01B3  
                    u3641 0146                      u3561 00EF                      u3481 003C  
                    u5161 1CDF                      u5321 1F34                      u5241 1ED3  
                    u4281 0FEA                      u4265 0FAF                      u4185 0F3E  
                    u3385 1C65                      u4345 1459                      u5401 1634  
                    u6130 12AD                      u3810 0239                      u3730 01FE  
                    u3706 01B4                      u3650 0158                      u3642 014D  
                    u3570 00F2                      u3490 005B                      u5090 105C  
                    u5170 1CF2                      u5330 1F39                      u4610 1FC2  
                    u4290 1329                      u4370 0947                      u5410 163B  
                    u6131 12AC                      u3811 0238                      u3731 01FD  
                    u3651 0157                      u3643 0154                      u3555 00E2  
                    u3491 005A                      u5091 105B                      u5171 1CF1  
                    u5155 1CD1                      u5331 1F38                      u5315 1F20  
                    u5235 1EC6                      u4611 1FC1                      u4275 0FC9  
                    u4355 14A6                      u4291 1328                      u4515 0BFD  
                    u4435 0A52                      u4371 0946                      u5411 163A  
                    u6140 12BC                      u6060 1261                      u5340 1B6B  
                    u3900 0296                      u3820 0240                      u3740 0203  
                    u3660 015C                      u3580 0106                      u5260 1EF6  
                    u4700 10A6                      u4620 1FC6                      u4540 0017  
                    u4460 0AFB                      u4380 0950                      u5500 02EB  
                    u5420 166A                      u6061 1260                      u5341 1B6A  
                    u3901 0295                      u3821 023F                      u3741 0202  
                    u3661 015B                      u3581 0105                      u5085 104C  
                    u5261 1EF5                      u4701 10A5                      u4621 1FC5  
                    u4605 1FB5                      u4365 14F2                      u4541 0016  
                    u4525 0C39                      u4461 0AFA                      u4445 0A8E  
                    u4381 094F                      u5501 02EA                      u5421 1669  
                    u6150 12D9                      u3910 02A7                      u3830 0246  
                    u3670 016B                      u3590 0115                      u5190 1D0F  
                    u4630 1FCD                      u4550 001D                      u5510 02FA  
                    u5430 16A4                      u5350 153B                      u6151 12D8  
                    u6055 1256                      u3911 02A6                      u3831 0245  
                    u3671 016A                      u3591 0114                      u5191 1D0E  
                    u5175 1CEE                      u5255 1EE8                      u4631 1FCC  
                    u4551 001C                      u4535 0C75                      u4455 0ACA  
                    u5511 02F9                      u5431 16A3                      u5351 153A  
                    u6207 0871                      u6160 12F6                      u6080 1275  
                    u3840 0258                      u3760 0219                      u5280 1F06  
                    u4720 10E7                      u4560 1F56                      u3920 0CB0  
                    u5600 04A2                      u5520 0315                      u5440 16DF  
                    u5360 1574                      u6217 1BA2                      u6161 12F5  
                    u6145 12B7                      u6081 1274                      u3841 0257  
                    u3761 0218                      u5185 1D01                      u5281 1F05  
                    u4721 10E6                      u4561 1F55                      u3921 0CAF  
                    u5601 04A1                      u5521 0314                      u5441 16DE  
                    u5361 1573                      u6170 130D                      u6090 127A  
                    u3850 0267                      u3770 021E                      u3690 0190  
                    u5290 1F0C                      u4810 113A                      u4650 1FDF  
                    u4570 1F70                      u3930 0CB6                      u5610 04C3  
                    u5450 1768                      u5370 15B4                      u6227 1BB4  
                    u6171 130C                      u6155 12D5                      u6091 1279  
                    u6075 1264                      u3771 021D                      u3755 020E  
                    u3691 018F                      u5291 1F0B                      u5275 1EFB  
                    u4811 1139                      u4715 10CE                      u4651 1FDE  
                    u4571 1F6F                      u3931 0CB5                      u4475 0B1B  
                    u4395 0970                      u5611 04C2                      u5515 02F6  
                    u5451 1767                      u5371 15B3                      u3860 0276  
                    u3780 0228                      u4900 1D57                      u4820 1B27  
                    u4740 1105                      u4660 1FE6                      u3940 0CBB  
                    u5700 06C3                      u5620 04D1                      u5540 0428  
                    u5460 178C                      u5380 15C2                      u6180 087B  
                    u6237 1AB2                      u6165 12F2                      u3861 0275  
                    u3781 0227                      u3693 018C                      u3685 016E  
                    u4901 1D56                      u4821 1B26                      u4805 112C  
                    u4741 1104                      u4725 10E3                      u4661 1FE5  
                    u4645 1FCF                      u3941 0CBA                      u4485 0B57  
                    u5701 06C2                      u5621 04D0                      u5605 049E  
                    u5541 0427                      u5461 178B                      u5381 15C1  
                    u6181 087A                      u3870 027F                      u3790 022E  
                    u4750 1109                      u4590 1FA9                      u3950 0CDC  
                    u5710 06DB                      u5550 0433                      u5470 17A3  
                    u5390 1606                      u3871 027E                      u3855 0262  
                    u3791 022D                      u4751 1108                      u4735 10F8  
                    u4591 1FA8                      u3951 0CDB                      u4495 0BA2  
                    u5711 06DA                      u5615 04BF                      u5551 0432  
                    u5535 03F5                      u5471 17A2                      u5391 1605  
                    u3880 0284                      u4920 1D75                      u4760 1110  
                    u4680 1FF7                      u3960 0CE2                      u5800 075E  
                    u5720 06E2                      u5640 054C                      u5560 044E  
                    u5480 02A9                      u3881 0283                      u4921 1D74  
                    u4905 1D53                      u4761 110F                      u4681 1FF6  
                    u4585 1F94                      u3961 0CE1                      u5801 075D  
                    u5721 06E1                      u5641 054B                      u5561 044D  
                    u5545 0424                      u5481 17FA                      u4930 1C8A  
                    u3890 0291                      u4850 1B41                      u4690 1092  
                    u3970 0CE7                      u5810 0772                      u5730 06EA  
                    u5650 056D                      u5570 0460                      u5490 02C4  
                    u4931 1C89                      u3891 0290                      u4915 1D67  
                    u4851 1B40                      u4835 1B2E                      u4691 1091  
                    u4675 1FE9                      u4595 1FA5                      u3971 0CE6  
                    u5811 0771                      u5731 06E9                      u5651 056C  
                    u5635 04E0                      u5571 045F                      u5491 02C3  
                    u5475 179F                      u5900 115A                      u4940 1CA6  
                    u4860 1D28                      u4780 1122                      u3980 0CFE  
                    u5820 077E                      u5740 06FB                      u5660 057C  
                    u5580 046A                      u5901 1159                      u4941 1CA5  
                    u4861 1D27                      u4845 1B35                      u4781 1121  
                    u3981 0CFD                      u5821 077D                      u5805 075A  
                    u5741 06FA                      u5661 057B                      u5581 0469  
                    u5485 17F5                      u6197 1C2A                      u5910 115F  
                    u4950 1CC0                      u4790 1129                      u3990 0D03  
                    u5830 078F                      u5750 0711                      u5670 0597  
                    u5590 0476                      u5911 115E                      u4951 1CBF  
                    u4791 1128                      u4775 1112                      u3991 0D02  
                    u5831 078E                      u5751 0710                      u5671 0596  
                    u5655 0569                      u5591 0475                      u5920 1181  
                    u4960 1DFB                      u4880 1D3C                      u5840 07A6  
                    u5760 0722                      u5921 1180                      u4961 1DFA  
                    u4881 1D3B                      u5841 07A5                      u5761 0721  
                    u5745 06F7                      u5665 0578                      u5930 1187  
                    u4970 1E17                      u5850 07AD                      u5770 072E  
                    u5931 1186                      u4955 1CBC                      u4971 1E16  
                    u4875 1D2D                      u5851 07AC                      u5771 072D  
                    u5755 070D                      u5940 118C                      u4980 1E23  
                    u5860 07C4                      u5780 0738                      u5941 118B  
                    u4981 1E22                      u5861 07C3                      u5781 0737  
                    u5685 061E                      u5950 11A7                      u5870 07D0  
                    u5790 0746                      u5951 11A6                      u4991 1E32  
                    u4895 1D3E                      u5871 07CF                      u5791 0745  
                    u5695 0684                      u5960 11C5                      u4992 1E33  
                    u5880 07EE                      u5961 11C4                      u4993 1E38  
                    u5881 07EB                      u5970 11FF                      u5890 1154  
                    u4994 1E39                      u5971 11FE                      u5891 1153  
                    u4995 1E3E                      u5795 0742                      u4996 1E3F  
                    u5985 1201                      u5995 120A              __CFG_WRT$OFF 0000  
                    _main 1BF6                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           ___fldiv@new_exp 0050             ___fltol@sign1 005A  
         __end_of___fladd 02A9                     ?_main 0070           __end_of___fldiv 1320  
         __end_of___awdiv 1DE7           __end_of___flneg 000F             __CFG_WDTE$OFF 0000  
         __end_of___awmod 085F           __end_of___flmul 1000           __end_of___flsub 1B21  
         __end_of___fltol 1085                     _ANSEL 0188           __end_of___lldiv 1D7E  
         ___awdiv@divisor 0077           __end_of___llmod 1D18           __end_of___lwdiv 1C76  
         __end_of___lwmod 1BF6           ___awdiv@counter 0020                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000           __end_of_lcd_cmd 1ACC           __end_of_lcd_lat 1ABA  
         __end_of_lcd_dwr 1ADE           __end_of_lcd_msg 1B6C           __end_of_dpowers 18A0  
                   _scale 0940           __end_of_isdigit 0021            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07F3            __CFG_MCLRE$OFF 0000           __initialization 07F3  
            __end_of_main 1C32                    ??_main 00C5      __size_of__tdiv_to_l_ 00BD  
        ___llmod@dividend 0074                    ?_scale 003E                    _ADRESH 001E  
                  _ADRESL 009E          ___awdiv@dividend 0079                    _ANSELH 0189  
        __end_of___xxtofl 1F43            __CFG_PWRTE$OFF 0000          __end_of__powers_ 1844  
        __end_of_lcd_init 1AFD                    ___flge 1DE7                    ___fleq 1C76  
               ??___fladd 005A                    ___wmul 1B21                 ??___fldiv 0046  
               ??___awdiv 007B                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _buffer 00CD                    _fround 1320  
        ___awdiv@quotient 0022           ___awmod@divisor 0070           ___awmod@counter 0075  
               ??_lcd_cmd 0072                 ??_lcd_lat 0070                 ??_lcd_dwr 0072  
               ??_lcd_msg 0075                 ??_isdigit 0070        __size_of__Umul8_16 0027  
               ??_sprintf 00A5          __end_of_voltaje1 0940                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070                ___fltol@f1 0051  
          __pcstackCOMMON 0070             __end_of_scale 0C9F                __div_to_l_ 1085  
      __size_of_lcd_ready 0029           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020              sprintf@width 00BB  
              __pbssBANK1 00C7             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 1B93                __pmaintext 1BF6                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
               ?___xxtofl 0070                 ?_lcd_init 0070                __stringtab 1800  
       __end_of__npowers_ 1878         __end_of_lcd_ready 1BBC           __size_of___flge 00A2  
         __size_of___fleq 004E                   ___fladd 0021                   ___fldiv 1143  
                 ___awdiv 1D7E                   ___flneg 0004                   ___awmod 0806  
                 ___flmul 0C9F                   ___flsub 1AFD                   ___fltol 1009  
                 ___lldiv 1D18           __size_of___wmul 0025                   ___llmod 1CC4  
                 ___lwdiv 1C32                _fround$885 004D                _fround$886 0049  
                 ___lwmod 1BBC                 ?_voltaje1 0070           __size_of_fround 020B  
                 __ptext1 085F                   __ptext2 152B                   __ptext3 0940  
                 __ptext4 0806                   __ptext5 1D7E                   __ptext6 000F  
                 __ptext7 1320                   __ptext8 1BBC                   __ptext9 1C32  
                 _lcd_cmd 1ABA                   _lcd_lat 1AAB                   _lcd_dwr 1ACC  
                 _lcd_msg 1B46               ?__div_to_l_ 0070                   _dpowers 1878  
                 _isdigit 000F                ??___xxtofl 0074          ___awmod@dividend 0072  
                 _sprintf 152B                   clrloop0 1002                ??_lcd_init 0073  
                 _voltaje 00C7      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                   psplit$0 B0028            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074                ??_voltaje1 006E             ??__tdiv_to_l_ 0078  
             ___fladd@grs 0065             ___xxtofl@sign 0078               ___fldiv@grs 0052  
             ___fldiv@rem 004B               ___flmul@grs 0032       __size_of__div_to_l_ 00BE  
          __end_of___flge 1E89            __end_of___fleq 1CC4            __end_of___wmul 1B46  
       pnum$text2_split_1 0028            __end_of_fround 152B       start_initialization 07F3  
     __end_of__tdiv_to_l_ 2000           ___llmod@divisor 0070           ___llmod@counter 0079  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 1B6C                  ??_fround 0042  
           sprintf@tmpval 00B3                 ___fladd@a 0056                 ___fladd@b 0052  
              fround@prec 0051                 ___fldiv@a 003E                 ___fldiv@b 0042  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0         __size_of___xxtofl 00BA         __size_of_lcd_init 001F  
             sprintf@flag 00B9               sprintf@eexp 00B7               sprintf@fval 00BD  
             sprintf@prec 00C1          ___lwdiv@dividend 0078                  ?___fladd 0052  
                ?___fldiv 003E                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 1844                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 _lcd_ready 1B93                 __pstrings 1800  
             __tdiv_to_l_ 1F43                  ?_lcd_cmd 0070                  ?_lcd_lat 0070  
                ?_lcd_dwr 0070                  ?_lcd_msg 0073              ??__div_to_l_ 0078  
       __size_of_voltaje1 00E1                  ?_isdigit 0070                 _scale$887 004C  
        ___lwdiv@quotient 007B                  ?_sprintf 00A0            __size_of_scale 035F  
          ___wmul@product 0074                 clear_ram0 1001        __end_of__div_to_l_ 1143  
              ?_lcd_ready 0070                _ADCON0bits 001F               __stringbase 180F  
              _ADCON1bits 009F         ___wmul@multiplier 0070               ??__Umul8_16 0072  
        __size_of___fladd 0288          __size_of___fldiv 01DD          __size_of___awdiv 0069  
        __size_of___flneg 000B          __size_of___awmod 0059          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C          __size_of___lldiv 0066  
        __size_of___llmod 0054          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 1810               _isdigit$710 0070          __size_of_lcd_cmd 0012  
        __size_of_lcd_lat 000F          __size_of_lcd_dwr 0012          __size_of_lcd_msg 0026  
              sprintf@val 00AF                  ___xxtofl 1E89          __size_of_isdigit 0012  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 0C9F  
                __ptext11 1B6C                  __ptext20 0021                  __ptext12 1F43  
                __ptext21 0004                  __ptext13 1085                  __ptext30 1AAB  
                __ptext22 1DE7                  __ptext14 1E89                  __ptext23 1C76  
                __ptext15 1B21                  __ptext24 1B46                  __ptext16 1CC4  
                __ptext25 1ACC                  __ptext17 1D18                  __ptext26 1143  
                __ptext18 1009                  __ptext27 1ADE                  __ptext19 1AFD  
                __ptext28 1ABA                  __ptext29 1B93         __CFG_BOR4V$BOR40V 0000  
                __powers_ 1810                  _lcd_init 1ADE          __size_of_sprintf F2C8  
           __size_of_main 003C                 pnum$text2 000B                  lcd_cmd@x 0072  
                lcd_dwr@x 0072                  lcd_msg@c 0073                  _voltaje1 085F  
             ??_lcd_ready 0070                  isdigit@c 0071                  scale@scl 0050  
               sprintf@ap 00AE          __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024  
               sprintf@sp 00C3          __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072  
        ___lldiv@dividend 0074                 stringcode 180A                _OSCCONbits 008F  
            ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070                  sprintf@c 00C4  
                sprintf@f 00A0          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 180A                  stringtab 1800  
           ___fladd@signs 0062              ___fladd@aexp 0063              ___fladd@bexp 0064  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
